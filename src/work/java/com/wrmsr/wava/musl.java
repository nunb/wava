package com.wrmsr.wava;

public final class musl
{
    public static final class Imports
    {
        public VI _Exit;
        public VILLLL __addtf3;
        public VI __block_all_sigs;
        public VILLLL __divtf3;
        public II __dl_invalid_handle;
        public VII __dl_seterr;
        public VID __extenddftf2;
        public VIF __extendsftf2;
        public III __fdopen;
        public LLL __fixtfdi;
        public ILL __fixtfsi;
        public VIIII __floatscan;
        public VII __floatsitf;
        public III __lctrans;
        public II __lctrans_cur;
        public VI __lock;
        public II __lockfile;
        public ILLLL __lttf2;
        public IIII __madvise;
        public IIIIIIL __mmap;
        public IIIIII __mremap;
        public VILLLL __multf3;
        public III __munmap;
        public ILLLL __netf2;
        public II __randname;
        public IIIIII __rem_pio2_large;
        public II __set_thread_area;
        public VII __synccall;
        public II __syscall0;
        public III __syscall1;
        public IIII __syscall2;
        public IIIII __syscall3;
        public IIIIII __syscall4;
        public IIIIIII __syscall5;
        public IIIIIIII __syscall6;
        public IIIIIIII __syscall_cp;
        public DLL __trunctfdf2;
        public FLL __trunctfsf2;
        public VI __unlock;
        public VI __unlockfile;
        public VIIII __wait;
        public V abort;
        public IIII fcntl;
        public III fdopen;
        public II feclearexcept;
        public I fegetround;
        public II feraiseexcept;
        public II fesetround;
        public II fetestexcept;
        public IIII fprintf;
        public III iswctype;
        public II iswspace;
        public IIII mbtowc;
        public III nanosleep;
        public IIIIIII posix_spawn;
        public IIII posix_spawn_file_actions_adddup2;
        public II posix_spawn_file_actions_destroy;
        public II posix_spawn_file_actions_init;
        public I pthread_self;
        public IIII setitimer;
        public IIIII snprintf;
        public IIII sprintf;
        public II towlower;
        public II towupper;
        public II uname;
        public IIII vfprintf;
        public IIII vfscanf;
        public IIIII vsnprintf;
        public II wctype;
        public IIII __stdio_write;
        public IIII __stdout_write;

        public Imports()
        {
        }

        public Imports(
                VI _Exit,
                VILLLL __addtf3,
                VI __block_all_sigs,
                VILLLL __divtf3,
                II __dl_invalid_handle,
                VII __dl_seterr,
                VID __extenddftf2,
                VIF __extendsftf2,
                III __fdopen,
                LLL __fixtfdi,
                ILL __fixtfsi,
                VIIII __floatscan,
                VII __floatsitf,
                III __lctrans,
                II __lctrans_cur,
                VI __lock,
                II __lockfile,
                ILLLL __lttf2,
                IIII __madvise,
                IIIIIIL __mmap,
                IIIIII __mremap,
                VILLLL __multf3,
                III __munmap,
                ILLLL __netf2,
                II __randname,
                IIIIII __rem_pio2_large,
                II __set_thread_area,
                VII __synccall,
                II __syscall0,
                III __syscall1,
                IIII __syscall2,
                IIIII __syscall3,
                IIIIII __syscall4,
                IIIIIII __syscall5,
                IIIIIIII __syscall6,
                IIIIIIII __syscall_cp,
                DLL __trunctfdf2,
                FLL __trunctfsf2,
                VI __unlock,
                VI __unlockfile,
                VIIII __wait,
                V abort,
                IIII fcntl,
                III fdopen,
                II feclearexcept,
                I fegetround,
                II feraiseexcept,
                II fesetround,
                II fetestexcept,
                IIII fprintf,
                III iswctype,
                II iswspace,
                IIII mbtowc,
                III nanosleep,
                IIIIIII posix_spawn,
                IIII posix_spawn_file_actions_adddup2,
                II posix_spawn_file_actions_destroy,
                II posix_spawn_file_actions_init,
                I pthread_self,
                IIII setitimer,
                IIIII snprintf,
                IIII sprintf,
                II towlower,
                II towupper,
                II uname,
                IIII vfprintf,
                IIII vfscanf,
                IIIII vsnprintf,
                II wctype,
                IIII __stdio_write,
                IIII __stdout_write)
        {
            this._Exit = _Exit;
            this.__addtf3 = __addtf3;
            this.__block_all_sigs = __block_all_sigs;
            this.__divtf3 = __divtf3;
            this.__dl_invalid_handle = __dl_invalid_handle;
            this.__dl_seterr = __dl_seterr;
            this.__extenddftf2 = __extenddftf2;
            this.__extendsftf2 = __extendsftf2;
            this.__fdopen = __fdopen;
            this.__fixtfdi = __fixtfdi;
            this.__fixtfsi = __fixtfsi;
            this.__floatscan = __floatscan;
            this.__floatsitf = __floatsitf;
            this.__lctrans = __lctrans;
            this.__lctrans_cur = __lctrans_cur;
            this.__lock = __lock;
            this.__lockfile = __lockfile;
            this.__lttf2 = __lttf2;
            this.__madvise = __madvise;
            this.__mmap = __mmap;
            this.__mremap = __mremap;
            this.__multf3 = __multf3;
            this.__munmap = __munmap;
            this.__netf2 = __netf2;
            this.__randname = __randname;
            this.__rem_pio2_large = __rem_pio2_large;
            this.__set_thread_area = __set_thread_area;
            this.__synccall = __synccall;
            this.__syscall0 = __syscall0;
            this.__syscall1 = __syscall1;
            this.__syscall2 = __syscall2;
            this.__syscall3 = __syscall3;
            this.__syscall4 = __syscall4;
            this.__syscall5 = __syscall5;
            this.__syscall6 = __syscall6;
            this.__syscall_cp = __syscall_cp;
            this.__trunctfdf2 = __trunctfdf2;
            this.__trunctfsf2 = __trunctfsf2;
            this.__unlock = __unlock;
            this.__unlockfile = __unlockfile;
            this.__wait = __wait;
            this.abort = abort;
            this.fcntl = fcntl;
            this.fdopen = fdopen;
            this.feclearexcept = feclearexcept;
            this.fegetround = fegetround;
            this.feraiseexcept = feraiseexcept;
            this.fesetround = fesetround;
            this.fetestexcept = fetestexcept;
            this.fprintf = fprintf;
            this.iswctype = iswctype;
            this.iswspace = iswspace;
            this.mbtowc = mbtowc;
            this.nanosleep = nanosleep;
            this.posix_spawn = posix_spawn;
            this.posix_spawn_file_actions_adddup2 = posix_spawn_file_actions_adddup2;
            this.posix_spawn_file_actions_destroy = posix_spawn_file_actions_destroy;
            this.posix_spawn_file_actions_init = posix_spawn_file_actions_init;
            this.pthread_self = pthread_self;
            this.setitimer = setitimer;
            this.snprintf = snprintf;
            this.sprintf = sprintf;
            this.towlower = towlower;
            this.towupper = towupper;
            this.uname = uname;
            this.vfprintf = vfprintf;
            this.vfscanf = vfscanf;
            this.vsnprintf = vsnprintf;
            this.wctype = wctype;
            this.__stdio_write = __stdio_write;
            this.__stdout_write = __stdout_write;
        }
    }

    private final VI _Exit;
    private final VILLLL __addtf3;
    private final VI __block_all_sigs;
    private final VILLLL __divtf3;
    private final II __dl_invalid_handle;
    private final VII __dl_seterr;
    private final VID __extenddftf2;
    private final VIF __extendsftf2;
    private final III __fdopen;
    private final LLL __fixtfdi;
    private final ILL __fixtfsi;
    private final VIIII __floatscan;
    private final VII __floatsitf;
    private final III __lctrans;
    private final II __lctrans_cur;
    private final VI __lock;
    private final II __lockfile;
    private final ILLLL __lttf2;
    private final IIII __madvise;
    private final IIIIIIL __mmap;
    private final IIIIII __mremap;
    private final VILLLL __multf3;
    private final III __munmap;
    private final ILLLL __netf2;
    private final II __randname;
    private final IIIIII __rem_pio2_large;
    private final II __set_thread_area;
    private final VII __synccall;
    private final II __syscall0;
    private final III __syscall1;
    private final IIII __syscall2;
    private final IIIII __syscall3;
    private final IIIIII __syscall4;
    private final IIIIIII __syscall5;
    private final IIIIIIII __syscall6;
    private final IIIIIIII __syscall_cp;
    private final DLL __trunctfdf2;
    private final FLL __trunctfsf2;
    private final VI __unlock;
    private final VI __unlockfile;
    private final VIIII __wait;
    private final V abort;
    private final IIII fcntl;
    private final III fdopen;
    private final II feclearexcept;
    private final I fegetround;
    private final II feraiseexcept;
    private final II fesetround;
    private final II fetestexcept;
    private final IIII fprintf;
    private final III iswctype;
    private final II iswspace;
    private final IIII mbtowc;
    private final III nanosleep;
    private final IIIIIII posix_spawn;
    private final IIII posix_spawn_file_actions_adddup2;
    private final II posix_spawn_file_actions_destroy;
    private final II posix_spawn_file_actions_init;
    private final I pthread_self;
    private final IIII setitimer;
    private final IIIII snprintf;
    private final IIII sprintf;
    private final II towlower;
    private final II towupper;
    private final II uname;
    private final IIII vfprintf;
    private final IIII vfscanf;
    private final IIIII vsnprintf;
    private final II wctype;
    private final IIII __stdio_write;
    private final IIII __stdout_write;

    @FunctionalInterface()
    public interface V
    {
        void invoke();
    }

    @FunctionalInterface()
    public interface VI
    {
        void invoke(int arg0);
    }

    @FunctionalInterface()
    public interface VII
    {
        void invoke(int arg0, int arg1);
    }

    @FunctionalInterface()
    public interface VIIII
    {
        void invoke(int arg0, int arg1, int arg2, int arg3);
    }

    @FunctionalInterface()
    public interface VILLLL
    {
        void invoke(int arg0, long arg1, long arg2, long arg3, long arg4);
    }

    @FunctionalInterface()
    public interface VIF
    {
        void invoke(int arg0, float arg1);
    }

    @FunctionalInterface()
    public interface VID
    {
        void invoke(int arg0, double arg1);
    }

    @FunctionalInterface()
    public interface I
    {
        int invoke();
    }

    @FunctionalInterface()
    public interface II
    {
        int invoke(int arg0);
    }

    @FunctionalInterface()
    public interface III
    {
        int invoke(int arg0, int arg1);
    }

    @FunctionalInterface()
    public interface IIII
    {
        int invoke(int arg0, int arg1, int arg2);
    }

    @FunctionalInterface()
    public interface IIIII
    {
        int invoke(int arg0, int arg1, int arg2, int arg3);
    }

    @FunctionalInterface()
    public interface IIIIII
    {
        int invoke(int arg0, int arg1, int arg2, int arg3, int arg4);
    }

    @FunctionalInterface()
    public interface IIIIIII
    {
        int invoke(
                int arg0,
                int arg1,
                int arg2,
                int arg3,
                int arg4,
                int arg5);
    }

    @FunctionalInterface()
    public interface IIIIIIII
    {
        int invoke(
                int arg0,
                int arg1,
                int arg2,
                int arg3,
                int arg4,
                int arg5,
                int arg6);
    }

    @FunctionalInterface()
    public interface IIIIIIL
    {
        int invoke(
                int arg0,
                int arg1,
                int arg2,
                int arg3,
                int arg4,
                long arg5);
    }

    @FunctionalInterface()
    public interface ILL
    {
        int invoke(long arg0, long arg1);
    }

    @FunctionalInterface()
    public interface ILLLL
    {
        int invoke(long arg0, long arg1, long arg2, long arg3);
    }

    @FunctionalInterface()
    public interface LILI
    {
        long invoke(int arg0, long arg1, int arg2);
    }

    @FunctionalInterface()
    public interface LLL
    {
        long invoke(long arg0, long arg1);
    }

    @FunctionalInterface()
    public interface FLL
    {
        float invoke(long arg0, long arg1);
    }

    @FunctionalInterface()
    public interface DLL
    {
        double invoke(long arg0, long arg1);
    }

    private final V[] _vTable = new V[1];

    private final void _vTable_init_0()
    {
        this._vTable[0] = this::__wasm_nullptr;
    }

    {
        _vTable_init_0();
    }

    private final VI[] _viTable = new VI[2];

    private final void _viTable_init_0()
    {
        this._viTable[0] = this::call;
        this._viTable[1] = this::do_setxid;
    }

    {
        _viTable_init_0();
    }

    private final VII[] _viiTable = new VII[0];

    private final VIIII[] _viiiiTable = new VIIII[0];

    private final VILLLL[] _villllTable = new VILLLL[0];

    private final VIF[] _vifTable = new VIF[0];

    private final VID[] _vidTable = new VID[0];

    private final I[] _iTable = new I[0];

    private final II[] _iiTable = new II[3];

    private final void _iiTable_init_0()
    {
        this._iiTable[0] = this::mclose;
        this._iiTable[1] = this::ms_close;
        this._iiTable[2] = this::__stdio_close;
    }

    {
        _iiTable_init_0();
    }

    private final III[] _iiiTable = new III[1];

    private final void _iiiTable_init_0()
    {
        this._iiiTable[0] = this::realloc;
    }

    {
        _iiiTable_init_0();
    }

    private final IIII[] _iiiiTable = new IIII[9];

    private final void _iiiiTable_init_0()
    {
        this._iiiiTable[0] = this::mread;
        this._iiiiTable[1] = this::mwrite;
        this._iiiiTable[2] = this::ms_write;
        this._iiiiTable[3] = this::do_read;
        this._iiiiTable[4] = this::do_read$2e$314;
        this._iiiiTable[5] = this::do_read$2e$317;
        this._iiiiTable[6] = this::__importThunk___stdio_write;
        this._iiiiTable[7] = this::__stdio_read;
        this._iiiiTable[8] = this::__importThunk___stdout_write;
    }

    {
        _iiiiTable_init_0();
    }

    private final IIIII[] _iiiiiTable = new IIIII[0];

    private final IIIIII[] _iiiiiiTable = new IIIIII[0];

    private final IIIIIII[] _iiiiiiiTable = new IIIIIII[0];

    private final IIIIIIII[] _iiiiiiiiTable = new IIIIIIII[0];

    private final IIIIIIL[] _iiiiiilTable = new IIIIIIL[0];

    private final ILL[] _illTable = new ILL[0];

    private final ILLLL[] _illllTable = new ILLLL[0];

    private final LILI[] _liliTable = new LILI[3];

    private final void _liliTable_init_0()
    {
        this._liliTable[0] = this::mseek;
        this._liliTable[1] = this::ms_seek;
        this._liliTable[2] = this::__stdio_seek;
    }

    {
        _liliTable_init_0();
    }

    private final LLL[] _lllTable = new LLL[0];

    private final FLL[] _fllTable = new FLL[0];

    private final DLL[] _dllTable = new DLL[0];

    private final int[] _tableIndices = {
            0,
            0,
            0,
            1,
            0,
            0,
            2,
            1,
            1,
            1,
            3,
            4,
            5,
            0,
            2,
            6,
            2,
            7,
            8
    };

    private final java.nio.ByteBuffer _memory;

    private final String[] _memorySegments = {
            "" + 
                    "AAAADAAAAAQQAQAAAAAAEAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAgACAAIAAgACAAIAAgACAAIAAyACIAIgAiACIAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAFgBMAEwATABMAEwATABMAEwATA" +
                    "BMAEwATABMAEwATACNgI2AjYCNgI2AjYCNgI2AjYCNgEwATABMAEwATABMAEwAjVCNUI1QjVCNUI1QjFCMUIxQjFCMUIxQjFCMUIxQjFCMUIxQjFCMUIxQjF" +
                    "CMUIxQjFCMUEwATABMAEwATABMAI1gjWCNYI1gjWCNYIxgjGCMYIxgjGCMYIxgjGCMYIxgjGCMYIxgjGCMYIxgjGCMYIxgjGBMAEwATABMACAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQAAAABCAFAAAAAAMgAAAGAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcA" +
                    "AAAIAAAACQAAAAoAAAALAAAADAAAAA0AAAAOAAAADwAAABAAAAARAAAAEgAAABMAAAAUAAAAFQAAABYAAAAXAAAAGAAAABkAAAAaAAAAGwAAABwAAAAdAAAA" +
                    "HgAAAB8AAAAgAAAAIQAAACIAAAAjAAAAJAAAACUAAAAmAAAAJwAAACgAAAApAAAAKgAAACsAAAAsAAAALQAAAC4AAAAvAAAAMAAAADEAAAAyAAAAMwAAADQA" +
                    "AAA1AAAANgAAADcAAAA4AAAAOQAAADoAAAA7AAAAPAAAAD0AAAA+AAAAPwAAAEAAAABhAAAAYgAAAGMAAABkAAAAZQAAAGYAAABnAAAAaAAAAGkAAABqAAAA" +
                    "awAAAGwAAABtAAAAbgAAAG8AAABwAAAAcQAAAHIAAABzAAAAdAAAAHUAAAB2AAAAdwAAAHgAAAB5AAAAegAAAFsAAABcAAAAXQAAAF4AAABfAAAAYAAAAGEA" +
                    "AABiAAAAYwAAAGQAAABlAAAAZgAAAGcAAABoAAAAaQAAAGoAAABrAAAAbAAAAG0AAABuAAAAbwAAAHAAAABxAAAAcgAAAHMAAAB0AAAAdQAAAHYAAAB3AAAA" +
                    "eAAAAHkAAAB6AAAAewAAAHwAAAB9AAAAfgAAAH8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAACSAAAAAEMAsAAAAACTAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AQAAAAIAAAADAAAABAAAAAUAAAAGAAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQAAAA4AAAAPAAAAEAAAABEAAAASAAAAEwAAABQAAAAVAAAAFgAAABcA" +
                    "AAAYAAAAGQAAABoAAAAbAAAAHAAAAB0AAAAeAAAAHwAAACAAAAAhAAAAIgAAACMAAAAkAAAAJQAAACYAAAAnAAAAKAAAACkAAAAqAAAAKwAAACwAAAAtAAAA" +
                    "LgAAAC8AAAAwAAAAMQAAADIAAAAzAAAANAAAADUAAAA2AAAANwAAADgAAAA5AAAAOgAAADsAAAA8AAAAPQAAAD4AAAA/AAAAQAAAAEEAAABCAAAAQwAAAEQA" +
                    "AABFAAAARgAAAEcAAABIAAAASQAAAEoAAABLAAAATAAAAE0AAABOAAAATwAAAFAAAABRAAAAUgAAAFMAAABUAAAAVQAAAFYAAABXAAAAWAAAAFkAAABaAAAA" +
                    "WwAAAFwAAABdAAAAXgAAAF8AAABgAAAAQQAAAEIAAABDAAAARAAAAEUAAABGAAAARwAAAEgAAABJAAAASgAAAEsAAABMAAAATQAAAE4AAABPAAAAUAAAAFEA" +
                    "AABSAAAAUwAAAFQAAABVAAAAVgAAAFcAAABYAAAAWQAAAFoAAAB7AAAAfAAAAH0AAAB+AAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPMAAAABVTeW1ib2wgbm90IGZvdW5kOiAlcwAAAA9IAAAABAAAAAAAABB8AAAADgAAAAAAAG3m7N4F" +
                    "AAsAAAAQjAAAAAQAAAAAAAAQoAAAAGhjVVVVVVXVP3r+EBEREcE//kGzG7qhqz831gaE9GSWP5OEbunjJoI/KANWySJtbT8Vg+D+yNtXPwFl8vLYREM/aBCN" +
                    "GvcmMD+mkjegiH4UP+mn8DIPuBI/c1Ng28t1877Uer90cCr7PgAAERAAAAAwn8kYNE1V1T9yn5k4/RLBP/5ahh3JVKs/zjOMkPMdmT9O9Oz8rV1oP80bl7+5" +
                    "YoM/AAARQAAAACNBc3NlcnRpb24gZmFpbGVkOiAlcyAoJXM6ICVzOiAlZCkKAAAAEfAAAAAgT7thBWes3T8YLURU+yHpP5v2gdILc+8/GC1EVPsh+T8AABIQ" +
                    "AAAAWA1VVVVVVdU/xOuYmZmZyb//gwCSJEnCP3EWI/7Gcby/biBMxc1Ftz9tmnSv8rCzv1E90KBmDbE/mv3eUi3erb/rDXYkS3upPy9saixEtKK/Edoi4zqt" +
                    "kD8AABJwAAAAIOJlLyJ/K3o8B1wUMyamgTy9y/B6iAdwPAdcFDMmppE8AAASkAAAABA4Y+0+2g9JP16Yez/aD8k/AAASoAAAABSpqqo+mMpMvg31ET5HEtq9" +
                    "Jax8PQAAEsAAAAAQaTesMWghIjO0DxQzaCGiMwAAE/AAAAAJL2Rldi90dHkAAAAUAAAAAA8vcHJvYy9zZWxmL2V4ZQAAABQQAAAAF1Vuc3VwcG9ydGVkIHJl" +
                    "cXVlc3QgJWQAAAAUMAAAAB5EeW5hbWljIGxvYWRpbmcgbm90IHN1cHBvcnRlZAAAABRQAAAABSUuKmUAAAAUcAAAABAAAAAAAADgPwAAAAAAAOC/AAAUgAAA" +
                    "APgWVueerwPSPJsroYabhAY9gnZJaMIlPD0R6i2BmZdxPZVkeeF//aU9u73X2d982z2V1iboCy4RPjqMMOKOeUU+SK+8mvLXej6N7bWg98awPvFo44i1+OQ+" +
                    "LUMc6+I2Gj/8qfHSTWJQP3sUrkfheoQ/mpmZmZmZuT8AAAAAAADwPwAAAAAAACRAAAAAAAAAWUAAAAAAAECPQAAAAAAAiMNAAAAAAABq+EAAAAAAgIQuQQAA" +
                    "AADQEmNBAAAAAITXl0EAAAAAZc3NQQAAACBfoAJCAAAA6HZIN0IAAACilBptQgAAQOWcMKJCAACQHsS81kIAADQm9WsMQwAAFYAAAAA8lb/WM703hjWsxSc3" +
                    "F7fROG8SgzoK1yM8zczMPQAAgD8AACBBAADIQgAAekQAQBxGAFDDRwAkdEmAlhhLAAAVwAAAEABdPX9mnqDmPwAAAAAAiDk9RBd1+lKw5j8AAAAAAADYPP7Z" +
                    "C3USwOY/AAAAAAB4KL2/dtTd3M/mPwAAAAAAwB49KRplPLLf5j8AAAAAAADYvOM6WZiS7+Y/AAAAAAAAvLyGk1H5ff/mPwAAAAAA2C+9oy30ZnQP5z8AAAAA" +
                    "AIgsvcNf7Oh1H+c/AAAAAADAEz0Fz+qGgi/nPwAAAAAAMDi9UoGlSJo/5z8AAAAAAMAAvfzM1zW9T+c/AAAAAACILz3xZ0JW61/nPwAAAAAA4AM9SG2rsSRw" +
                    "5z8AAAAAANAnvThd3k9pgOc/AAAAAAAA3bwAHaw4uZDnPwAAAAAAAOM8eAHrcxSh5z8AAAAAAADtvGDQdgl7sec/AAAAAABAID0zwTAB7cHnPwAAAAAAAKA8" +
                    "Nob/YmrS5z8AAAAAAJAmvTtOzzbz4uc/AAAAAADgAr3ow5GEh/PnPwAAAAAAWCS9Ths+VCcE6D8AAAAAAAAzPRoH0a3SFOg/AAAAAAAADz1+zUyZiSXoPwAA" +
                    "AAAAwCG90EK5Hkw26D8AAAAAANApPbXKI0YaR+g/AAAAAAAQRz28W58X9FfoPwAAAAAAYCI9r5FEm9lo6D8AAAAAAMQyvZWjMdnKeeg/AAAAAAAAI724ZYrZ" +
                    "x4roPwAAAAAAgCq9AFh4pNCb6D8AAAAAAADtvCOiKkLlrOg/AAAAAAAoMz36Gda6Bb7oPwAAAAAAtEI9g0O1FjLP6D8AAAAAANAuvUxmCF5q4Og/AAAAAABQ" +
                    "IL0HeBWZrvHoPwAAAAAAKCg9Diwo0P4C6T8AAAAAALAcvZb/kQtbFOk/AAAAAADgBb35L6pTwyXpPwAAAAAAQPU8SsbNsDc36T8AAAAAACAXPa6YXyu4SOk/" +
                    "AAAAAAAACb3LUsjLRFrpPwAAAAAAaCU9IW92mt1r6T8AAAAAANA2vSpO3p+Cfek/AAAAAAAAAb2jI3rkM4/pPwAAAAAAAC09BAbKcPGg6T8AAAAAAKQ4vYn/" +
                    "U027suk/AAAAAABcNT1b8aOCkcTpPwAAAAAAuCY9xbhLGXTW6T8AAAAAAADsvI4j4xlj6Ok/AAAAAADQFz0C8weNXvrpPwAAAAAAQBY9TeVde2YM6j8AAAAA" +
                    "AAD1vPa4ju16Huo/AAAAAADgCT0nLkrsmzDqPwAAAAAA2Co9XQpGgMlC6j8AAAAAAPAavZslPrIDVeo/AAAAAABgCz0TYvSKSmfqPwAAAAAAiDg9p7MwE555" +
                    "6j8AAAAAACARPY0uwVP+i+o/AAAAAADABj3S/HlVa57qPwAAAAAAuCm9uG81IeWw6j8AAAAAAHArPYHz079rw+o/AAAAAAAA2TyAJzw6/9XqPwAAAAAAAOQ8" +
                    "o9JamZ/o6j8AAAAAAJAsvWfzIuZM++o/AAAAAABQFj2Qt40pBw7rPwAAAAAA1C89qYmabM4g6z8AAAAAAHASPUsaT7iiM+s/AAAAAABHTT3nR7cVhEbrPwAA" +
                    "AAAAODi9OlnljXJZ6z8AAAAAAACYPGrF8SlubOs/AAAAAADQCj1QXvvydn/rPwAAAAAAgN48skkn8oyS6z8AAAAAAMAEvQMGoTCwpes/AAAAAABwDb1mb5q3" +
                    "4LjrPwAAAAAAkA09/8FLkB7M6z8AAAAAAKACPW+h88Np3+s/AAAAAAB4H724HddbwvLrPwAAAAAAoBC96bJBYSgG7D8AAAAAAEARveBShd2bGew/AAAAAADg" +
                    "Cz3uZPrZHC3sPwAAAAAAQAm9L9D/X6tA7D8AAAAAANAOvRX9+nhHVOw/AAAAAABmOT3L0Fcu8WfsPwAAAAAAEBq9tsGIiah77D8AAAAAgEVYvTPnBpRtj+w/" +
                    "AAAAAABIGr3fxFFXQKPsPwAAAAAAAMs8lJDv3CC37D8AAAAAAEABPYkWbS4Py+w/AAAAAAAg8DwSxF1VC9/sPwAAAAAAYPM8O6tbWxXz7D8AAAAAAJAGvbyJ" +
                    "B0otB+0/AAAAAACgCT36yAgrUxvtPwAAAAAA4BW9hYoNCIcv7T8AAAAAACgdPQOiyurIQ+0/AAAAAACgAT2RpPvcGFjtPwAAAAAAAN88oeZi6HZs7T8AAAAA" +
                    "AKADvU6DyRbjgO0/AAAAAADYDL2QYP9xXZXtPwAAAAAAwPQ8rjLbA+ap7T8AAAAAAJD/PCWDOtZ8vu0/AAAAAACA6TxFtAHzIdPtPwAAAAAAIPW8vwUcZNXn" +
                    "7T8AAAAAAHAdveyaezOX/O0/AAAAAAAUFr1efRlrZxHuPwAAAAAASAs956P1FEYm7j8AAAAAAM5APVzuFjszO+4/AAAAAABoDD20P4vnLlDuPwAAAAAAMAm9" +
                    "aG1nJDll7j8AAAAAAADlvERMx/tReu4/AAAAAAD4B70mt813eY/uPwAAAAAAcPO86JCkoq+k7j8AAAAAANDlPOTKfIb0ue4/AAAAAAAaFj0NaI4tSM/uPwAA" +
                    "AAAAUPU8FIUYoqrk7j8AAAAAAEDGPBNaYe4b+u4/AAAAAACA7rwGQbYcnA/vPwAAAAAAiPq8Y7lrNysl7z8AAAAAAJAsvXVy3UjJOu8/AAAAAAAAqjwkRW5b" +
                    "dlDvPwAAAAAA8PS8/USIeTJm7z8AAAAAAIDKPDi+nK39e+8/AAAAAAC8+jyCPCQC2JHvPwAAAAAAYNS8jpCegcGn7z8AAAAAAAwLvRHVkja6ve8/AAAAAADg" +
                    "wLyUcY8rwtPvPwAAAACA3hC97iMqa9np7z8AAAAAAEPuPAAAAAAAAPA/AAAAAAAAAAC+vFr6GgvwPwAAAAAAQLO8AzP7qT0W8D8AAAAAABcSvYICOxRoIfA/" +
                    "AAAAAABAujxsgHc+mizwPwAAAAAAmO88yrsRLtQ38D8AAAAAAEDHvIl/bugVQ/A/AAAAAAAw2DxnVPZyX07wPwAAAAAAPxq9WoUV07BZ8D8AAAAAAIQCvZUf" +
                    "PA4KZfA/AAAAAABg8Twa990pa3DwPwAAAAAAJBU9LahyK9R78D8AAAAAAKDpvNCbdRhFh/A/AAAAAABA5jzIB2b2vZLwPwAAAAAAeAC9g/PGyj6e8D8AAAAA" +
                    "AACYvDA5H5vHqfA/AAAAAACg/zz8iPlsWLXwPwAAAAAAyPq8imzkRfHA8D8AAAAAAMDZPBZIciuSzPA/AAAAAAAgBT3YXTkjO9jwPwAAAAAA0Pq889HTMuzj" +
                    "8D8AAAAAAKwbPaap31+l7/A/AAAAAADoBL3w0v6vZvvwPwAAAAAAMA29SyPXKDAH8T8AAAAAAFDxPFtbEtABE/E/AAAAAAAA7Dz5Kl6r2x7xPwAAAAAAvBY9" +
                    "1TFswL0q8T8AAAAAAEDoPH0E8hSoNvE/AAAAAADQDr3pLamumkLxPwAAAAAA4Og8ODFPk5VO8T8AAAAAAEDrPHGOpciYWvE/AAAAAAAwBT3fw3FUpGbxPwAA" +
                    "AAAAOAM9EVJ9PLhy8T8AAAAAANQoPZ+7lYbUfvE/AAAAAADQBb2TjYw4+YrxPwAAAAAAiBy9Zl03WCaX8T8AAAAAAPARPafLb+tbo/E/AAAAAABIED3jhxP4" +
                    "ma/xPwAAAAAAOUe9VF0EhOC78T8AAAAAAOQkPUMcKJUvyPE/AAAAAAAgCr2yuWgxh9TxPwAAAAAAgOM8MUC0Xufg8T8AAAAAAMDqPDjZ/CJQ7fE/AAAAAACQ" +
                    "AT33zTiEwfnxPwAAAAAAeBu9j41iiDsG8j8AAAAAAJQtPR6oeDW+EvI/AAAAAAAA2DxB3X2RSR/yPwAAAAAANCs9IxN5ot0r8j8AAAAAAPgZPedhdW56OPI/" +
                    "AAAAAADIGb0nFIL7H0XyPwAAAAAAMAI9AqayT85R8j8AAAAAAEgTvbDOHnGFXvI/AAAAAABwEj0WfeJlRWvyPwAAAAAA0BE9D+AdNA548j8AAAAAAO4xPT5j" +
                    "9eHfhPI/AAAAAADAFL0wu5F1upHyPwAAAAAA2BO9Cd8f9Z2e8j8AAAAAALAIPZsO0WaKq/I/AAAAAAB8Ir062trQf7jyPwAAAAAANCo9+Rp3OX7F8j8AAAAA" +
                    "AIAQvdkC5KaF0vI/AAAAAADQDr15FWQflt/yPwAAAAAAIPS8zy4+qa/s8j8AAAAAAJgkvSKIvUrS+fI/AAAAAAAwFr0ltjEK/gbzPwAAAAAANjK9C6Xu7TIU" +
                    "8z8AAAAAgN9wvbjXTPxwIfM/AAAAAABIIr2i6ag7uC7zPwAAAAAAmCW9Zhdksgg88z8AAAAAANAePSf642ZiSfM/AAAAAAAA3LwPn5JfxVbzPwAAAAAA2DC9" +
                    "uYjeojFk8z8AAAAAAMgiPTmqOjencfM/AAAAAABgID3+dB4jJn/zPwAAAAAAYBa9ONgFba6M8z8AAAAAAOAKvcM+cRtAmvM/AAAAAAByRL0goOU026fzPwAA" +
                    "AAAAIAg9lW7sv3+18z8AAAAAAIA+PfKoE8Mtw/M/AAAAAACA7zwi4e1E5dDzPwAAAAAAoBe9uzQSTKbe8z8AAAAAADAmPcxOHN9w7PM/AAAAAACmSL2MfqwE" +
                    "RfrzPwAAAAAA3Dy9u6BnwyII9D8AAAAAALglPZUu9yEKFvQ/AAAAAADAHj1GRgkn+yP0PwAAAAAAYBO9IKlQ2fUx9D8AAAAAAJgjPeu5hD/6P/Q/AAAAAAAA" +
                    "+jwZiWFgCE70PwAAAAAAwPa8AdKnQiBc9D8AAAAAAMALvRYAHe1BavQ/AAAAAACAEr0mM4tmbXj0PwAAAAAA4DA9ADzBtaKG9D8AAAAAAEAtvQSvkuHhlPQ/" +
                    "AAAAAAAgDD1y09fwKqP0PwAAAAAAUB69Abht6n2x9D8AAAAAAIAHPeEpNtXav/Q/AAAAAACAE70ywRe4Qc70PwAAAAAAgAA92939mbLc9D8AAAAAAHAsPZar" +
                    "2IEt6/Q/AAAAAADgHL0CLZ12svn0PwAAAAAAIBk9wTFFf0EI9T8AAAAAAMAIvSpmz6LaFvU/AAAAAAAA+rzqUT/ofSX1PwAAAAAACEo92k6dVis09T8AAAAA" +
                    "ANgmvRqs9vTiQvU/AAAAAABEMr3blF3KpFH1PwAAAAAAPEg9axHp3XBg9T8AAAAAALAkPd4ptTZHb/U/AAAAAABaQT0OxOLbJ371PwAAAAAA4Cm9b8eX1BKN" +
                    "9T8AAAAAAAgjvUwL/ycInPU/AAAAAADsTT0nVEjdB6v1PwAAAAAAAMS89Hqo+xG69T8AAAAAAAgwPQtGWYomyfU/AAAAAADIJr0/jpmQRdj1PwAAAAAAmkY9" +
                    "4SCtFW/n9T8AAAAAAEAbvcrr3CCj9vU/AAAAAABwFz243Ha54QX2PwAAAAAA+CY9FffN5ioV9j8AAAAAAAABPTFVOrB+JPY/AAAAAADQFb21KRkd3TP2PwAA" +
                    "AAAA0BK9E8PMNEZD9j8AAAAAAIDqvPqOvP65UvY/AAAAAABgKL2XM1WCOGL2PwAAAAAA/nE9jjIIx8Fx9j8AAAAAACA3vX6pTNRVgfY/AAAAAACA5jxxlJ6x" +
                    "9JD2PwAAAAAAeCm9AAAlwAAAAIDNO39mnqDmP4cB63MUoec/26AqQuWs6D+Q8KOCkcTpP63TWpmf6Oo/nFKF3ZsZ7D+HpPvcGFjtP9qQpKKvpO4/AAAAAAAA" +
                    "8D8PiflsWLXwP3tRfTy4cvE/OGJ1bno48j8VtzEK/gbzPyI0Ekym3vM/Jyo21dq/9D8pVEjdB6v1PwAAJkgAAAAIAAAAPwAAAL8AACZQAAAABSUuKmYAAAAm" +
                    "YAAAAAIwAAAAJnAAAAACLgAAACaAAAAAEDAwMDAwMDAwMDAwMDAwMAAAACaQAAAABHJ3YQAAACagAAAABHJ3YQAAACawAAAABSUuKmcAAAAmwAAAAAhMT0dO" +
                    "QU1FAAAAJtAAAAEB/////////////////////////////////////////////////////////////////wABAgMEBQYHCAn/////////CgsMDQ4PEBESExQV" +
                    "FhcYGRobHB0eHyAhIiP///////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI///////////////////////////////////////////////////////////" +
                    "//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8A" +
                    "ACfgAAAACQABAgQHAwYFAAAAJ/AAAAAwAAAAAAAAAAAs/v///7+yP9Y0s1tSiSdAJRgwFWNtgUBt9Bg+mU3BQGYVkA7UEuJAAAAoIAAAADC8OVs21XhkQGMF" +
                    "a05Yor9AP4zTVFJmAUFDK6WD2oMoQT0L3ihrpilBxTCVLG39FMEAAChQAAAAMNmMzCmPPbQ9TLBy0f+/sj/TPZW5sFcXQOmIhwqS42BAgcTInfkMkECm48ZT" +
                    "6RefQAAAKIAAAAAwQxVe+7OxVEDOwCHaoDugQG0eWXvSZ9JAciPgl+O160CgVHofGJHhQAnG275X6rTAAAAosAAAADCCy95qA80yPkIIjQ7uv7I/9ZwUYfzA" +
                    "CkDdri2WmE9FQB/9XuLbWWVA4CH6gXzXZEAAACjgAAAAMKZD478iYUhAs05UhoMthkBj/E3kS/CsQChqx9dsPLlAwLFP2aqoo0AP9Bwg66diwAAAKRAAAAAw" +
                    "22v3VDsxhD40Pog+xb6yP5x3J+eX+P8/5W/5qr/9LEBK3Pspjqo/QLRLgXGxQDBAAAApQAAAADDtesD3ll0+QEBL0eSR1XBAIr+zIkVmikAUwlycfJeLQGUT" +
                    "AA5TlWpAMSmz+Go+FcAAAClwAAAAMAAAAAAAAAAAMv3/////sb95p0+00CkgwGPoGXsCEXDA/MpNzW5qo8A9ZMw2C4W0wAAAKaAAAAAoUWepBzMiXUA4aVlQ" +
                    "ffOtQF+wtm670uNAvamfjw+B/EDcSSxPd0HnQAAAKdAAAAAwzJXkR7EYqb3G+5rm//+xv79rDPlwoxDAgxd9Wi/rUMBjzEJns7N0wNeLoyjvpnXAAAAqAAAA" +
                    "ACjexZgMgWBOQGQoflwCbZBAYB2+j/hat0A4+nb6uMzCQGToC8cdzKJAAAAqMAAAADCGquFvA+ElvkviwPf2/7G/dICkrrJFA8AUTrlMSvc1wEUaCkIiCk3A" +
                    "D9iSqKxyP8AAACpgAAAAKNN9B4SS7UFADnxKRjmYdkDWYRBtbqaSQH6bw7j8n5FAgZA3/JayZUAAACqQAAAAMG0CJ+kW03e+Qh5eSWL/sb9DqCSKOTb3v/On" +
                    "r+3zih7AA2MkxeZiJsAP54+vgd4JwAAAKsAAAAAoWVmLkGU4NkCPh+gOngZhQJsH6kKG53BA//q2OgM8Y0AJGDlEs1AtQAAAKvAAAAAYAAAAAAAAlj2TSjxB" +
                    "GWsLRMpsCkaglhBHAAArEAAAABiqxiNDwhL9RZMyC0jUHkRJWTNNSWnrp8gAACswAAAAGHnsoS3//5U9hr26QJAcB0PNZ4BES7/4RAAAK1AAAAAYoI2lQgfd" +
                    "AUWUPpNGHa9dR8GIDEe+UqfFAAArcAAAABgbaJYxcP+VPeMHVkDFfCpC384qQ+S7JkMAACuQAAAAGBYJQ0IcbDFEX4JnRWfjyUVXRR1FWT8VwwAAK7AAAAAY" +
                    "24khNCr2lT2/xP8//e1nQXFU/UGMBYJBAAAr0AAAABi47PJBj6yGQykyU0Tlu1xEmKpUQ1jzqcAAACvwAAAAGAAAAAAAAJC9hk4BwRSIgMN2UxvFWiikxQAA" +
                    "LBAAAAAUmBHpQuubb0XblR5HfAjkR7oLOkcAACwwAAAAGIrFSK3//4+9iBuFwHtZh8KbnaXDeTetwwAALFAAAAAUCARzQhNog0TE17pFyGUWRu5gFkUAACxw" +
                    "AAAAGBsIL7G4/4+9lS0awFK6r8ESUWjCZZX7wQAALJAAAAAUlGwPQsrBtENzM5VE5v+MRLiULUMAACywAAAAGLeYvrMS+4+9zLG5v59X9MA2FzPBDfROwAAA" +
                    "LNAAAAAULcOxQfA0CEMyPIdDGuAZQ5qFakEAACzwAAAAMAAAAAAAAAAA8/3///8/ur/3eWeikUUwwHa15FPQvIfAFXT4QOckx8BqnNBl0KbnwAAALSAAAAAw" +
                    "5c1b3qYsZEAZhNjQYpG+QJhet7CaVwBBGZyGclP2JUFcrRl30lckQRiqpQ5p+RHBAAAtUAAAADCYoKEaQ/q2ve9/Wcv/P7q/S60DyuYcIMCwuadsbfVmwE9z" +
                    "MWnGdJXAnaf9iONopMAAAC2AAAAAMLIRWv+yUVRAOfh75zEfn0ApzmQNHw/RQJfRuqptV+hASzZ8zwRL20AEoP/8Lm+ywAAALbAAAAAwT8iP06nPNb5U7a5R" +
                    "6z+6v//ZAjPCcBLA2hZdwnHsTMBf1RhH04dswPYbXF+5ZmvAAAAt4AAAADDkZ9PMI9VHQD7uMcDrDoVAmnyORE5oqkCmVB2muqu1QEvf1A16vJ1AHzEKKXDm" +
                    "YMAAAC4QAAAAMNImxkQm8Ye+ELBIkY4+ur/aTrtphAQGwH+QaMHiqTPAqkoQ3qMpRcBSbs85Nl81wAAALkAAAAAw/2SueIqIPUC6HILbaJ9vQPegSc4FrIdA" +
                    "KcDUSCUbh0DU2D48Xn5jQGvoG+eG1hPAAAAucAAAADAAAAAAAAAAAM78/////70/zn9/NZ16KkCQpS5l1MB5QMwypaN9Ra5A3YInw3rqvkAAAC6gAAAAKKxs" +
                    "ZY5FjVxATydNltyFrEB/u8WXhgviQLsXj7Is1PdALQt6aREV3kAAAC7QAAAAMH3K4dpnBq09QwDB4v//vT/jFWNuBDYbQO0CJkW5E1tASdZS0BYtgEC3DH67" +
                    "uIWAQAAALwAAAAAoPWOvqOqjTUABZwYbNvuOQPu2BldE6bRAFbuluLCkvkBRXm8DMICXQAAALzAAAAAw3Z6tpyH8KT570SFb9f+9P4qtXui8dg9AKdGmnUiP" +
                    "QUA3GCxNhcNWQOU+qI6PR0hAAAAvYAAAACicBjShSWVBQF+n8QczDHVAI9U3UHxbkEDpMS6jfdaLQFPtLnxt8llAAAAvkAAAADD0RFX21Ol8PoMNdr5C/70/" +
                    "wK6P+bfyAkBkqXF/N3woQOKOfxeosTFA/sF0pUlLFEAAAC/AAAAAKNzs1Yq9bzVA1Sz5FJNSX0DZ26LV2AhtQKmEGNp6a11AklFO9LG6IEAAAC/wAAAAKIq8" +
                    "PBRmGMm/0SwpdsfTqT8P9URI5VVfv464po8Dq/g+uAWRVgCseL4AADAgAAAAKPCpTT8NZZQ/ZHclbImMKj+mjE6JWsC2Poaaplsdvzo+KnfK2jlQsj0AADBQ" +
                    "AAAAGAAAAAAAANK9jSyCwYPmPcQ6JznGgzY9xwAAMHAAAAAYN2UhQxeL9EXWvAJInLIvSZS+IklIy4/IAAAwkAAAABgZ0ret/v/RvTbnAMFrqzfDM6arxBxH" +
                    "I8UAADCwAAAAGJiNokKP+fhE+HiIRm27QkcmWNpGeHmTxQAAMNAAAAAYT32usVv/0b0ShpPAjmNnwpo+ZMPLNVvDAAAw8AAAABgeqT5CXncoRHJCU0XVXa1F" +
                    "0OPtRIEzB8MAADEQAAAAGDKJP7R19NG9IyQwwBZPncEfTSnCsvmqwQAAMTAAAAAYVETsQUf7fEMuYD1EKtk4RPLyG0M3tJ7AAAAxUAAAABgAAAAAAADwPerU" +
                    "U0GjBs5D7StyRdZT90UAADFwAAAAFCxq5ELlLmRFNVwQR2ahvkeLqPBGAAAxkAAAABg/M2gt///vPSOw2UDKndhCt2gBRMYtBEQAADGwAAAAFFUfbUKx2XdE" +
                    "I0qnRYYl9UWAAbxEAAAx0AAAABgN4U8xq//vPee1e0BFegxCKhy2Qnw8QkIAADHwAAAAFE0qC0KYYahD49uCRO2zXkRsk89CAAAyEAAAABioTuczFvrvPcCV" +
                    "F0C84UNBQY2NQU1aokAAADIwAAAAFOx9q0GZlPpCx0ZoQ9db60KQ1QVBAAAyUAAAABQxw0i+PJ5OPSqv+rocWMU3A2DFswAAMnAAAAAUaiijPEtkVDnUArY1" +
                    "6/jVMc+Bki0AADKEAAAABAAAAAAAADKIAAAABAAAAAAAADLMAAAABAAAAAAAADLQAAAABAAAAAAAADcAAAAAIAABFwIdGBMDHhsZCxQIBA0fFhwSGgoHDBUR" +
                    "CQYQBQ8OAAA3LAAAAAQNAAAAAAA3QAAAAANzaAAAADdQAAAAAy1jAAAAN2AAAAAIL2Jpbi9zaAAAADdwAAAAEAAAAAAAAPA/AAAAAAAA+D8AADeAAAAAEAAA" +
                    "AAAAAAAABtDPQ+v9TD4AADeQAAAAEAAAAAAAAAAAAAAAQAO44j8AADegAAAACAAAgD8AAMA/AAA3qAAAAAgAAAAA3M/RNQAAN7AAAAAIAAAAAADAFT8AADfA" +
                    "AAAADy9wcm9jL3NlbGYvZmQvAAAAN9AAAAAEAAAAAAAAN+gAAAAEHwAAAAAAN+wAAAAEBDgAAAAAN/AAAAAEAwAAAAAAOAAAAACAAAAAAC30UVjPjLHARva1" +
                    "yykxA8cEW3AwtF39IHh/i5rYWSlQaEiJq6dWA2z/t82IP9R3tCulo3DxuuSo/EGD/dlv4Yp6Ly10lgcfDQleA3YscPdApSynb1dBqKp036BYZANKx8Q8U66v" +
                    "XxgEFbHjbSiGqwykv0Pw6VCBOVcWUjcAADiAAAABHk5vIGVycm9yAE5vIG1hdGNoAEludmFsaWQgcmVnZXhwAFVua25vd24gY29sbGF0aW5nIGVsZW1lbnQA" +
                    "VW5rbm93biBjaGFyYWN0ZXIgY2xhc3MgbmFtZQBUcmFpbGluZyBiYWNrc2xhc2gASW52YWxpZCBiYWNrIHJlZmVyZW5jZQBNaXNzaW5nICddJwBNaXNzaW5n" +
                    "ICcpJwBNaXNzaW5nICd9JwBJbnZhbGlkIGNvbnRlbnRzIG9mIHt9AEludmFsaWQgY2hhcmFjdGVyIHJhbmdlAE91dCBvZiBtZW1vcnkAUmVwZXRpdGlvbiBu" +
                    "b3QgcHJlY2VkZWQgYnkgdmFsaWQgZXhwcmVzc2lvbgAAVW5rbm93biBlcnJvcgAAADmgAAAAAyVzAAAAOawAAAAEAAAAAAAAObAAAAAEuDkAAAAAObgAAACQ" +
                    "BQAAAAAAAAAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAABAAAABQOgAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAA//////8AAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6UAAAAAS4OQAAAAA6VAAAAARYOgAAAAA6WAAAAJAJAAAA" +
                    "AAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAABEAAAAAAAAAEAAAAPA6AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD7wAAAABFg6AAAAAD70AAAABPg+AAAAAD74AAAAkAUAAAAAAAAA" +
                    "AAAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAAQAAAAkD8AAAAEAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAr/////AAAAAAAAAAAAAAAAAAAAAAAA" +
                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ5AAAAAE+D4AAAAAQ6AAAABYVCEiGQ0BAgMRSxwMEAQLHRIeJ2hub3Bx" +
                    "YiAFBg8TFBUaCBYHKCQXGAkKDhsfJSODgn0mKis8PT4/Q0dKTVhZWltcXV5fYGFjZGVmZ2lqa2xyc3R5ent8AAAARAAAAAcMSWxsZWdhbCBieXRlIHNlcXVl" +
                    "bmNlAERvbWFpbiBlcnJvcgBSZXN1bHQgbm90IHJlcHJlc2VudGFibGUATm90IGEgdHR5AFBlcm1pc3Npb24gZGVuaWVkAE9wZXJhdGlvbiBub3QgcGVybWl0" +
                    "dGVkAE5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkATm8gc3VjaCBwcm9jZXNzAEZpbGUgZXhpc3RzAFZhbHVlIHRvbyBsYXJnZSBmb3IgZGF0YSB0eXBlAE5v" +
                    "IHNwYWNlIGxlZnQgb24gZGV2aWNlAE91dCBvZiBtZW1vcnkAUmVzb3VyY2UgYnVzeQBJbnRlcnJ1cHRlZCBzeXN0ZW0gY2FsbABSZXNvdXJjZSB0ZW1wb3Jh" +
                    "cmlseSB1bmF2YWlsYWJsZQBJbnZhbGlkIHNlZWsAQ3Jvc3MtZGV2aWNlIGxpbmsAUmVhZC1vbmx5IGZpbGUgc3lzdGVtAERpcmVjdG9yeSBub3QgZW1wdHkA" +
                    "Q29ubmVjdGlvbiByZXNldCBieSBwZWVyAE9wZXJhdGlvbiB0aW1lZCBvdXQAQ29ubmVjdGlvbiByZWZ1c2VkAEhvc3QgaXMgZG93bgBIb3N0IGlzIHVucmVh" +
                    "Y2hhYmxlAEFkZHJlc3MgaW4gdXNlAEJyb2tlbiBwaXBlAEkvTyBlcnJvcgBObyBzdWNoIGRldmljZSBvciBhZGRyZXNzAEJsb2NrIGRldmljZSByZXF1aXJl" +
                    "ZABObyBzdWNoIGRldmljZQBOb3QgYSBkaXJlY3RvcnkASXMgYSBkaXJlY3RvcnkAVGV4dCBmaWxlIGJ1c3kARXhlYyBmb3JtYXQgZXJyb3IASW52YWxpZCBh" +
                    "cmd1bWVudABBcmd1bWVudCBsaXN0IHRvbyBsb25nAFN5bWJvbGljIGxpbmsgbG9vcABGaWxlbmFtZSB0b28gbG9uZwBUb28gbWFueSBvcGVuIGZpbGVzIGlu" +
                    "IHN5c3RlbQBObyBmaWxlIGRlc2NyaXB0b3JzIGF2YWlsYWJsZQBCYWQgZmlsZSBkZXNjcmlwdG9yAE5vIGNoaWxkIHByb2Nlc3MAQmFkIGFkZHJlc3MARmls" +
                    "ZSB0b28gbGFyZ2UAVG9vIG1hbnkgbGlua3MATm8gbG9ja3MgYXZhaWxhYmxlAFJlc291cmNlIGRlYWRsb2NrIHdvdWxkIG9jY3VyAFN0YXRlIG5vdCByZWNv" +
                    "dmVyYWJsZQBQcmV2aW91cyBvd25lciBkaWVkAE9wZXJhdGlvbiBjYW5jZWxlZABGdW5jdGlvbiBub3QgaW1wbGVtZW50ZWQATm8gbWVzc2FnZSBvZiBkZXNp" +
                    "cmVkIHR5cGUASWRlbnRpZmllciByZW1vdmVkAERldmljZSBub3QgYSBzdHJlYW0ATm8gZGF0YSBhdmFpbGFibGUARGV2aWNlIHRpbWVvdXQAT3V0IG9mIHN0" +
                    "cmVhbXMgcmVzb3VyY2VzAExpbmsgaGFzIGJlZW4gc2V2ZXJlZABQcm90b2NvbCBlcnJvcgBCYWQgbWVzc2FnZQBGaWxlIGRlc2NyaXB0b3IgaW4gYmFkIHN0" +
                    "YXRlAE5vdCBhIHNvY2tldABEZXN0aW5hdGlvbiBhZGRyZXNzIHJlcXVpcmVkAE1lc3NhZ2UgdG9vIGxhcmdlAFByb3RvY29sIHdyb25nIHR5cGUgZm9yIHNv" +
                    "Y2tldABQcm90b2NvbCBub3QgYXZhaWxhYmxlAFByb3RvY29sIG5vdCBzdXBwb3J0ZWQAU29ja2V0IHR5cGUgbm90IHN1cHBvcnRlZABOb3Qgc3VwcG9ydGVk" +
                    "AFByb3RvY29sIGZhbWlseSBub3Qgc3VwcG9ydGVkAEFkZHJlc3MgZmFtaWx5IG5vdCBzdXBwb3J0ZWQgYnkgcHJvdG9jb2wAQWRkcmVzcyBub3QgYXZhaWxh" +
                    "YmxlAE5ldHdvcmsgaXMgZG93bgBOZXR3b3JrIHVucmVhY2hhYmxlAENvbm5lY3Rpb24gcmVzZXQgYnkgbmV0d29yawBDb25uZWN0aW9uIGFib3J0ZWQATm8g" +
                    "YnVmZmVyIHNwYWNlIGF2YWlsYWJsZQBTb2NrZXQgaXMgY29ubmVjdGVkAFNvY2tldCBub3QgY29ubmVjdGVkAENhbm5vdCBzZW5kIGFmdGVyIHNvY2tldCBz" +
                    "aHV0ZG93bgBPcGVyYXRpb24gYWxyZWFkeSBpbiBwcm9ncmVzcwBPcGVyYXRpb24gaW4gcHJvZ3Jlc3MAU3RhbGUgZmlsZSBoYW5kbGUAUmVtb3RlIEkvTyBl" +
                    "cnJvcgBRdW90YSBleGNlZWRlZABObyBtZWRpdW0gZm91bmQAV3JvbmcgbWVkaXVtIHR5cGUATm8gZXJyb3IgaW5mb3JtYXRpb24AAAAASxAAAAAFL3RtcAAA" +
                    "AEsgAAAABXRlbXAAAABLMAAAALgAAAAAAADwPwAAAAAAAPA/AAAAAAAAAEAAAAAAAAAYQAAAAAAAADhAAAAAAAAAXkAAAAAAAICGQAAAAAAAsLNAAAAAAACw" +
                    "40AAAAAAACYWQQAAAACAr0tBAAAAAKgIg0EAAAAA/Iy8QQAAAMCMMvdBAAAAKDtMNEIAAIB1dwdzQgAAgHV3B7NCAADY7O439EIAAHPK7L42QwCQaDC5AntD" +
                    "AFpBvrPhwEMgxrXpOygGRGzwWWFSd05EAABL8AAAAGiepMFDUeoVQldM9XVw/CNCGraKgTKhIEIaJugitbAQQuihpbPBf/ZBP/PT9Rh01UEqX7l7DKutQZjM" +
                    "Xfl2+H1BTPSAUOnxRUHrh4cfQrYGQQTYWAish79AUju8e2BaakAFJ/Yfkw0EQAAATGAAAABoAAAAAAAAAAAAAAAAqAiDQQAAAIBpvZxBAAAAsKb9oUEAAABw" +
                    "cRiZQQAAAJC27oVBAAAA4HFxaUEAAAAAex9EQQAAAAC80BVBAAAAAIDn30AAAAAAABSeQAAAAAAAgFBAAAAAAAAA8D8AAEzQAAAAEy90bXAvdG1wbmFtX1hY" +
                    "WFhYWAAAAE0kAAAACEAAAAAAAAAAAABNLAAAAAhAAAAAAAAAAA=="
    };

    private final long[] _spill = new long[64];

    @SuppressWarnings("NumericOverflow")
    private static int _truncateFloatToSignedInteger(float val)
    {
        if (Float.isNaN(val)) {
            throw (new IllegalStateException());
        }
        {
            long bits = Float.floatToRawIntBits(val);
            if (!((bits < 1325400064L) || ((bits >= 2147483648L) && (bits < 3472883713L)))) {
                throw (new IllegalStateException());
            }
        }
        return ((int) val);
    }

    @SuppressWarnings("NumericOverflow")
    private static long _truncateFloatToSignedLong(float val)
    {
        if (Float.isNaN(val)) {
            throw (new IllegalStateException());
        }
        {
            long bits = Float.floatToRawIntBits(val);
            if (!((bits < 1593835520L) || ((bits >= 2147483648L) && (bits < 3741319169L)))) {
                throw (new IllegalStateException());
            }
        }
        return ((long) val);
    }

    @SuppressWarnings("NumericOverflow")
    private static int _truncateFloatToUnsignedInteger(float val)
    {
        if (Float.isNaN(val)) {
            throw (new IllegalStateException());
        }
        {
            long bits = Float.floatToRawIntBits(val);
            if (!((bits < 1333788672L) || ((bits >= 2147483648L) && (bits < 3212836864L)))) {
                throw (new IllegalStateException());
            }
        }
        return ((int) ((long) val));
    }

    @SuppressWarnings("NumericOverflow")
    private static long _truncateFloatToUnsignedLong(float val)
    {
        if (Float.isNaN(val)) {
            throw (new IllegalStateException());
        }
        {
            long bits = Float.floatToRawIntBits(val);
            if (!((bits < 1602224128L) || ((bits >= 2147483648L) && (bits < 3212836864L)))) {
                throw (new IllegalStateException());
            }
        }
        if (val >= (-((float) Long.MIN_VALUE))) {
            return (((long) (val + ((float) Long.MIN_VALUE))) ^ Long.MIN_VALUE);
        }
        else {
            return ((long) val);
        }
    }

    @SuppressWarnings("NumericOverflow")
    private static int _truncateDoubleToSignedInteger(double val)
    {
        if (Double.isNaN(val)) {
            throw (new IllegalStateException());
        }
        {
            long bits = Double.doubleToRawLongBits(val);
            if (!(((bits + Long.MIN_VALUE) < (4746794007244308481L + Long.MIN_VALUE)) || (((bits + Long.MIN_VALUE) >= (-9223372036854775808L + Long.MIN_VALUE)) && ((bits + Long.MIN_VALUE) < (-4476578029606273023L + Long.MIN_VALUE))))) {
                throw (new IllegalStateException());
            }
        }
        return ((int) val);
    }

    @SuppressWarnings("NumericOverflow")
    private static long _truncateDoubleToSignedLong(double val)
    {
        if (Double.isNaN(val)) {
            throw (new IllegalStateException());
        }
        {
            long bits = Double.doubleToRawLongBits(val);
            if (!(((bits + Long.MIN_VALUE) < (4751297606873776129L + Long.MIN_VALUE)) || (((bits + Long.MIN_VALUE) >= (-9223372036854775808L + Long.MIN_VALUE)) && ((bits + Long.MIN_VALUE) < (-4616189618054758400L + Long.MIN_VALUE))))) {
                throw (new IllegalStateException());
            }
        }
        return ((long) val);
    }

    @SuppressWarnings("NumericOverflow")
    private static int _truncateDoubleToUnsignedInteger(double val)
    {
        if (Double.isNaN(val)) {
            throw (new IllegalStateException());
        }
        {
            long bits = Double.doubleToRawLongBits(val);
            if (!(((bits + Long.MIN_VALUE) < (4890909195324358656L + Long.MIN_VALUE)) || (((bits + Long.MIN_VALUE) >= (-9223372036854775808L + Long.MIN_VALUE)) && ((bits + Long.MIN_VALUE) < (-4332462841530417151L + Long.MIN_VALUE))))) {
                throw (new IllegalStateException());
            }
        }
        return ((int) ((long) val));
    }

    @SuppressWarnings("NumericOverflow")
    private static long _truncateDoubleToUnsignedLong(double val)
    {
        if (Double.isNaN(val)) {
            throw (new IllegalStateException());
        }
        {
            long bits = Double.doubleToRawLongBits(val);
            if (!(((bits + Long.MIN_VALUE) < (4895412794951729152L + Long.MIN_VALUE)) || (((bits + Long.MIN_VALUE) >= (-9223372036854775808L + Long.MIN_VALUE)) && ((bits + Long.MIN_VALUE) < (-4616189618054758400L + Long.MIN_VALUE))))) {
                throw (new IllegalStateException());
            }
        }
        if (val >= (-((double) Long.MIN_VALUE))) {
            return (((long) (val + ((double) Long.MIN_VALUE))) ^ Long.MIN_VALUE);
        }
        else {
            return ((long) val);
        }
    }

    public static final class UnreachableException
            extends RuntimeException
    {
    }

    public musl(Imports imports)
    {
        this._Exit = java.util.Objects.requireNonNull(imports._Exit);
        this.__addtf3 = java.util.Objects.requireNonNull(imports.__addtf3);
        this.__block_all_sigs = java.util.Objects.requireNonNull(imports.__block_all_sigs);
        this.__divtf3 = java.util.Objects.requireNonNull(imports.__divtf3);
        this.__dl_invalid_handle = java.util.Objects.requireNonNull(imports.__dl_invalid_handle);
        this.__dl_seterr = java.util.Objects.requireNonNull(imports.__dl_seterr);
        this.__extenddftf2 = java.util.Objects.requireNonNull(imports.__extenddftf2);
        this.__extendsftf2 = java.util.Objects.requireNonNull(imports.__extendsftf2);
        this.__fdopen = java.util.Objects.requireNonNull(imports.__fdopen);
        this.__fixtfdi = java.util.Objects.requireNonNull(imports.__fixtfdi);
        this.__fixtfsi = java.util.Objects.requireNonNull(imports.__fixtfsi);
        this.__floatscan = java.util.Objects.requireNonNull(imports.__floatscan);
        this.__floatsitf = java.util.Objects.requireNonNull(imports.__floatsitf);
        this.__lctrans = java.util.Objects.requireNonNull(imports.__lctrans);
        this.__lctrans_cur = java.util.Objects.requireNonNull(imports.__lctrans_cur);
        this.__lock = java.util.Objects.requireNonNull(imports.__lock);
        this.__lockfile = java.util.Objects.requireNonNull(imports.__lockfile);
        this.__lttf2 = java.util.Objects.requireNonNull(imports.__lttf2);
        this.__madvise = java.util.Objects.requireNonNull(imports.__madvise);
        this.__mmap = java.util.Objects.requireNonNull(imports.__mmap);
        this.__mremap = java.util.Objects.requireNonNull(imports.__mremap);
        this.__multf3 = java.util.Objects.requireNonNull(imports.__multf3);
        this.__munmap = java.util.Objects.requireNonNull(imports.__munmap);
        this.__netf2 = java.util.Objects.requireNonNull(imports.__netf2);
        this.__randname = java.util.Objects.requireNonNull(imports.__randname);
        this.__rem_pio2_large = java.util.Objects.requireNonNull(imports.__rem_pio2_large);
        this.__set_thread_area = java.util.Objects.requireNonNull(imports.__set_thread_area);
        this.__synccall = java.util.Objects.requireNonNull(imports.__synccall);
        this.__syscall0 = java.util.Objects.requireNonNull(imports.__syscall0);
        this.__syscall1 = java.util.Objects.requireNonNull(imports.__syscall1);
        this.__syscall2 = java.util.Objects.requireNonNull(imports.__syscall2);
        this.__syscall3 = java.util.Objects.requireNonNull(imports.__syscall3);
        this.__syscall4 = java.util.Objects.requireNonNull(imports.__syscall4);
        this.__syscall5 = java.util.Objects.requireNonNull(imports.__syscall5);
        this.__syscall6 = java.util.Objects.requireNonNull(imports.__syscall6);
        this.__syscall_cp = java.util.Objects.requireNonNull(imports.__syscall_cp);
        this.__trunctfdf2 = java.util.Objects.requireNonNull(imports.__trunctfdf2);
        this.__trunctfsf2 = java.util.Objects.requireNonNull(imports.__trunctfsf2);
        this.__unlock = java.util.Objects.requireNonNull(imports.__unlock);
        this.__unlockfile = java.util.Objects.requireNonNull(imports.__unlockfile);
        this.__wait = java.util.Objects.requireNonNull(imports.__wait);
        this.abort = java.util.Objects.requireNonNull(imports.abort);
        this.fcntl = java.util.Objects.requireNonNull(imports.fcntl);
        this.fdopen = java.util.Objects.requireNonNull(imports.fdopen);
        this.feclearexcept = java.util.Objects.requireNonNull(imports.feclearexcept);
        this.fegetround = java.util.Objects.requireNonNull(imports.fegetround);
        this.feraiseexcept = java.util.Objects.requireNonNull(imports.feraiseexcept);
        this.fesetround = java.util.Objects.requireNonNull(imports.fesetround);
        this.fetestexcept = java.util.Objects.requireNonNull(imports.fetestexcept);
        this.fprintf = java.util.Objects.requireNonNull(imports.fprintf);
        this.iswctype = java.util.Objects.requireNonNull(imports.iswctype);
        this.iswspace = java.util.Objects.requireNonNull(imports.iswspace);
        this.mbtowc = java.util.Objects.requireNonNull(imports.mbtowc);
        this.nanosleep = java.util.Objects.requireNonNull(imports.nanosleep);
        this.posix_spawn = java.util.Objects.requireNonNull(imports.posix_spawn);
        this.posix_spawn_file_actions_adddup2 = java.util.Objects.requireNonNull(imports.posix_spawn_file_actions_adddup2);
        this.posix_spawn_file_actions_destroy = java.util.Objects.requireNonNull(imports.posix_spawn_file_actions_destroy);
        this.posix_spawn_file_actions_init = java.util.Objects.requireNonNull(imports.posix_spawn_file_actions_init);
        this.pthread_self = java.util.Objects.requireNonNull(imports.pthread_self);
        this.setitimer = java.util.Objects.requireNonNull(imports.setitimer);
        this.snprintf = java.util.Objects.requireNonNull(imports.snprintf);
        this.sprintf = java.util.Objects.requireNonNull(imports.sprintf);
        this.towlower = java.util.Objects.requireNonNull(imports.towlower);
        this.towupper = java.util.Objects.requireNonNull(imports.towupper);
        this.uname = java.util.Objects.requireNonNull(imports.uname);
        this.vfprintf = java.util.Objects.requireNonNull(imports.vfprintf);
        this.vfscanf = java.util.Objects.requireNonNull(imports.vfscanf);
        this.vsnprintf = java.util.Objects.requireNonNull(imports.vsnprintf);
        this.wctype = java.util.Objects.requireNonNull(imports.wctype);
        this.__stdio_write = java.util.Objects.requireNonNull(imports.__stdio_write);
        this.__stdout_write = java.util.Objects.requireNonNull(imports.__stdout_write);

        this._memory = java.nio.ByteBuffer.allocateDirect(2097152 * 8);
        StringBuilder sb = new StringBuilder(21532);
        for (String s : _memorySegments) {
            sb.append(s);
        }
        java.nio.ByteBuffer buf = java.nio.ByteBuffer.wrap((java.util.Base64.getDecoder().decode((sb.toString()))));
        sb = null;
        while (buf.hasRemaining()) {
            _memory.position((buf.getInt()));
            byte[] seg = new byte[buf.getInt()];
            buf.get(seg);
            _memory.put(seg);
        }
        _memory.clear();
        this._storeInt(4, 2097152 - 4);
    }

    private final byte _loadByte(int ptr)
    {
        return (this._memory.get(ptr));
    }

    private final byte _storeByte(int ptr, byte value)
    {
        this._memory.put(ptr, value);
        return value;
    }

    private final short _loadShort(int ptr)
    {
        return (this._memory.getShort(ptr));
    }

    private final short _storeShort(int ptr, short value)
    {
        this._memory.putShort(ptr, value);
        return value;
    }

    private final int _loadInt(int ptr)
    {
        return (this._memory.getInt(ptr));
    }

    private final int _storeInt(int ptr, int value)
    {
        this._memory.putInt(ptr, value);
        return value;
    }

    private final long _loadLong(int ptr)
    {
        return (this._memory.getLong(ptr));
    }

    private final long _storeLong(int ptr, long value)
    {
        this._memory.putLong(ptr, value);
        return value;
    }

    private final float _loadFloat(int ptr)
    {
        return (this._memory.getFloat(ptr));
    }

    private final float _storeFloat(int ptr, float value)
    {
        this._memory.putFloat(ptr, value);
        return value;
    }

    private final double _loadDouble(int ptr)
    {
        return (this._memory.getDouble(ptr));
    }

    private final double _storeDouble(int ptr, double value)
    {
        this._memory.putDouble(ptr, value);
        return value;
    }

    public final int __brk(int _30_)
    {
        int _31_ = 0;
        _30_ = this.__syscall1.invoke(45, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double __cos(double _30_, double _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 48) + 40), _30_);
        this._storeDouble((_32_ + 32), _31_);
        _30_ = this._storeDouble(_32_, ((_31_ = this._storeDouble((_32_ + 16), ((_31_ = this._loadDouble((_32_ + 40))) * _31_))) * _31_));
        this._storeDouble((_32_ + 8), (((_31_ = this._loadDouble((_32_ + 16))) * ((_31_ * ((_31_ * 2.480158728947673E-5) + -0.001388888888887411)) + 0.0416666666666666)) + ((_30_ * _30_) * ((_31_ * ((_31_ * -1.1359647557788195E-11) + 2.087572321298175E-9)) + -2.7557314351390663E-7))));
        return ((_31_ = this._storeDouble(_32_, (1.0 - (this._storeDouble((_32_ + 24), ((this._loadDouble((_32_ + 16))) * 0.5)))))) + (((1.0 - _31_) - (this._loadDouble((_32_ + 24)))) + (((this._loadDouble((_32_ + 16))) * (this._loadDouble((_32_ + 8)))) - ((this._loadDouble((_32_ + 40))) * (this._loadDouble((_32_ + 32)))))));
    }

    public final float __cosdf(double _30_)
    {
        double _31_ = 0.0;
        double _32_ = 0.0;
        int _33_ = 0;
        this._storeDouble(((_33_ = (this._loadInt((0 + 4))) - 32) + 8), ((_30_ = this._storeDouble(_33_, ((_30_ = this._storeDouble((_33_ + 24), _30_)) * _30_))) * _30_));
        _30_ = this._storeDouble((_33_ + 16), (((this._loadDouble(_33_)) * 2.439044879627741E-5) + -0.001388676377460993));
        return ((float) (((((_31_ = this._loadDouble(_33_)) * -0.499999997251031) + 1.0) + ((_32_ = this._loadDouble((_33_ + 8))) * 0.04166662332373906)) + (_30_ * (_32_ * _31_))));
    }

    public final int __ctype_b_loc()
    {
        return 12;
    }

    public final int __ctype_tolower_loc()
    {
        return 784;
    }

    public final int __ctype_toupper_loc()
    {
        return 2336;
    }

    public final int stub_dlsym(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        this._storeInt(_33_, (this._loadInt((_33_ + 8))));
        this.__dl_seterr.invoke(3888, _33_);
        this._storeInt((0 + 4), (_33_ + 16));
        return 0;
    }

    public final int __errno_location()
    {
        return ((__pthread_self()) + 40);
    }

    public final int __pthread_self()
    {
        return (this.pthread_self.invoke());
    }

    public final double __expo2(double _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeLong((_31_ + 8), 9205357638345293824L);
        this._storeDouble((_31_ + 16), (this._loadDouble((_31_ + 8))));
        _32_ = exp(((this._loadDouble((_31_ + 24))) + -1416.0996898839683));
        _30_ = this._loadDouble((_31_ + 16));
        this._storeInt((0 + 4), (_31_ + 32));
        return (_30_ * (_32_ * _30_));
    }

    public final float __expo2f(float _30_)
    {
        int _31_ = 0;
        float _32_ = 0.0f;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt(_31_, 2046820352);
        this._storeFloat((_31_ + 8), (this._loadFloat(_31_)));
        _32_ = expf(((this._loadFloat((_31_ + 12))) + -162.88959f));
        _30_ = this._loadFloat((_31_ + 8));
        this._storeInt((0 + 4), (_31_ + 16));
        return (_30_ * (_32_ * _30_));
    }

    public final int __fclose_ca(int _30_)
    {
        int _31_ = 0;
        _30_ = this._iiTable[this._tableIndices[this._loadInt(((_30_ = this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) + 12))]].invoke(_30_);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __fmodeflags(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((strchr((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 43)) == 0) {
                    break label$1;
                }
                this._storeInt((_31_ + 8), 2);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((this._loadInt((this._loadInt((_31_ + 12))))) != 114) {
                    break label$2;
                }
                this._storeInt((_31_ + 8), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 8), 1);
        }
        while (false);
        label$3:
        do {
            if ((strchr((this._loadInt((_31_ + 12))), 120)) == 0) {
                break label$3;
            }
            this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) | 128));
        }
        while (false);
        label$4:
        do {
            if ((strchr((this._loadInt((_31_ + 12))), 101)) == 0) {
                break label$4;
            }
            this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) | 524288));
        }
        while (false);
        label$5:
        do {
            if ((this._loadInt((this._loadInt((_31_ + 12))))) == 114) {
                break label$5;
            }
            this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) | 64));
        }
        while (false);
        label$6:
        do {
            if ((this._loadInt((this._loadInt((_31_ + 12))))) != 119) {
                break label$6;
            }
            this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) | 512));
        }
        while (false);
        label$7:
        do {
            if ((this._loadInt((this._loadInt((_31_ + 12))))) != 97) {
                break label$7;
            }
            this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) | 1024));
        }
        while (false);
        _30_ = this._loadInt((_31_ + 8));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __fpclassify(double _30_)
    {
        int _31_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 32) + 8), (this._storeDouble((_31_ + 16), _30_)));
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_31_ + 4), ((int) (((this._loadLong((_31_ + 8))) >>> 52L) & 2047L)))) == 0) {
                    break label$1;
                }
                if ((this._loadInt((_31_ + 4))) != 2047) {
                    break label$0;
                }
                this._storeInt((_31_ + 28), ((((this._loadLong((_31_ + 8))) << 12L) == 0) ? 1 : 0));
                return (this._loadInt((_31_ + 28)));
            }
            while (false);
            _temp$0 = 3;
            _temp$1 = 2;
            _temp$2 = (((this._loadLong((_31_ + 8))) << 1L) != 0L) ? _temp$0 : _temp$1;
            this._storeInt((_31_ + 28), _temp$2);
            return (this._loadInt((_31_ + 28)));
        }
        while (false);
        this._storeInt((_31_ + 28), 4);
        return (this._loadInt((_31_ + 28)));
    }

    public final int __fpclassifyf(float _30_)
    {
        int _31_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 32) + 16), (this._storeFloat((_31_ + 24), _30_)));
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_31_ + 12), (((this._loadInt((_31_ + 16))) >>> 23) & 255))) == 0) {
                    break label$1;
                }
                if ((this._loadInt((_31_ + 12))) != 255) {
                    break label$0;
                }
                this._storeInt((_31_ + 28), ((((this._loadInt((_31_ + 16))) << 9) == 0) ? 1 : 0));
                return (this._loadInt((_31_ + 28)));
            }
            while (false);
            _temp$0 = 3;
            _temp$1 = 2;
            _temp$2 = (((this._loadInt((_31_ + 16))) << 1) != 0) ? _temp$0 : _temp$1;
            this._storeInt((_31_ + 28), _temp$2);
            return (this._loadInt((_31_ + 28)));
        }
        while (false);
        this._storeInt((_31_ + 28), 4);
        return (this._loadInt((_31_ + 28)));
    }

    public final int __fpclassifyl(long _30_, long _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        _33_ = __fpclassify((this.__trunctfdf2.invoke((this._storeLong((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), _30_)), (this._storeLong((_32_ + 8), _31_)))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _33_;
    }

    public final int __init_tp(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeInt((_30_ = this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 4), (this._storeInt((_31_ + 8), _30_)))), _30_);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt(_31_, (this.__set_thread_area.invoke((this._loadInt((_31_ + 8))))))) <= -1) {
                    break label$1;
                }
                label$2:
                do {
                    if ((this._loadInt(_31_)) != 0) {
                        break label$2;
                    }
                    this._storeInt((0 + 12940), 1);
                }
                while (false);
                _32_ = this.__syscall1.invoke(258, ((this._loadInt((_31_ + 4))) + 28));
                this._storeInt(((_30_ = this._loadInt((_31_ + 4))) + 156), 12980);
                this._storeInt((_30_ + 28), _32_);
                this._storeInt((_30_ + 136), (_30_ + 136));
                this._storeInt((_31_ + 12), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 12), -1);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __copy_tls(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 12), (this._storeInt((_32_ + 28), _30_)));
        this._storeInt((_32_ + 28), (((this._loadInt((_32_ + 28))) + (this._loadInt((0 + 12964)))) + -212));
        this._storeInt((_32_ + 28), ((_30_ = this._loadInt((_32_ + 28))) - (_30_ & ((this._loadInt((0 + 12968))) + -1))));
        this._storeInt((_32_ + 24), (this._loadInt((_32_ + 28))));
        _31_ = this._storeInt((_32_ + 16), 1);
        this._storeInt((_32_ + 20), (this._loadInt((0 + 12960))));
        label$1:
        do {
            label$0:
            while (true) {
                if ((this._loadInt((_32_ + 20))) == 0) {
                    break label$1;
                }
                this._storeInt(((this._loadInt((_32_ + 12))) + ((this._loadInt((_32_ + 16))) << 2)), ((this._loadInt((_32_ + 28))) - (this._loadInt(((this._loadInt((_32_ + 20))) + 20)))));
                memcpy((this._loadInt(((this._loadInt((_32_ + 12))) + ((this._loadInt((_32_ + 16))) << 2)))), (this._loadInt(((_30_ = this._loadInt((_32_ + 20))) + 4))), (this._loadInt((_30_ + 8))));
                this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) + _31_));
                this._storeInt((_32_ + 20), (this._loadInt((this._loadInt((_32_ + 20))))));
                continue label$0;
            }
        }
        while (false);
        this._storeInt((_30_ = this._loadInt((_32_ + 12))), (this._loadInt((0 + 12972))));
        this._storeInt(((this._loadInt((_32_ + 24))) + 208), _30_);
        this._storeInt(((this._loadInt((_32_ + 24))) + 4), _30_);
        _30_ = this._loadInt((_32_ + 24));
        this._storeInt((0 + 4), (_32_ + 32));
        return _30_;
    }

    public final void static_init_tls(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_31_ + 8), (this._storeInt((_31_ + 12), 0)));
        this._storeInt((_31_ + 24), (this._loadInt(((this._loadInt((_31_ + 28))) + 12))));
        this._storeInt((_31_ + 20), (this._loadInt(((this._loadInt((_31_ + 28))) + 20))));
        label$1:
        do {
            label$0:
            while (true) {
                if ((this._loadInt((_31_ + 20))) == 0) {
                    break label$1;
                }
                label$2:
                do {
                    if ((this._loadInt((this._storeInt((_31_ + 16), (this._loadInt((_31_ + 24))))))) != 6) {
                        break label$2;
                    }
                    this._storeInt((_31_ + 8), ((this._loadInt(((this._loadInt((_31_ + 28))) + 12))) - (this._loadInt(((this._loadInt((_31_ + 16))) + 8)))));
                }
                while (false);
                label$3:
                do {
                    if ((this._loadInt((this._loadInt((_31_ + 16))))) != 7) {
                        break label$3;
                    }
                    this._storeInt((_31_ + 12), (this._loadInt((_31_ + 16))));
                }
                while (false);
                this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 20))) + -1));
                this._storeInt((_31_ + 24), ((this._loadInt((_31_ + 24))) + (this._loadInt(((this._loadInt((_31_ + 28))) + 16)))));
                continue label$0;
            }
        }
        while (false);
        label$4:
        do {
            if ((this._loadInt((_31_ + 12))) == 0) {
                break label$4;
            }
            this._storeInt((0 + 3920), ((this._loadInt((_31_ + 8))) + (this._loadInt(((_30_ = this._loadInt((_31_ + 12))) + 8)))));
            this._storeInt((0 + 3924), (this._loadInt((_30_ + 16))));
            this._storeInt((0 + 3928), (this._loadInt(((this._loadInt((_31_ + 12))) + 20))));
            this._storeInt((0 + 3932), (this._loadInt(((this._loadInt((_31_ + 12))) + 28))));
            this._storeInt((0 + 12972), 1);
            this._storeInt((0 + 12960), 3916);
        }
        while (false);
        this._storeInt((0 + 3928), ((_30_ = this._loadInt((0 + 3928))) + (((0 - _30_) - (this._loadInt((0 + 3920)))) & ((_30_ = this._loadInt((0 + 3932))) + -1))));
        label$5:
        do {
            if ((_30_ & 4294967295L) > (3 & 4294967295L)) {
                break label$5;
            }
            this._storeInt((0 + 3932), 4);
        }
        while (false);
        label$6:
        do {
            label$7:
            do {
                if (((this._storeInt((0 + 12964), ((((this._storeInt((0 + 3936), (this._loadInt((0 + 3928))))) + (this._storeInt((0 + 12968), (this._loadInt((0 + 3932)))))) + 223) & -4))) & 4294967295L) < (281 & 4294967295L)) {
                    break label$7;
                }
                this._storeInt((_31_ + 4), (this.__syscall6.invoke(192, 0, (this._loadInt((0 + 12964))), 3, 34, -1, 0)));
                break label$6;
            }
            while (false);
            this._storeInt((_31_ + 4), 3940);
        }
        while (false);
        label$8:
        do {
            if ((__init_tp((__copy_tls((this._loadInt((_31_ + 4))))))) <= -1) {
                break label$8;
            }
            this._storeInt((0 + 4), (_31_ + 32));
            return;
        }
        while (false);
        this.abort.invoke();
        throw (new UnreachableException());
    }

    public final int __overflow(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_32_ + 3), (this._storeInt((_32_ + 4), _31_)));
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt(((this._loadInt((_32_ + 8))) + 16))) != 0) {
                    break label$1;
                }
                if ((__towrite((this._loadInt((_32_ + 8))))) == 0) {
                    break label$1;
                }
                this._storeInt((_32_ + 12), -1);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt(((_31_ = this._loadInt((_32_ + 8))) + 20))) & 4294967295L) >= ((this._loadInt((_31_ + 16))) & 4294967295L)) {
                    break label$2;
                }
                if ((this._loadInt((_32_ + 3))) == (this._loadInt(((this._loadInt((_32_ + 8))) + 75)))) {
                    break label$2;
                }
                this._storeInt(((_31_ = this._loadInt((_32_ + 8))) + 20), ((_31_ = this._loadInt((_31_ + 20))) + 1));
                this._storeInt((_32_ + 12), (this._storeInt(_31_, (this._loadInt((_32_ + 3))))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if ((this._iiiiTable[this._tableIndices[this._loadInt(((_31_ = this._loadInt((_32_ + 8))) + 36))]].invoke(_31_, (_32_ + 3), 1)) == 1) {
                    break label$3;
                }
                this._storeInt((_32_ + 12), -1);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 12), (this._loadInt((_32_ + 3))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final long __rand48_step(int _30_, int _31_)
    {
        long _32_ = 0L;
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 28), _30_);
        this._storeInt((_33_ + 24), _31_);
        this._storeLong((_33_ + 8), ((((this._loadInt((_31_ = this._loadInt((_33_ + 28))))) | ((this._loadInt((_31_ + 2))) << 16)) & 4294967295L) | ((this._loadLong((_31_ + 4))) << 32L)));
        _32_ = this._storeLong((_33_ + 8), (((this._storeLong((_33_ + 16), ((((this._loadInt((_31_ = this._loadInt((_33_ + 24))))) | ((this._loadInt((_31_ + 2))) << 16)) & 4294967295L) | ((this._loadLong((_31_ + 4))) << 32L)))) * (this._loadLong((_33_ + 8)))) + (this._loadLong(((this._loadInt((_33_ + 24))) + 6)))));
        this._storeLong(((_31_ = this._loadInt((_33_ + 28))) + 2), ((this._storeLong(_31_, _32_)) >>> 16L));
        this._storeLong((_31_ + 4), (this._loadLong((_33_ + 12))));
        return ((this._loadLong((_33_ + 8))) & 281474976710655L);
    }

    public final int __rem_pio2(double _30_, int _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 144))) + 128), _30_);
        this._storeInt((_32_ + 124), _31_);
        this._storeDouble((_32_ + 112), (this._loadDouble((_32_ + 128))));
        this._storeLong((_32_ + 24), ((this._loadLong((_32_ + 112))) >>> 63L));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            label$9:
                                            do {
                                                label$10:
                                                do {
                                                    label$11:
                                                    do {
                                                        if (((this._storeInt((_32_ + 28), ((int) ((this._loadLong((_32_ + 116))) & 2147483647L)))) & 4294967295L) > (1074752122 & 4294967295L)) {
                                                            break label$11;
                                                        }
                                                        if (((this._loadInt((_32_ + 28))) & 1048575) == 598523) {
                                                            break label$8;
                                                        }
                                                        if (((this._loadInt((_32_ + 28))) & 4294967295L) > (1073928572 & 4294967295L)) {
                                                            break label$10;
                                                        }
                                                        if ((this._loadInt((_32_ + 24))) == 0) {
                                                            break label$5;
                                                        }
                                                        _30_ = this._storeDouble((_32_ + 104), ((this._loadDouble((_32_ + 128))) + 1.5707963267341256));
                                                        _30_ = this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (_30_ + 6.077100506506192E-11));
                                                        this._storeDouble((_31_ + 8), (((this._loadDouble((_32_ + 104))) - _30_) + 6.077100506506192E-11));
                                                        this._storeInt((_32_ + 140), -1);
                                                        break label$0;
                                                    }
                                                    while (false);
                                                    label$12:
                                                    do {
                                                        if (((this._loadInt((_32_ + 28))) & 4294967295L) > (1075594811 & 4294967295L)) {
                                                            break label$12;
                                                        }
                                                        if (((this._loadInt((_32_ + 28))) & 4294967295L) > (1075183036 & 4294967295L)) {
                                                            break label$9;
                                                        }
                                                        if ((this._loadInt((_32_ + 28))) == 1074977148) {
                                                            break label$8;
                                                        }
                                                        if ((this._loadInt((_32_ + 24))) == 0) {
                                                            break label$3;
                                                        }
                                                        _30_ = this._storeDouble((_32_ + 104), ((this._loadDouble((_32_ + 128))) + 4.712388980202377));
                                                        _30_ = this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (_30_ + 1.8231301519518578E-10));
                                                        this._storeDouble((_31_ + 8), (((this._loadDouble((_32_ + 104))) - _30_) + 1.8231301519518578E-10));
                                                        this._storeInt((_32_ + 140), -3);
                                                        break label$0;
                                                    }
                                                    while (false);
                                                    if (((this._loadInt((_32_ + 28))) & 4294967295L) <= (1094263290 & 4294967295L)) {
                                                        break label$8;
                                                    }
                                                    if (((this._loadInt((_32_ + 28))) & 4294967295L) < (2146435072 & 4294967295L)) {
                                                        break label$7;
                                                    }
                                                    this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (this._storeDouble((_31_ + 8), ((_30_ = this._loadDouble((_32_ + 128))) - _30_))));
                                                    this._storeInt((_32_ + 140), 0);
                                                    break label$0;
                                                }
                                                while (false);
                                                if ((this._loadInt((_32_ + 24))) == 0) {
                                                    break label$4;
                                                }
                                                _30_ = this._storeDouble((_32_ + 104), ((this._loadDouble((_32_ + 128))) + 3.1415926534682512));
                                                _30_ = this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (_30_ + 1.2154201013012384E-10));
                                                this._storeDouble((_31_ + 8), (((this._loadDouble((_32_ + 104))) - _30_) + 1.2154201013012384E-10));
                                                this._storeInt((_32_ + 140), -2);
                                                break label$0;
                                            }
                                            while (false);
                                            if ((this._loadInt((_32_ + 28))) != 1075388923) {
                                                break label$6;
                                            }
                                        }
                                        while (false);
                                        this._storeInt((_32_ + 20), (_truncateDoubleToSignedInteger((this._storeDouble((_32_ + 72), ((((this._loadDouble((_32_ + 128))) * 0.6366197723675814) + 6.755399441055744E15) - 6.755399441055744E15))))));
                                        this._storeDouble((_32_ + 80), ((this._loadDouble((_32_ + 128))) + ((this._loadDouble((_32_ + 72))) * -1.5707963267341256)));
                                        _30_ = this._storeDouble((_32_ + 96), ((this._loadDouble((_32_ + 72))) * 6.077100506506192E-11));
                                        this._storeDouble((_32_ + 112), (this._storeDouble((this._loadInt((_32_ + 124))), ((this._loadDouble((_32_ + 80))) - _30_))));
                                        this._storeLong((_32_ + 12), (((this._loadLong((_32_ + 112))) >>> 52L) & 2047L));
                                        label$13:
                                        do {
                                            if (((this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 28))) >>> 20))) - (this._loadInt((_32_ + 12)))) < 17) {
                                                break label$13;
                                            }
                                            this._storeDouble((_32_ + 88), (this._loadDouble((_32_ + 80))));
                                            _30_ = this._storeDouble((_32_ + 96), ((this._loadDouble((_32_ + 72))) * 6.077100506303966E-11));
                                            _30_ = this._storeDouble((_32_ + 80), ((this._loadDouble((_32_ + 88))) - _30_));
                                            _30_ = this._storeDouble((_32_ + 96), (((this._loadDouble((_32_ + 72))) * 2.0222662487959506E-21) - (((this._loadDouble((_32_ + 88))) - _30_) - (this._loadDouble((_32_ + 96))))));
                                            this._storeDouble((_32_ + 112), (this._storeDouble((this._loadInt((_32_ + 124))), ((this._loadDouble((_32_ + 80))) - _30_))));
                                            _31_ = this._storeInt((_32_ + 12), ((int) (((this._loadLong((_32_ + 112))) >>> 52L) & 2047L)));
                                            if (((this._loadInt((_32_ + 16))) - _31_) < 50) {
                                                break label$13;
                                            }
                                            this._storeDouble((_32_ + 88), (this._loadDouble((_32_ + 80))));
                                            _30_ = this._storeDouble((_32_ + 96), ((this._loadDouble((_32_ + 72))) * 2.0222662487111665E-21));
                                            _30_ = this._storeDouble((_32_ + 80), ((this._loadDouble((_32_ + 88))) - _30_));
                                            _30_ = this._storeDouble((_32_ + 96), (((this._loadDouble((_32_ + 72))) * 8.4784276603689E-32) - (((this._loadDouble((_32_ + 88))) - _30_) - (this._loadDouble((_32_ + 96))))));
                                            this._storeDouble((this._loadInt((_32_ + 124))), ((this._loadDouble((_32_ + 80))) - _30_));
                                        }
                                        while (false);
                                        this._storeDouble(((_31_ = this._loadInt((_32_ + 124))) + 8), (((this._loadDouble((_32_ + 80))) - (this._loadDouble(_31_))) - (this._loadDouble((_32_ + 96)))));
                                        this._storeInt((_32_ + 140), (this._loadInt((_32_ + 20))));
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeDouble((_32_ + 112), (this._loadDouble((_32_ + 128))));
                                    this._storeLong((_32_ + 112), ((this._storeLong((_32_ + 112), ((this._loadLong((_32_ + 112))) & 4503599627370495L))) | 4710765210229538816L));
                                    this._storeDouble((_32_ + 104), (this._loadDouble((_32_ + 112))));
                                    this._storeInt((_32_ + 8), 0);
                                    label$15:
                                    do {
                                        label$14:
                                        while (true) {
                                            if ((this._loadInt((_32_ + 8))) > 1) {
                                                break label$15;
                                            }
                                            this._storeDouble((_32_ + 104), (((_30_ = this._loadDouble((_32_ + 104))) - (this._storeDouble(((_32_ + 48) + ((this._loadInt((_32_ + 8))) << 3)), ((double) (_truncateDoubleToSignedInteger(_30_)))))) * 1.6777216E7));
                                            this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 8))) + 1));
                                            continue label$14;
                                        }
                                    }
                                    while (false);
                                    this._storeDouble(((_32_ + 48) + ((this._loadInt((_32_ + 8))) << 3)), (this._loadDouble((_32_ + 104))));
                                    label$17:
                                    do {
                                        label$16:
                                        while (true) {
                                            if ((this._loadDouble(((_32_ + 48) + ((this._loadInt((_32_ + 8))) << 3)))) != 0.0) {
                                                break label$17;
                                            }
                                            this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 8))) + -1));
                                            continue label$16;
                                        }
                                    }
                                    while (false);
                                    this._storeInt((_32_ + 20), (this.__rem_pio2_large.invoke((_32_ + 48), (_32_ + 32), (((this._loadInt((_32_ + 28))) >>> 20) + -1046), ((this._loadInt((_32_ + 8))) + 1), 1)));
                                    if ((this._loadInt((_32_ + 24))) == 0) {
                                        break label$2;
                                    }
                                    this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (-(this._loadDouble((_32_ + 32)))));
                                    this._storeDouble((_31_ + 8), (-(this._loadDouble((_32_ + 40)))));
                                    this._storeInt((_32_ + 140), (0 - (this._loadInt((_32_ + 20)))));
                                    break label$0;
                                }
                                while (false);
                                if ((this._loadInt((_32_ + 24))) == 0) {
                                    break label$1;
                                }
                                _30_ = this._storeDouble((_32_ + 104), ((this._loadDouble((_32_ + 128))) + 6.2831853069365025));
                                _30_ = this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (_30_ + 2.430840202602477E-10));
                                this._storeDouble((_31_ + 8), (((this._loadDouble((_32_ + 104))) - _30_) + 2.430840202602477E-10));
                                this._storeInt((_32_ + 140), -4);
                                break label$0;
                            }
                            while (false);
                            _30_ = this._storeDouble((_32_ + 104), ((this._loadDouble((_32_ + 128))) + -1.5707963267341256));
                            _30_ = this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (_30_ - 6.077100506506192E-11));
                            this._storeDouble((_31_ + 8), (((this._loadDouble((_32_ + 104))) - _30_) - 6.077100506506192E-11));
                            this._storeInt((_32_ + 140), 1);
                            break label$0;
                        }
                        while (false);
                        _30_ = this._storeDouble((_32_ + 104), ((this._loadDouble((_32_ + 128))) + -3.1415926534682512));
                        _30_ = this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (_30_ - 1.2154201013012384E-10));
                        this._storeDouble((_31_ + 8), (((this._loadDouble((_32_ + 104))) - _30_) - 1.2154201013012384E-10));
                        this._storeInt((_32_ + 140), 2);
                        break label$0;
                    }
                    while (false);
                    _30_ = this._storeDouble((_32_ + 104), ((this._loadDouble((_32_ + 128))) + -4.712388980202377));
                    _30_ = this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (_30_ - 1.8231301519518578E-10));
                    this._storeDouble((_31_ + 8), (((this._loadDouble((_32_ + 104))) - _30_) - 1.8231301519518578E-10));
                    this._storeInt((_32_ + 140), 3);
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (this._loadDouble((_32_ + 32))));
                this._storeDouble((_31_ + 8), (this._loadDouble((_32_ + 40))));
                this._storeInt((_32_ + 140), (this._loadInt((_32_ + 20))));
                break label$0;
            }
            while (false);
            _30_ = this._storeDouble((_32_ + 104), ((this._loadDouble((_32_ + 128))) + -6.2831853069365025));
            _30_ = this._storeDouble((_31_ = this._loadInt((_32_ + 124))), (_30_ - 2.430840202602477E-10));
            this._storeDouble((_31_ + 8), (((this._loadDouble((_32_ + 104))) - _30_) - 2.430840202602477E-10));
            this._storeInt((_32_ + 140), 4);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 140));
        this._storeInt((0 + 4), (_32_ + 144));
        return _31_;
    }

    public final int __rem_pio2f(float _30_, int _31_)
    {
        int _32_ = 0;
        double _33_ = 0.0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 56), _30_);
        this._storeInt((_32_ + 52), _31_);
        this._storeFloat((_32_ + 48), (this._loadFloat((_32_ + 56))));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 48))) & 2147483647))) & 4294967295L) > (1305022426 & 4294967295L)) {
                    break label$1;
                }
                _31_ = this._storeInt((_32_ + 16), (_truncateDoubleToSignedInteger((this._storeDouble((_32_ + 24), (((((double) (this._loadFloat((_32_ + 56)))) * 0.6366197723675814) + 6.755399441055744E15) - 6.755399441055744E15))))));
                this._storeDouble((this._loadInt((_32_ + 52))), ((((double) (this._loadFloat((_32_ + 56)))) + ((_33_ = this._loadDouble((_32_ + 24))) * -1.5707963109016418)) + (_33_ * -1.5893254773528196E-8)));
                this._storeInt((_32_ + 60), _31_);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (2139095040 & 4294967295L)) {
                    break label$2;
                }
                this._storeDouble((this._loadInt((_32_ + 52))), ((double) ((_30_ = this._loadFloat((_32_ + 56))) - _30_)));
                this._storeInt((_32_ + 60), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 48))) >>> 31));
            _31_ = this._storeInt((_32_ + 8), (((this._loadInt((_32_ + 20))) >>> 23) + -150));
            this._storeInt((_32_ + 48), ((this._loadInt((_32_ + 20))) - (_31_ << 23)));
            this._storeDouble((_32_ + 40), ((double) (this._loadFloat((_32_ + 48)))));
            this._storeInt((_32_ + 16), (this.__rem_pio2_large.invoke((_32_ + 40), (_32_ + 32), (this._loadInt((_32_ + 8))), 1, 0)));
            label$3:
            do {
                if ((this._loadInt((_32_ + 12))) == 0) {
                    break label$3;
                }
                this._storeDouble((this._loadInt((_32_ + 52))), (-(this._loadDouble((_32_ + 32)))));
                this._storeInt((_32_ + 60), (0 - (this._loadInt((_32_ + 16)))));
                break label$0;
            }
            while (false);
            this._storeDouble((this._loadInt((_32_ + 52))), (this._loadDouble((_32_ + 32))));
            this._storeInt((_32_ + 60), (this._loadInt((_32_ + 16))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 60));
        this._storeInt((0 + 4), (_32_ + 64));
        return _31_;
    }

    public final void __reset_tls()
    {
        int _30_ = 0;
        int _31_ = 0;
        int _32_ = 0;
        int _33_ = 0;
        label$0:
        do {
            if ((this._storeInt((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), (this._loadInt((this._loadInt(((this._storeInt((_31_ + 12), (__pthread_self$2e$5()))) + 4))))))) == 0) {
                break label$0;
            }
            this._storeInt((_31_ + 8), (this._loadInt((0 + 12960))));
            _30_ = this._storeInt((_31_ + 4), 1);
            label$2:
            do {
                label$1:
                while (true) {
                    if (((this._loadInt((_31_ + 4))) & 4294967295L) > ((this._loadInt(_31_)) & 4294967295L)) {
                        break label$2;
                    }
                    label$3:
                    do {
                        if ((this._loadInt(((this._loadInt(((this._loadInt((_31_ + 12))) + 4))) + ((this._loadInt((_31_ + 4))) << 2)))) == 0) {
                            break label$3;
                        }
                        memcpy((this._loadInt(((this._loadInt(((this._loadInt((_31_ + 12))) + 4))) + ((this._loadInt((_31_ + 4))) << 2)))), (this._loadInt(((_32_ = this._loadInt((_31_ + 8))) + 4))), (this._loadInt((_32_ + 8))));
                        memset(((this._loadInt(((this._loadInt(((this._loadInt((_31_ + 12))) + 4))) + ((this._loadInt((_31_ + 4))) << 2)))) + (_33_ = this._loadInt(((_32_ = this._loadInt((_31_ + 8))) + 8)))), 0, ((this._loadInt((_32_ + 12))) - _33_));
                    }
                    while (false);
                    this._storeInt((_31_ + 4), ((this._loadInt((_31_ + 4))) + _30_));
                    this._storeInt((_31_ + 8), (this._loadInt((this._loadInt((_31_ + 8))))));
                    continue label$1;
                }
            }
            while (false);
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int __pthread_self$2e$5()
    {
        return (this.pthread_self.invoke());
    }

    public final int __signbit(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return ((int) ((this._loadLong(_31_)) >>> 63L));
    }

    public final int __signbitf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return ((this._loadInt((_31_ + 8))) >>> 31);
    }

    public final int __signbitl(long _30_, long _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        _33_ = __signbit((this.__trunctfdf2.invoke((this._storeLong((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), _30_)), (this._storeLong((_32_ + 8), _31_)))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _33_;
    }

    public final double __sin(double _30_, double _31_, int _32_)
    {
        int _33_ = 0;
        this._storeDouble(((_33_ = (this._loadInt((0 + 4))) - 64) + 48), _30_);
        this._storeDouble((_33_ + 40), _31_);
        this._storeInt((_33_ + 36), _32_);
        _30_ = this._storeDouble(_33_, ((_31_ = this._storeDouble((_33_ + 24), ((_31_ = this._loadDouble((_33_ + 48))) * _31_))) * _31_));
        this._storeDouble((_33_ + 16), ((((_31_ = this._loadDouble((_33_ + 24))) * ((_31_ * 2.7557313707070068E-6) + -1.984126982985795E-4)) + 0.00833333333332249) + ((_31_ * _30_) * ((_31_ * 1.58969099521155E-10) + -2.5050760253406863E-8))));
        this._storeDouble((_33_ + 8), ((this._loadDouble((_33_ + 24))) * (this._loadDouble((_33_ + 48)))));
        label$0:
        do {
            if ((this._loadInt((_33_ + 36))) == 0) {
                break label$0;
            }
            this._storeDouble((_33_ + 56), ((this._loadDouble((_33_ + 48))) - ((((this._loadDouble((_33_ + 24))) * (((_31_ = this._loadDouble((_33_ + 40))) * 0.5) - ((_30_ = this._loadDouble((_33_ + 8))) * (this._loadDouble((_33_ + 16)))))) - _31_) + (_30_ * 0.16666666666666632))));
            return (this._loadDouble((_33_ + 56)));
        }
        while (false);
        this._storeDouble((_33_ + 56), ((this._loadDouble((_33_ + 48))) + ((this._loadDouble((_33_ + 8))) * (((this._loadDouble((_33_ + 24))) * (this._loadDouble((_33_ + 16)))) + -0.16666666666666632))));
        return (this._loadDouble((_33_ + 56)));
    }

    public final float __sindf(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 48) + 16), ((_30_ = this._storeDouble((_31_ + 8), ((_30_ = this._storeDouble((_31_ + 40), _30_)) * _30_))) * _30_));
        this._storeDouble((_31_ + 32), (((this._loadDouble((_31_ + 8))) * 2.718311493989822E-6) + -1.9839334836096632E-4));
        _30_ = this._storeDouble((_31_ + 24), ((this._loadDouble((_31_ + 8))) * (this._loadDouble((_31_ + 40)))));
        return ((float) (((this._loadDouble((_31_ + 40))) + (_30_ * (((this._loadDouble((_31_ + 8))) * 0.008333329385889463) + -0.16666666641626524))) + ((_30_ * (this._loadDouble((_31_ + 16)))) * (this._loadDouble((_31_ + 32))))));
    }

    public final void __init_ssp(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) == 0) {
                    break label$1;
                }
                memcpy(4236, (this._loadInt((_31_ + 12))), 4);
                break label$0;
            }
            while (false);
            this._storeInt((0 + 4236), (4236 * 1103515245));
        }
        while (false);
        _30_ = this._loadInt((0 + 4236));
        this._storeInt(((__pthread_self$2e$6()) + 20), _30_);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int __pthread_self$2e$6()
    {
        return (this.pthread_self.invoke());
    }

    public final void __stack_chk_fail()
    {
        this.abort.invoke();
        throw (new UnreachableException());
    }

    public final int __stdio_close(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(6, (dummy((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) + 60))))))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int dummy(int _30_)
    {
        return (this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_));
    }

    public final void __stdio_exit()
    {
        int _30_ = 0;
        this._storeInt(((_30_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), (this._loadInt((__ofl_lock()))));
        label$1:
        do {
            label$0:
            while (true) {
                if ((this._loadInt((_30_ + 12))) == 0) {
                    break label$1;
                }
                close_file((this._loadInt((_30_ + 12))));
                this._storeInt((_30_ + 12), (this._loadInt(((this._loadInt((_30_ + 12))) + 56))));
                continue label$0;
            }
        }
        while (false);
        close_file((this._loadInt((0 + 16112))));
        close_file((this._loadInt((0 + 17296))));
        this._storeInt((0 + 4), (_30_ + 16));
        return;
    }

    public final void close_file(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) == 0) {
                break label$0;
            }
            label$1:
            do {
                if ((this._loadInt(((this._loadInt((_31_ + 12))) + 76))) < 0) {
                    break label$1;
                }
                this.__lockfile.invoke((this._loadInt((_31_ + 12))));
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt(((_30_ = this._loadInt((_31_ + 12))) + 20))) & 4294967295L) <= ((this._loadInt((_30_ + 28))) & 4294967295L)) {
                    break label$2;
                }
                this._iiiiTable[this._tableIndices[this._loadInt(((_30_ = this._loadInt((_31_ + 12))) + 36))]].invoke(_30_, 0, 0);
            }
            while (false);
            if (((this._loadInt(((_30_ = this._loadInt((_31_ + 12))) + 4))) & 4294967295L) >= ((this._loadInt((_30_ + 8))) & 4294967295L)) {
                break label$0;
            }
            this._liliTable[this._tableIndices[this._loadInt(((_30_ = this._loadInt((_31_ + 12))) + 40))]].invoke(_30_, ((long) ((this._loadInt((_30_ + 4))) - (this._loadInt((_30_ + 8))))), 1);
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int __stdio_read(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_33_ + 36), _31_);
        this._storeInt((_33_ + 32), _32_);
        this._storeInt((_33_ + 16), (this._loadInt((_33_ + 36))));
        this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 32))) - (((this._loadInt(((_32_ = this._loadInt((_33_ + 40))) + 48))) != 0) ? 1 : 0)));
        this._storeInt((_33_ + 24), (this._loadInt((_32_ + 44))));
        this._storeInt((_33_ + 28), (this._loadInt(((this._loadInt((_33_ + 40))) + 48))));
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_33_ + 12), (__syscall_ret((this.__syscall3.invoke(145, (this._loadInt(((this._loadInt((_33_ + 40))) + 60))), (_33_ + 16), 2)))))) > 0) {
                    break label$1;
                }
                this._storeInt((_32_ = this._loadInt((_33_ + 40))), ((this._loadInt(_32_)) | (((_32_ = this._loadInt((_33_ + 12))) & 48) ^ 16)));
                this._storeInt((_33_ + 44), _32_);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_33_ + 12))) & 4294967295L) > ((this._loadInt((_33_ + 20))) & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_33_ + 44), (this._loadInt((_33_ + 12))));
                break label$0;
            }
            while (false);
            _31_ = this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) - (this._loadInt((_33_ + 20)))));
            this._storeInt(((_32_ = this._loadInt((_33_ + 40))) + 4), (this._loadInt((_32_ + 44))));
            this._storeInt((_32_ + 8), (_31_ + (this._loadInt((_32_ + 44)))));
            label$3:
            do {
                if ((this._loadInt(((this._loadInt((_33_ + 40))) + 48))) == 0) {
                    break label$3;
                }
                this._storeInt(((_32_ = this._loadInt((_33_ + 40))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                this._storeInt((((this._loadInt((_33_ + 36))) + (this._loadInt((_33_ + 32)))) + -1), (this._loadInt(_32_)));
            }
            while (false);
            this._storeInt((_33_ + 44), (this._loadInt((_33_ + 32))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 44));
        this._storeInt((0 + 4), (_33_ + 48));
        return _32_;
    }

    public final long __stdio_seek(int _30_, long _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeLong((_33_ + 16), _31_);
        this._storeInt((_33_ + 12), _32_);
        label$0:
        do {
            if ((__syscall_ret((this.__syscall5.invoke(140, (this._loadInt(((this._loadInt((_33_ + 28))) + 60))), ((int) ((_31_ = this._loadLong((_33_ + 16))) >>> 32L)), ((int) _31_), _33_, _32_)))) > -1) {
                break label$0;
            }
            this._storeLong(_33_, -1L);
        }
        while (false);
        _31_ = this._loadLong(_33_);
        this._storeInt((0 + 4), (_33_ + 32));
        return _31_;
    }

    public final int __string_read(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        this._storeInt((_33_ + 16), (this._loadInt(((this._loadInt((_33_ + 28))) + 84))));
        _32_ = this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 20))) + 256));
        label$0:
        do {
            if ((this._storeInt((_33_ + 8), (memchr((this._loadInt((_33_ + 16))), 0, _32_)))) == 0) {
                break label$0;
            }
            this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 8))) - (this._loadInt((_33_ + 16)))));
        }
        while (false);
        label$1:
        do {
            if (((this._loadInt((_33_ + 12))) & 4294967295L) >= ((this._loadInt((_33_ + 20))) & 4294967295L)) {
                break label$1;
            }
            this._storeInt((_33_ + 20), (this._loadInt((_33_ + 12))));
        }
        while (false);
        memcpy((this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 16))), (this._loadInt((_33_ + 20))));
        this._storeInt(((_32_ = this._loadInt((_33_ + 28))) + 8), ((_31_ = this._loadInt((_33_ + 16))) + (this._loadInt((_33_ + 12)))));
        this._storeInt((_32_ + 4), (_31_ + (this._loadInt((_33_ + 20)))));
        this._storeInt(((this._loadInt((_33_ + 28))) + 84), ((this._loadInt((_33_ + 16))) + (this._loadInt((_33_ + 12)))));
        _32_ = this._loadInt((_33_ + 20));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final double __tan(double _30_, double _31_, int _32_)
    {
        int _33_ = 0;
        this._storeDouble(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 144))) + 128), _30_);
        this._storeDouble((_33_ + 120), _31_);
        this._storeInt((_33_ + 116), _32_);
        this._storeDouble((_33_ + 24), (this._loadDouble((_33_ + 128))));
        this._storeLong((_33_ + 44), (this._loadLong((_33_ + 28))));
        this._storeInt((_33_ + 40), ((((_32_ = (this._loadInt((_33_ + 44))) & 2147483647) & 4294967295L) > (1072010279 & 4294967295L)) ? 1 : 0));
        label$0:
        do {
            if ((_32_ & 4294967295L) < (1072010280 & 4294967295L)) {
                break label$0;
            }
            label$1:
            do {
                if ((this._storeInt((_33_ + 36), ((this._loadInt((_33_ + 44))) >>> 31))) == 0) {
                    break label$1;
                }
                this._storeDouble((_33_ + 128), (-(this._loadDouble((_33_ + 128)))));
                this._storeDouble((_33_ + 120), (-(this._loadDouble((_33_ + 120)))));
            }
            while (false);
            this._storeDouble((_33_ + 128), ((0.7853981633974483 - (this._loadDouble((_33_ + 128)))) + (3.061616997868383E-17 - (this._loadDouble((_33_ + 120))))));
            this._storeLong((_33_ + 120), 0L);
        }
        while (false);
        this._storeDouble((_33_ + 96), ((this._loadDouble((0 + 4264))) + ((_31_ = this._storeDouble((_33_ + 80), ((_31_ = this._storeDouble((_33_ + 104), ((_31_ = this._loadDouble((_33_ + 128))) * _31_))) * _31_))) * ((this._loadDouble((0 + 4280))) + (_31_ * ((this._loadDouble((0 + 4296))) + (_31_ * ((this._loadDouble((0 + 4312))) + (_31_ * ((this._loadDouble((0 + 4328))) + (_31_ * (this._loadDouble((0 + 4344))))))))))))));
        this._storeDouble((_33_ + 88), ((this._loadDouble((_33_ + 104))) * ((this._loadDouble((0 + 4272))) + ((_31_ = this._loadDouble((_33_ + 80))) * ((this._loadDouble((0 + 4288))) + (_31_ * ((this._loadDouble((0 + 4304))) + (_31_ * ((this._loadDouble((0 + 4320))) + (_31_ * ((this._loadDouble((0 + 4336))) + (_31_ * (this._loadDouble((0 + 4352)))))))))))))));
        _31_ = this._storeDouble((_33_ + 72), ((this._loadDouble((_33_ + 104))) * (this._loadDouble((_33_ + 128)))));
        this._storeDouble((_33_ + 80), ((this._storeDouble((_33_ + 96), (((_30_ = this._loadDouble((_33_ + 120))) + ((this._loadDouble((_33_ + 104))) * (_30_ + (_31_ * ((this._loadDouble((_33_ + 96))) + (this._loadDouble((_33_ + 88)))))))) + (_31_ * (this._loadDouble((0 + 4256))))))) + (this._loadDouble((_33_ + 128)))));
        label$2:
        do {
            label$3:
            do {
                label$4:
                do {
                    label$5:
                    do {
                        if ((this._loadInt((_33_ + 40))) == 0) {
                            break label$5;
                        }
                        this._storeDouble((_33_ + 88), ((_30_ = this._storeDouble((_33_ + 72), ((double) (1 - ((this._loadInt((_33_ + 116))) << 1))))) + (((this._loadDouble((_33_ + 128))) + ((this._loadDouble((_33_ + 96))) - (((_31_ = this._loadDouble((_33_ + 80))) * _31_) / (_31_ + _30_)))) * -2.0)));
                        if ((this._loadInt((_33_ + 36))) == 0) {
                            break label$4;
                        }
                        this._storeDouble((_33_ + 136), (-(this._loadDouble((_33_ + 88)))));
                        break label$2;
                    }
                    while (false);
                    if ((this._loadInt((_33_ + 116))) == 0) {
                        break label$3;
                    }
                    this._storeDouble((_33_ + 56), (this._loadDouble((_33_ + 80))));
                    this._storeDouble((_33_ + 16), (this._loadDouble((_33_ + 56))));
                    this._storeLong((_33_ + 16), ((this._loadLong((_33_ + 16))) & -4294967296L));
                    this._storeDouble((_33_ + 56), (this._loadDouble((_33_ + 16))));
                    this._storeDouble((_33_ + 88), ((this._loadDouble((_33_ + 96))) - ((this._loadDouble((_33_ + 56))) - (this._loadDouble((_33_ + 128))))));
                    this._storeDouble((_33_ + 48), (this._storeDouble((_33_ + 64), (-1.0 / (this._loadDouble((_33_ + 80)))))));
                    this._storeDouble((_33_ + 8), (this._loadDouble((_33_ + 48))));
                    this._storeLong((_33_ + 8), ((this._loadLong((_33_ + 8))) & -4294967296L));
                    this._storeDouble((_33_ + 48), (this._loadDouble((_33_ + 8))));
                    this._storeDouble((_33_ + 136), ((_31_ = this._loadDouble((_33_ + 48))) + ((this._loadDouble((_33_ + 64))) * (((_31_ * (this._loadDouble((_33_ + 56)))) + 1.0) + (_31_ * (this._loadDouble((_33_ + 88))))))));
                    break label$2;
                }
                while (false);
                this._storeDouble((_33_ + 136), (this._loadDouble((_33_ + 88))));
                break label$2;
            }
            while (false);
            this._storeDouble((_33_ + 136), (this._loadDouble((_33_ + 80))));
        }
        while (false);
        _31_ = this._loadDouble((_33_ + 136));
        this._storeInt((0 + 4), (_33_ + 144));
        return _31_;
    }

    public final float __tandf(double _30_, int _31_)
    {
        double _32_ = 0.0;
        int _33_ = 0;
        this._storeDouble(((_33_ = (this._loadInt((0 + 4))) - 64) + 56), _30_);
        this._storeInt((_33_ + 52), _31_);
        this._storeDouble((_33_ + 32), ((this._loadDouble((0 + 4400))) + ((this._storeDouble((_33_ + 40), ((_30_ = this._loadDouble((_33_ + 56))) * _30_))) * (this._loadDouble((0 + 4408))))));
        this._storeDouble((_33_ + 8), ((this._loadDouble((0 + 4384))) + ((this._loadDouble((_33_ + 40))) * (this._loadDouble((0 + 4392))))));
        this._storeDouble((_33_ + 24), ((_30_ = this._loadDouble((_33_ + 40))) * _30_));
        this._storeDouble((_33_ + 16), ((this._loadDouble((_33_ + 40))) * (this._loadDouble((_33_ + 56)))));
        _30_ = this._storeDouble(_33_, ((this._loadDouble((0 + 4368))) + ((this._loadDouble((_33_ + 40))) * (this._loadDouble((0 + 4376))))));
        this._storeDouble((_33_ + 32), (((this._loadDouble((_33_ + 56))) + (_30_ * (_32_ = this._loadDouble((_33_ + 16))))) + ((_32_ * (_30_ = this._loadDouble((_33_ + 24)))) * ((this._loadDouble((_33_ + 8))) + (_30_ * (this._loadDouble((_33_ + 32))))))));
        label$0:
        do {
            if ((this._loadInt((_33_ + 52))) == 0) {
                break label$0;
            }
            return ((float) (-1.0 / (this._loadDouble((_33_ + 32)))));
        }
        while (false);
        return ((float) (this._loadDouble((_33_ + 32))));
    }

    public final int __toread(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        _31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16));
        this._storeInt((_30_ + 74), ((_32_ = this._loadInt((_30_ + 74))) | (_32_ + -1)));
        label$0:
        do {
            if (((this._loadInt(((_30_ = this._storeInt((_31_ + 8), _30_)) + 20))) & 4294967295L) <= ((this._loadInt((_30_ + 44))) & 4294967295L)) {
                break label$0;
            }
            this._iiiiTable[this._tableIndices[this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 36))]].invoke(_30_, 0, 0);
        }
        while (false);
        _32_ = this._storeInt(((_30_ = this._loadInt((_31_ + 8))) + 20), (this._storeInt((_30_ + 16), (this._storeInt((_30_ + 28), 0)))));
        label$1:
        do {
            label$2:
            do {
                if (((this._loadInt(_30_)) & 4) == 0) {
                    break label$2;
                }
                this._storeInt((_30_ = this._loadInt((_31_ + 8))), ((this._loadInt(_30_)) | 32));
                this._storeInt((_31_ + 12), -1);
                break label$1;
            }
            while (false);
            this._storeInt(((_30_ = this._loadInt((_31_ + 8))) + 4), (this._storeInt((_30_ + 8), ((this._loadInt((_30_ + 44))) + (this._loadInt((_30_ + 48)))))));
            _temp$0 = -1;
            _temp$1 = _32_;
            _temp$2 = ((((this._loadInt((this._loadInt((_31_ + 8))))) & 16) >>> 4) != 0) ? _temp$0 : _temp$1;
            this._storeInt((_31_ + 12), _temp$2);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final void __toread_needs_stdio_exit()
    {
        __stdio_exit();
        return;
    }

    public final int __towrite(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = this._loadInt((0 + 4));
        this._storeInt((_30_ + 74), ((_31_ = this._loadInt((_30_ + 74))) | (_31_ + -1)));
        label$0:
        do {
            if (((this._loadInt((this._storeInt(((_32_ = _32_ - 16) + 8), _30_)))) & 8) == 0) {
                break label$0;
            }
            this._storeInt((_30_ = this._loadInt((_32_ + 8))), ((this._loadInt(_30_)) | 32));
            this._storeInt((_32_ + 12), -1);
            return (this._loadInt((_32_ + 12)));
        }
        while (false);
        this._storeLong(((_30_ = this._loadInt((_32_ + 8))) + 4), 0L);
        _30_ = this._storeInt((_30_ + 28), (this._loadInt((_30_ + 44))));
        this._storeInt(((this._loadInt((_32_ + 8))) + 20), _30_);
        this._storeInt(((_30_ = this._loadInt((_32_ + 8))) + 16), ((this._loadInt((_30_ + 44))) + (this._loadInt((_30_ + 48)))));
        this._storeInt((_32_ + 12), 0);
        return (this._loadInt((_32_ + 12)));
    }

    public final void __towrite_needs_stdio_exit()
    {
        __stdio_exit();
        return;
    }

    public final int __uflow(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((__toread((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)))) != 0) {
                    break label$1;
                }
                if ((this._iiiiTable[this._tableIndices[this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 32))]].invoke(_30_, (_31_ + 7), 1)) != 1) {
                    break label$1;
                }
                this._storeInt((_31_ + 12), (this._loadInt((_31_ + 7))));
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 12), -1);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final void _exit(int _30_)
    {
        this._Exit.invoke((this._storeInt(((this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)));
        throw (new UnreachableException());
    }

    public final int abs(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._storeInt(((_31_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) < 1) {
                break label$0;
            }
            return (this._loadInt((_31_ + 12)));
        }
        while (false);
        return (0 - (this._loadInt((_31_ + 12))));
    }

    public final int access(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __syscall_ret((this.__syscall2.invoke(33, (this._loadInt((_32_ + 12))), _31_)));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int acct(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(51, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double acos(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 96))) + 24), (this._storeDouble((_31_ + 80), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                if (((this._storeInt((_31_ + 32), ((this._storeInt((_31_ + 36), (this._loadInt((_31_ + 28))))) & 2147483647))) & 4294967295L) < (1072693248 & 4294967295L)) {
                                    break label$5;
                                }
                                this._storeDouble((_31_ + 8), (this._loadDouble((_31_ + 80))));
                                if (((this._storeInt((_31_ + 20), (this._loadInt((_31_ + 8))))) | ((this._loadInt((_31_ + 32))) + -1072693248)) == 0) {
                                    break label$4;
                                }
                                this._storeDouble((_31_ + 88), (0.0 / ((_30_ = this._loadDouble((_31_ + 80))) - _30_)));
                                break label$0;
                            }
                            while (false);
                            label$6:
                            do {
                                if (((this._loadInt((_31_ + 32))) & 4294967295L) > (1071644671 & 4294967295L)) {
                                    break label$6;
                                }
                                if (((this._loadInt((_31_ + 32))) & 4294967295L) > (1012924416 & 4294967295L)) {
                                    break label$3;
                                }
                                this._storeLong((_31_ + 88), 4609753056924675352L);
                                break label$0;
                            }
                            while (false);
                            if (((this._loadInt((_31_ + 36))) >>> 31) == 0) {
                                break label$2;
                            }
                            this._storeDouble((_31_ + 56), (Math.sqrt((this._storeDouble((_31_ + 72), (((this._loadDouble((_31_ + 80))) + 1.0) * 0.5))))));
                            this._storeDouble((_31_ + 88), ((_30_ = 1.5707963267948966 - ((this._storeDouble((_31_ + 64), (((R((this._loadDouble((_31_ + 72))))) * (this._loadDouble((_31_ + 56)))) + -6.123233995736766E-17))) + (this._loadDouble((_31_ + 56))))) + _30_));
                            break label$0;
                        }
                        while (false);
                        if (((this._loadInt((_31_ + 36))) >>> 31) == 0) {
                            break label$1;
                        }
                        this._storeLong((_31_ + 88), 4614256656552045848L);
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_31_ + 88), (1.5707963267948966 - ((_30_ = this._loadDouble((_31_ + 80))) - (6.123233995736766E-17 - (_30_ * (R((_30_ * _30_))))))));
                    break label$0;
                }
                while (false);
                this._storeDouble(_31_, (this._storeDouble((_31_ + 40), (this._storeDouble((_31_ + 56), (Math.sqrt((this._storeDouble((_31_ + 72), ((1.0 - (this._loadDouble((_31_ + 80)))) * 0.5))))))))));
                this._storeLong(_31_, ((this._loadLong(_31_)) & -4294967296L));
                _30_ = this._storeDouble((_31_ + 40), (this._loadDouble(_31_)));
                this._storeDouble((_31_ + 48), (((this._loadDouble((_31_ + 72))) - (_30_ * _30_)) / (_30_ + (this._loadDouble((_31_ + 56))))));
                this._storeDouble((_31_ + 88), ((_30_ = (this._storeDouble((_31_ + 64), (((R((this._loadDouble((_31_ + 72))))) * (this._loadDouble((_31_ + 56)))) + (this._loadDouble((_31_ + 48)))))) + (this._loadDouble((_31_ + 40)))) + _30_));
                break label$0;
            }
            while (false);
            this._storeLong((_31_ + 88), 0L);
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 88));
        this._storeInt((0 + 4), (_31_ + 96));
        return _30_;
    }

    public final double R(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 32) + 16), ((_30_ = this._storeDouble((_31_ + 24), _30_)) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 3.479331075960212E-5) + 7.915349942898145E-4)) + -0.04005553450067941)) + 0.20121253213486293)) + -0.3255658186224009)) + 0.16666666666666666)));
        _30_ = this._storeDouble((_31_ + 8), (((_30_ = this._loadDouble((_31_ + 24))) * ((_30_ * ((_30_ * ((_30_ * 0.07703815055590194) + -0.6882839716054533)) + 2.0209457602335057)) + -2.403394911734414)) + 1.0));
        return ((this._loadDouble((_31_ + 16))) / _30_);
    }

    public final float acosf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 24), (this._storeFloat((_31_ + 56), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    if (((this._storeInt((_31_ + 28), ((this._storeInt((_31_ + 32), (this._loadInt((_31_ + 24))))) & 2147483647))) & 4294967295L) < (1065353216 & 4294967295L)) {
                                        break label$6;
                                    }
                                    if ((this._loadInt((_31_ + 28))) != 1065353216) {
                                        break label$5;
                                    }
                                    if (((this._loadInt((_31_ + 32))) >>> 31) == 0) {
                                        break label$2;
                                    }
                                    this._storeInt((_31_ + 60), 1078530010);
                                    break label$0;
                                }
                                while (false);
                                if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1056964607 & 4294967295L)) {
                                    break label$4;
                                }
                                if (((this._loadInt((_31_ + 28))) & 4294967295L) > (847249408 & 4294967295L)) {
                                    break label$3;
                                }
                                this._storeInt((_31_ + 60), 1070141402);
                                break label$0;
                            }
                            while (false);
                            this._storeFloat((_31_ + 60), (0.0f / ((_30_ = this._loadFloat((_31_ + 56))) - _30_)));
                            break label$0;
                        }
                        while (false);
                        if (((this._loadInt((_31_ + 32))) >>> 31) == 0) {
                            break label$1;
                        }
                        this._storeFloat((_31_ + 44), ((float) (Math.sqrt((this._storeFloat((_31_ + 52), (((this._loadFloat((_31_ + 56))) + 1.0f) * 0.5f)))))));
                        this._storeFloat((_31_ + 60), ((_30_ = 1.5707963f - ((this._storeFloat((_31_ + 48), (((R$2e$10((this._loadFloat((_31_ + 52))))) * (this._loadFloat((_31_ + 44)))) + -7.5497894E-8f))) + (this._loadFloat((_31_ + 44))))) + _30_));
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((_31_ + 60), (1.5707963f - ((_30_ = this._loadFloat((_31_ + 56))) - (7.5497894E-8f - (_30_ * (R$2e$10((_30_ * _30_))))))));
                    break label$0;
                }
                while (false);
                this._storeInt((_31_ + 60), 0);
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 16), (this._storeFloat((_31_ + 44), ((float) (Math.sqrt((this._storeFloat((_31_ + 52), ((1.0f - (this._loadFloat((_31_ + 56)))) * 0.5f)))))))));
            this._storeInt((_31_ + 8), ((this._storeInt((_31_ + 32), (this._loadInt((_31_ + 16))))) & -4096));
            _30_ = this._storeFloat((_31_ + 36), (this._loadFloat((_31_ + 8))));
            this._storeFloat((_31_ + 40), (((this._loadFloat((_31_ + 52))) - (_30_ * _30_)) / (_30_ + (this._loadFloat((_31_ + 44))))));
            this._storeFloat((_31_ + 60), ((_30_ = (this._storeFloat((_31_ + 48), (((R$2e$10((this._loadFloat((_31_ + 52))))) * (this._loadFloat((_31_ + 44)))) + (this._loadFloat((_31_ + 40)))))) + (this._loadFloat((_31_ + 36)))) + _30_));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 60));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final float R$2e$10(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), ((_30_ = this._storeFloat((_31_ + 12), _30_)) * ((_30_ * ((_30_ * -0.008656363f) + -0.042743422f)) + 0.16666587f)));
        _30_ = this._storeFloat((_31_ + 4), (((this._loadFloat((_31_ + 12))) * -0.70662963f) + 1.0f));
        return ((this._loadFloat((_31_ + 8))) / _30_);
    }

    public final double acosh(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 8), (this._storeDouble((_31_ + 16), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 4), ((int) (((this._loadLong((_31_ + 8))) >>> 52L) & 2047L)))) & 4294967295L) > (1023 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_31_ + 24), (log1p(((_30_ = (this._loadDouble((_31_ + 16))) + -1.0) + (Math.sqrt(((_30_ * _30_) + (_30_ + _30_))))))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_31_ + 4))) & 4294967295L) > (1048 & 4294967295L)) {
                    break label$2;
                }
                this._storeDouble((_31_ + 24), (log((((_30_ = this._loadDouble((_31_ + 16))) + _30_) - (1.0 / (_30_ + (Math.sqrt(((_30_ * _30_) - 1.0)))))))));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 24), ((log((this._loadDouble((_31_ + 16))))) + 0.6931471805599453));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 24));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final float acoshf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 16), (this._storeFloat((_31_ + 24), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 16))) & 2147483647))) & 4294967295L) > (1073741823 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_31_ + 28), (log1pf(((_30_ = (this._loadFloat((_31_ + 24))) + -1.0f) + ((float) (Math.sqrt(((_30_ * _30_) + (_30_ + _30_)))))))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1166016511 & 4294967295L)) {
                    break label$2;
                }
                this._storeFloat((_31_ + 28), (logf((((_30_ = this._loadFloat((_31_ + 24))) + _30_) - (1.0f / (_30_ + ((float) (Math.sqrt(((_30_ * _30_) - 1.0f))))))))));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 28), ((logf((this._loadFloat((_31_ + 24))))) + 0.6931472f));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final void acoshl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (acosh((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void acosl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (acos((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int alarm(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        int _33_ = 0;
        _31_ = this._storeInt((_33_ = (_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 20), 0);
        this._storeInt((_32_ + 28), _30_);
        _30_ = this._storeInt((_32_ + 12), (this._storeInt((_32_ + 8), _31_)));
        this._storeInt((_32_ + 16), (this._loadInt((_32_ + 28))));
        this.__syscall3.invoke(104, _30_, (_32_ + 8), (_32_ + 8));
        _33_ = this._loadInt(_33_);
        _31_ = this._loadInt((_32_ + 16));
        this._storeInt((0 + 4), (_32_ + 32));
        return (_31_ + ((_33_ != _30_) ? 1 : 0));
    }

    public final int aligned_alloc(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __memalign((this._loadInt((_32_ + 12))), _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final double asin(double _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 96))) + 40), (this._storeDouble((_31_ + 80), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                if (((this._storeInt((_31_ + 48), ((this._storeInt((_31_ + 52), (this._loadInt((_31_ + 44))))) & 2147483647))) & 4294967295L) < (1072693248 & 4294967295L)) {
                                    break label$5;
                                }
                                this._storeDouble((_31_ + 24), (this._loadDouble((_31_ + 80))));
                                if (((this._storeInt((_31_ + 36), (this._loadInt((_31_ + 24))))) | ((this._loadInt((_31_ + 48))) + -1072693248)) == 0) {
                                    break label$4;
                                }
                                this._storeDouble((_31_ + 88), (0.0 / ((_30_ = this._loadDouble((_31_ + 80))) - _30_)));
                                break label$0;
                            }
                            while (false);
                            label$6:
                            do {
                                if (((this._loadInt((_31_ + 48))) & 4294967295L) > (1071644671 & 4294967295L)) {
                                    break label$6;
                                }
                                if (((this._loadInt((_31_ + 48))) & 4294967295L) > (1045430271 & 4294967295L)) {
                                    break label$3;
                                }
                                if (((this._loadInt((_31_ + 48))) & 4294967295L) < (1048576 & 4294967295L)) {
                                    break label$3;
                                }
                                this._storeDouble((_31_ + 88), (this._loadDouble((_31_ + 80))));
                                break label$0;
                            }
                            while (false);
                            this._storeDouble((_31_ + 56), (Math.sqrt((this._storeDouble((_31_ + 72), ((1.0 - (Math.abs((this._loadDouble((_31_ + 80)))))) * 0.5))))));
                            this._storeDouble((_31_ + 64), (R$2e$11((this._loadDouble((_31_ + 72))))));
                            if (((this._loadInt((_31_ + 48))) & 4294967295L) < (1072640819 & 4294967295L)) {
                                break label$2;
                            }
                            this._storeDouble((_31_ + 80), (1.5707963267948966 - (((_30_ = (_30_ = this._loadDouble((_31_ + 56))) + (_30_ * (this._loadDouble((_31_ + 64))))) + _30_) + -6.123233995736766E-17)));
                            break label$1;
                        }
                        while (false);
                        this._storeDouble((_31_ + 88), (((this._loadDouble((_31_ + 80))) * 1.5707963267948966) + 7.52316384526264E-37));
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_31_ + 88), ((_30_ = this._loadDouble((_31_ + 80))) + (_30_ * (R$2e$11((_30_ * _30_))))));
                    break label$0;
                }
                while (false);
                this._storeDouble(_31_, (this._storeDouble((_31_ + 16), (this._loadDouble((_31_ + 56))))));
                this._storeLong(_31_, ((this._loadLong(_31_)) & -4294967296L));
                _30_ = this._storeDouble((_31_ + 16), (this._loadDouble(_31_)));
                _30_ = this._storeDouble((_31_ + 8), (((this._loadDouble((_31_ + 72))) - (_30_ * _30_)) / (_30_ + (this._loadDouble((_31_ + 56))))));
                this._storeDouble((_31_ + 80), (0.7853981633974483 - (((((_32_ = this._loadDouble((_31_ + 56))) + _32_) * (this._loadDouble((_31_ + 64)))) - (6.123233995736766E-17 - (_30_ + _30_))) - (0.7853981633974483 - ((_30_ = this._loadDouble((_31_ + 16))) + _30_)))));
            }
            while (false);
            label$7:
            do {
                if (((this._loadInt((_31_ + 52))) >>> 31) == 0) {
                    break label$7;
                }
                this._storeDouble((_31_ + 88), (-(this._loadDouble((_31_ + 80)))));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 88), (this._loadDouble((_31_ + 80))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 88));
        this._storeInt((0 + 4), (_31_ + 96));
        return _30_;
    }

    public final double R$2e$11(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 32) + 16), ((_30_ = this._storeDouble((_31_ + 24), _30_)) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 3.479331075960212E-5) + 7.915349942898145E-4)) + -0.04005553450067941)) + 0.20121253213486293)) + -0.3255658186224009)) + 0.16666666666666666)));
        _30_ = this._storeDouble((_31_ + 8), (((_30_ = this._loadDouble((_31_ + 24))) * ((_30_ * ((_30_ * ((_30_ * 0.07703815055590194) + -0.6882839716054533)) + 2.0209457602335057)) + -2.403394911734414)) + 1.0));
        return ((this._loadDouble((_31_ + 16))) / _30_);
    }

    public final float asinf(float _30_)
    {
        double _31_ = 0.0;
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeFloat(_32_, (this._loadFloat((_32_ + 24))));
        this._storeInt((_32_ + 8), (this._loadInt(_32_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                if (((this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 8))) & 2147483647))) & 4294967295L) < (1065353216 & 4294967295L)) {
                                    break label$5;
                                }
                                if ((this._loadInt((_32_ + 4))) != 1065353216) {
                                    break label$4;
                                }
                                this._storeFloat((_32_ + 28), ((float) ((((double) (this._loadFloat((_32_ + 24)))) * 1.5707963267948966) + 7.52316384526264E-37)));
                                break label$0;
                            }
                            while (false);
                            if (((this._loadInt((_32_ + 4))) & 4294967295L) > (1056964607 & 4294967295L)) {
                                break label$3;
                            }
                            if (((this._loadInt((_32_ + 4))) & 4294967295L) > (964689919 & 4294967295L)) {
                                break label$2;
                            }
                            if (((this._loadInt((_32_ + 4))) & 4294967295L) < (8388608 & 4294967295L)) {
                                break label$2;
                            }
                            this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 24))));
                            break label$0;
                        }
                        while (false);
                        this._storeFloat((_32_ + 28), (0.0f / ((_30_ = this._loadFloat((_32_ + 24))) - _30_)));
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((_32_ + 24), ((float) ((((_31_ = this._storeDouble((_32_ + 16), (Math.sqrt(((double) (this._storeFloat((_32_ + 12), ((1.0f - (Math.abs((this._loadFloat((_32_ + 24)))))) * 0.5f)))))))) + (_31_ * ((double) (R$2e$12((this._loadFloat((_32_ + 12)))))))) * -2.0) + 1.5707963267948966)));
                    if (((this._loadInt((_32_ + 8))) >>> 31) == 0) {
                        break label$1;
                    }
                    this._storeFloat((_32_ + 28), (-(this._loadFloat((_32_ + 24)))));
                    break label$0;
                }
                while (false);
                this._storeFloat((_32_ + 28), ((_30_ = this._loadFloat((_32_ + 24))) + (_30_ * (R$2e$12((_30_ * _30_))))));
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 24))));
        }
        while (false);
        _30_ = this._loadFloat((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _30_;
    }

    public final float R$2e$12(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), ((_30_ = this._storeFloat((_31_ + 12), _30_)) * ((_30_ * ((_30_ * -0.008656363f) + -0.042743422f)) + 0.16666587f)));
        _30_ = this._storeFloat((_31_ + 4), (((this._loadFloat((_31_ + 12))) * -0.70662963f) + 1.0f));
        return ((this._loadFloat((_31_ + 8))) / _30_);
    }

    public final double asinh(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 16), (this._storeDouble((_31_ + 24), _30_)));
        this._storeLong((_31_ + 12), (((this._loadLong((_31_ + 16))) >>> 52L) & 2047L));
        this._storeLong((_31_ + 8), ((this._loadLong((_31_ + 16))) >>> 63L));
        this._storeLong((_31_ + 16), ((this._loadLong((_31_ + 16))) & 9223372036854775807L));
        this._storeDouble((_31_ + 24), (this._loadDouble((_31_ + 16))));
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_31_ + 12))) & 4294967295L) < (1049 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_31_ + 24), ((log((this._loadDouble((_31_ + 24))))) + 0.6931471805599453));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_31_ + 12))) & 4294967295L) < (1024 & 4294967295L)) {
                    break label$2;
                }
                this._storeDouble((_31_ + 24), (log((((_30_ = this._loadDouble((_31_ + 24))) + _30_) + (1.0 / ((Math.sqrt(((_30_ * _30_) + 1.0))) + _30_))))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_31_ + 12))) & 4294967295L) < (997 & 4294967295L)) {
                    break label$3;
                }
                this._storeDouble((_31_ + 24), (log1p(((_30_ = this._loadDouble((_31_ + 24))) + ((_30_ = _30_ * _30_) / ((Math.sqrt((_30_ + 1.0))) + 1.0))))));
                break label$0;
            }
            while (false);
            this._storeDouble(_31_, ((this._loadDouble((_31_ + 24))) + 1.3292279957849159E36));
        }
        while (false);
        label$4:
        do {
            label$5:
            do {
                if ((this._loadInt((_31_ + 8))) == 0) {
                    break label$5;
                }
                _30_ = -(this._loadDouble((_31_ + 24)));
                break label$4;
            }
            while (false);
            _30_ = this._loadDouble((_31_ + 24));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final float asinhf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), (this._storeFloat((_31_ + 28), _30_)));
        this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 24))) & 2147483647));
        this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 24))) >>> 31));
        this._storeInt((_31_ + 24), (this._loadInt((_31_ + 20))));
        this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1166016512 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_31_ + 28), ((logf((this._loadFloat((_31_ + 28))))) + 0.6931472f));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1073741824 & 4294967295L)) {
                    break label$2;
                }
                this._storeFloat((_31_ + 28), (logf((((_30_ = this._loadFloat((_31_ + 28))) + _30_) + (1.0f / (((float) (Math.sqrt(((_30_ * _30_) + 1.0f)))) + _30_))))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (964689920 & 4294967295L)) {
                    break label$3;
                }
                this._storeFloat((_31_ + 28), (log1pf(((_30_ = this._loadFloat((_31_ + 28))) + ((_30_ = _30_ * _30_) / (((float) (Math.sqrt((_30_ + 1.0f)))) + 1.0f))))));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 12), ((this._loadFloat((_31_ + 28))) + 1.329228E36f));
        }
        while (false);
        label$4:
        do {
            label$5:
            do {
                if ((this._loadInt((_31_ + 16))) == 0) {
                    break label$5;
                }
                _30_ = -(this._loadFloat((_31_ + 28)));
                break label$4;
            }
            while (false);
            _30_ = this._loadFloat((_31_ + 28));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final void asinhl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (asinh((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void asinl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (asin((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void __assert_fail(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_34_ + 24), _31_);
        this._storeInt((_34_ + 20), _32_);
        this._storeInt((_34_ + 16), _33_);
        _32_ = this._loadInt((_34_ + 28));
        _31_ = this._loadInt((_34_ + 24));
        this._storeInt((_34_ + 12), (this._loadInt((_34_ + 20))));
        this._storeInt((_34_ + 8), _33_);
        this._storeInt((_34_ + 4), _31_);
        this._storeInt(_34_, _32_);
        this.fprintf.invoke((this._loadInt((0 + 14768))), 4416, _34_);
        fflush(0);
        this.abort.invoke();
        throw (new UnreachableException());
    }

    public final void __funcs_on_quick_exit()
    {
        int _30_ = 0;
        _30_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16));
        this.__lock.invoke(4451);
        label$1:
        do {
            label$0:
            while (true) {
                if ((this._loadInt((0 + 4459))) < 1) {
                    break label$1;
                }
                this._storeInt((_30_ + 12), (this._loadInt((((this._storeInt((0 + 4459), ((this._loadInt((0 + 4459))) + -1))) << 2) + 4463))));
                this.__unlock.invoke(4451);
                this._vTable[this._tableIndices[this._loadInt((_30_ + 12))]].invoke();
                this.__lock.invoke(4451);
                continue label$0;
            }
        }
        while (false);
        this._storeInt((0 + 4), (_30_ + 16));
        return;
    }

    public final int at_quick_exit(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((0 + 4459))) != 32) {
                    break label$1;
                }
                this._storeInt((_31_ + 12), -1);
                break label$0;
            }
            while (false);
            this.__lock.invoke(4451);
            this._storeInt((0 + 4459), ((_30_ = this._loadInt((0 + 4459))) + 1));
            this._storeInt(((_30_ << 2) + 4463), (this._loadInt((_31_ + 8))));
            this.__unlock.invoke(4451);
            this._storeInt((_31_ + 12), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double atan(double _30_)
    {
        int _31_ = 0;
        long _32_ = 0L;
        int _33_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 8), (this._storeDouble((_31_ + 64), _30_)));
        this._storeLong((_31_ + 28), ((_32_ = this._loadLong((_31_ + 8))) >>> 32L));
        this._storeLong((_31_ + 24), (_32_ >>> 63L));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            label$9:
                                            do {
                                                if (((this._storeInt((_31_ + 28), ((this._loadInt((_31_ + 28))) & 2147483647))) & 4294967295L) < (1141899264 & 4294967295L)) {
                                                    break label$9;
                                                }
                                                if ((((__DOUBLE_BITS((this._loadDouble((_31_ + 64))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                                                    break label$8;
                                                }
                                                this._storeDouble((_31_ + 72), (this._loadDouble((_31_ + 64))));
                                                break label$0;
                                            }
                                            while (false);
                                            if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1071382527 & 4294967295L)) {
                                                break label$7;
                                            }
                                            if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1044381695 & 4294967295L)) {
                                                break label$6;
                                            }
                                            label$10:
                                            do {
                                                if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1048575 & 4294967295L)) {
                                                    break label$10;
                                                }
                                                this._storeFloat((_31_ + 4), ((float) (this._loadDouble((_31_ + 64)))));
                                            }
                                            while (false);
                                            this._storeDouble((_31_ + 72), (this._loadDouble((_31_ + 64))));
                                            break label$0;
                                        }
                                        while (false);
                                        this._storeDouble((_31_ + 32), ((this._loadDouble((0 + 4616))) + 7.52316384526264E-37));
                                        if ((this._loadInt((_31_ + 24))) == 0) {
                                            break label$4;
                                        }
                                        this._storeDouble((_31_ + 72), (-(this._loadDouble((_31_ + 32)))));
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeDouble((_31_ + 64), (Math.abs((this._loadDouble((_31_ + 64))))));
                                    if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1072889855 & 4294967295L)) {
                                        break label$5;
                                    }
                                    if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1072037887 & 4294967295L)) {
                                        break label$3;
                                    }
                                    this._storeInt((_31_ + 20), 0);
                                    this._storeDouble((_31_ + 64), ((((_30_ = this._loadDouble((_31_ + 64))) + _30_) + -1.0) / (_30_ + 2.0)));
                                    break label$1;
                                }
                                while (false);
                                this._storeInt((_31_ + 20), -1);
                                break label$1;
                            }
                            while (false);
                            if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1073971199 & 4294967295L)) {
                                break label$2;
                            }
                            this._storeInt((_31_ + 20), 2);
                            this._storeDouble((_31_ + 64), (((_30_ = this._loadDouble((_31_ + 64))) - 1.5) / ((_30_ * 1.5) + 1.0)));
                            break label$1;
                        }
                        while (false);
                        this._storeDouble((_31_ + 72), (this._loadDouble((_31_ + 32))));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_31_ + 20), 1);
                    this._storeDouble((_31_ + 64), (((_30_ = this._loadDouble((_31_ + 64))) - 1.0) / (_30_ + 1.0)));
                    break label$1;
                }
                while (false);
                this._storeInt((_31_ + 20), 3);
                this._storeDouble((_31_ + 64), (-1.0 / (this._loadDouble((_31_ + 64)))));
            }
            while (false);
            _30_ = this._storeDouble((_31_ + 56), ((_30_ = this._storeDouble((_31_ + 32), ((_30_ = this._loadDouble((_31_ + 64))) * _30_))) * _30_));
            this._storeDouble((_31_ + 48), ((this._loadDouble((_31_ + 32))) * ((this._loadDouble((0 + 4624))) + (_30_ * ((this._loadDouble((0 + 4640))) + (_30_ * ((this._loadDouble((0 + 4656))) + (_30_ * ((this._loadDouble((0 + 4672))) + (_30_ * ((this._loadDouble((0 + 4688))) + (_30_ * (this._loadDouble((0 + 4704)))))))))))))));
            this._storeDouble((_31_ + 40), ((_30_ = this._loadDouble((_31_ + 56))) * ((this._loadDouble((0 + 4632))) + (_30_ * ((this._loadDouble((0 + 4648))) + (_30_ * ((this._loadDouble((0 + 4664))) + (_30_ * ((this._loadDouble((0 + 4680))) + (_30_ * (this._loadDouble((0 + 4696)))))))))))));
            label$11:
            do {
                label$12:
                do {
                    label$13:
                    do {
                        if ((this._loadInt((_31_ + 20))) <= -1) {
                            break label$13;
                        }
                        this._storeDouble((_31_ + 32), ((this._loadDouble(((_33_ = (this._loadInt((_31_ + 20))) << 3) + 4592))) - ((((_30_ = this._loadDouble((_31_ + 64))) * ((this._loadDouble((_31_ + 48))) + (this._loadDouble((_31_ + 40))))) - (this._loadDouble((_33_ + 4720)))) - _30_)));
                        if ((this._loadInt((_31_ + 24))) == 0) {
                            break label$12;
                        }
                        _30_ = -(this._loadDouble((_31_ + 32)));
                        break label$11;
                    }
                    while (false);
                    this._storeDouble((_31_ + 72), ((_30_ = this._loadDouble((_31_ + 64))) - (_30_ * ((this._loadDouble((_31_ + 48))) + (this._loadDouble((_31_ + 40)))))));
                    break label$0;
                }
                while (false);
                _30_ = this._loadDouble((_31_ + 32));
            }
            while (false);
            this._storeDouble((_31_ + 72), _30_);
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 72));
        this._storeInt((0 + 4), (_31_ + 80));
        return _30_;
    }

    public final int __FLOAT_BITS(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final double atan2(double _30_, double _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        double _temp$0 = 0.0;
        double _temp$1 = 0.0;
        double _temp$2 = 0.0;
        double _temp$3 = 0.0;
        double _temp$4 = 0.0;
        double _temp$5 = 0.0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 64), _30_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((__DOUBLE_BITS$2e$15((this._storeDouble((_32_ + 56), _31_)))) & 9223372036854775807L) & 4294967295L) > (9218868437227405312L & 4294967295L)) {
                        break label$2;
                    }
                    if ((((__DOUBLE_BITS$2e$15((this._loadDouble((_32_ + 64))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                        break label$1;
                    }
                }
                while (false);
                this._storeDouble((_32_ + 72), ((this._loadDouble((_32_ + 56))) + (this._loadDouble((_32_ + 64)))));
                break label$0;
            }
            while (false);
            this._storeDouble((_32_ + 16), (this._loadDouble((_32_ + 56))));
            this._storeLong((_32_ + 32), (this._loadLong((_32_ + 20))));
            this._storeLong((_32_ + 40), (this._loadLong((_32_ + 16))));
            this._storeDouble((_32_ + 8), (this._loadDouble((_32_ + 64))));
            this._storeLong((_32_ + 28), (this._loadLong((_32_ + 12))));
            this._storeLong((_32_ + 36), (this._loadLong((_32_ + 8))));
            label$3:
            do {
                label$4:
                do {
                    label$5:
                    do {
                        if ((((this._loadInt((_32_ + 32))) + -1072693248) | (this._loadInt((_32_ + 40)))) == 0) {
                            break label$5;
                        }
                        this._storeInt((_32_ + 44), (((this._loadInt((_32_ + 28))) >>> 31) | (((this._loadInt((_32_ + 32))) >>> 30) & 2)));
                        this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 32))) & 2147483647));
                        if (((this._storeInt((_32_ + 28), ((this._loadInt((_32_ + 28))) & 2147483647))) | (this._loadInt((_32_ + 36)))) == 0) {
                            break label$4;
                        }
                        break label$3;
                    }
                    while (false);
                    this._storeDouble((_32_ + 72), (atan((this._loadDouble((_32_ + 64))))));
                    break label$0;
                }
                while (false);
                label$6:
                do {
                    label$7:
                    do {
                        if (((_33_ = this._loadInt((_32_ + 44))) & 4294967295L) < (2 & 4294967295L)) {
                            break label$7;
                        }
                        if (_33_ == 2) {
                            break label$6;
                        }
                        if (_33_ != 3) {
                            break label$3;
                        }
                        this._storeLong((_32_ + 72), -4609115380302729960L);
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_32_ + 72), (this._loadDouble((_32_ + 64))));
                    break label$0;
                }
                while (false);
                this._storeLong((_32_ + 72), 4614256656552045848L);
                break label$0;
            }
            while (false);
            label$8:
            do {
                label$9:
                do {
                    label$10:
                    do {
                        label$11:
                        do {
                            label$12:
                            do {
                                label$13:
                                do {
                                    label$14:
                                    do {
                                        label$15:
                                        do {
                                            label$16:
                                            do {
                                                label$17:
                                                do {
                                                    label$18:
                                                    do {
                                                        label$19:
                                                        do {
                                                            if (((this._loadInt((_32_ + 32))) | (this._loadInt((_32_ + 40)))) == 0) {
                                                                break label$19;
                                                            }
                                                            if ((this._loadInt((_32_ + 32))) != 2146435072) {
                                                                break label$17;
                                                            }
                                                            if ((this._loadInt((_32_ + 28))) != 2146435072) {
                                                                break label$18;
                                                            }
                                                            if (((_33_ = this._loadInt((_32_ + 44))) & 4294967295L) > (3 & 4294967295L)) {
                                                                break label$17;
                                                            }
                                                            label$20:
                                                            do {
                                                                switch (_33_) {
                                                                    case 0: {
                                                                        break label$20;
                                                                    }
                                                                    case 1: {
                                                                        break label$16;
                                                                    }
                                                                    case 2: {
                                                                        break label$15;
                                                                    }
                                                                    case 3: {
                                                                        break label$14;
                                                                    }
                                                                    default: {
                                                                        break label$20;
                                                                    }
                                                                }
                                                            }
                                                            while (false);
                                                            this._storeLong((_32_ + 72), 4605249457297304856L);
                                                            break label$0;
                                                        }
                                                        while (false);
                                                        _temp$0 = -1.5707963267948966;
                                                        _temp$1 = 1.5707963267948966;
                                                        _temp$2 = (((this._loadInt((_32_ + 44))) & 1) != 0) ? _temp$0 : _temp$1;
                                                        this._storeDouble((_32_ + 72), _temp$2);
                                                        break label$0;
                                                    }
                                                    while (false);
                                                    if (((_33_ = this._loadInt((_32_ + 44))) & 4294967295L) > (3 & 4294967295L)) {
                                                        break label$17;
                                                    }
                                                    label$21:
                                                    do {
                                                        switch (_33_) {
                                                            case 0: {
                                                                break label$21;
                                                            }
                                                            case 1: {
                                                                break label$13;
                                                            }
                                                            case 2: {
                                                                break label$12;
                                                            }
                                                            case 3: {
                                                                break label$11;
                                                            }
                                                            default: {
                                                                break label$21;
                                                            }
                                                        }
                                                    }
                                                    while (false);
                                                    this._storeLong((_32_ + 72), 0L);
                                                    break label$0;
                                                }
                                                while (false);
                                                label$22:
                                                do {
                                                    label$23:
                                                    do {
                                                        if ((((this._loadInt((_32_ + 32))) + 67108864) & 4294967295L) < ((this._loadInt((_32_ + 28))) & 4294967295L)) {
                                                            break label$23;
                                                        }
                                                        if ((this._loadInt((_32_ + 28))) != 2146435072) {
                                                            break label$22;
                                                        }
                                                    }
                                                    while (false);
                                                    _temp$3 = -1.5707963267948966;
                                                    _temp$4 = 1.5707963267948966;
                                                    _temp$5 = (((this._loadInt((_32_ + 44))) & 1) != 0) ? _temp$3 : _temp$4;
                                                    this._storeDouble((_32_ + 72), _temp$5);
                                                    break label$0;
                                                }
                                                while (false);
                                                label$24:
                                                do {
                                                    label$25:
                                                    do {
                                                        if (((this._loadInt((_32_ + 44))) & 2) == 0) {
                                                            break label$25;
                                                        }
                                                        if ((((this._loadInt((_32_ + 28))) + 67108864) & 4294967295L) >= ((this._loadInt((_32_ + 32))) & 4294967295L)) {
                                                            break label$25;
                                                        }
                                                        this._storeLong((_32_ + 48), 0L);
                                                        break label$24;
                                                    }
                                                    while (false);
                                                    this._storeDouble((_32_ + 48), (atan((Math.abs(((this._loadDouble((_32_ + 64))) / (this._loadDouble((_32_ + 56)))))))));
                                                }
                                                while (false);
                                                if ((_33_ = this._loadInt((_32_ + 44))) == 2) {
                                                    break label$10;
                                                }
                                                if (_33_ == 1) {
                                                    break label$9;
                                                }
                                                if (_33_ != 0) {
                                                    break label$8;
                                                }
                                                this._storeDouble((_32_ + 72), (this._loadDouble((_32_ + 48))));
                                                break label$0;
                                            }
                                            while (false);
                                            this._storeLong((_32_ + 72), -4618122579557470952L);
                                            break label$0;
                                        }
                                        while (false);
                                        this._storeLong((_32_ + 72), 4612488097114038738L);
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeLong((_32_ + 72), -4610883939740737070L);
                                    break label$0;
                                }
                                while (false);
                                this._storeLong((_32_ + 72), -9223372036854775808L);
                                break label$0;
                            }
                            while (false);
                            this._storeLong((_32_ + 72), 4614256656552045848L);
                            break label$0;
                        }
                        while (false);
                        this._storeLong((_32_ + 72), -4609115380302729960L);
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_32_ + 72), (3.141592653589793 - ((this._loadDouble((_32_ + 48))) + -1.2246467991473532E-16)));
                    break label$0;
                }
                while (false);
                this._storeDouble((_32_ + 72), (-(this._loadDouble((_32_ + 48)))));
                break label$0;
            }
            while (false);
            this._storeDouble((_32_ + 72), (((this._loadDouble((_32_ + 48))) + -1.2246467991473532E-16) + -3.141592653589793));
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 72));
        this._storeInt((0 + 4), (_32_ + 80));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$14(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$15(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float atan2f(float _30_, float _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        float _temp$0 = 0.0f;
        float _temp$1 = 0.0f;
        float _temp$2 = 0.0f;
        float _temp$3 = 0.0f;
        float _temp$4 = 0.0f;
        float _temp$5 = 0.0f;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((__FLOAT_BITS$2e$16((this._storeFloat((_32_ + 36), _31_)))) & 2147483647) & 4294967295L) > (2139095040 & 4294967295L)) {
                        break label$2;
                    }
                    if ((((__FLOAT_BITS$2e$16((this._loadFloat((_32_ + 40))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                        break label$1;
                    }
                }
                while (false);
                this._storeFloat((_32_ + 44), ((this._loadFloat((_32_ + 36))) + (this._loadFloat((_32_ + 40)))));
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 16), (this._loadFloat((_32_ + 36))));
            this._storeInt((_32_ + 24), (this._loadInt((_32_ + 16))));
            this._storeFloat((_32_ + 8), (this._loadFloat((_32_ + 40))));
            this._storeInt((_32_ + 20), (this._loadInt((_32_ + 8))));
            label$3:
            do {
                if ((this._loadInt((_32_ + 24))) != 1065353216) {
                    break label$3;
                }
                this._storeFloat((_32_ + 44), (atanf((this._loadFloat((_32_ + 40))))));
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 28), (((this._loadInt((_32_ + 20))) >>> 31) | (((this._loadInt((_32_ + 24))) >>> 30) & 2)));
            this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) & 2147483647));
            label$4:
            do {
                if ((this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) & 2147483647))) != 0) {
                    break label$4;
                }
                label$5:
                do {
                    label$6:
                    do {
                        if (((_33_ = this._loadInt((_32_ + 28))) & 4294967295L) < (2 & 4294967295L)) {
                            break label$6;
                        }
                        if (_33_ == 2) {
                            break label$5;
                        }
                        if (_33_ != 3) {
                            break label$4;
                        }
                        this._storeInt((_32_ + 44), -1068953637);
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((_32_ + 44), (this._loadFloat((_32_ + 40))));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 44), 1078530011);
                break label$0;
            }
            while (false);
            label$7:
            do {
                label$8:
                do {
                    label$9:
                    do {
                        label$10:
                        do {
                            label$11:
                            do {
                                label$12:
                                do {
                                    label$13:
                                    do {
                                        label$14:
                                        do {
                                            label$15:
                                            do {
                                                label$16:
                                                do {
                                                    label$17:
                                                    do {
                                                        label$18:
                                                        do {
                                                            if ((this._loadInt((_32_ + 24))) == 0) {
                                                                break label$18;
                                                            }
                                                            if ((this._loadInt((_32_ + 24))) != 2139095040) {
                                                                break label$16;
                                                            }
                                                            if ((this._loadInt((_32_ + 20))) != 2139095040) {
                                                                break label$17;
                                                            }
                                                            if (((_33_ = this._loadInt((_32_ + 28))) & 4294967295L) > (3 & 4294967295L)) {
                                                                break label$16;
                                                            }
                                                            label$19:
                                                            do {
                                                                switch (_33_) {
                                                                    case 0: {
                                                                        break label$19;
                                                                    }
                                                                    case 1: {
                                                                        break label$15;
                                                                    }
                                                                    case 2: {
                                                                        break label$14;
                                                                    }
                                                                    case 3: {
                                                                        break label$13;
                                                                    }
                                                                    default: {
                                                                        break label$19;
                                                                    }
                                                                }
                                                            }
                                                            while (false);
                                                            this._storeInt((_32_ + 44), 1061752795);
                                                            break label$0;
                                                        }
                                                        while (false);
                                                        _temp$0 = -1.5707964f;
                                                        _temp$1 = 1.5707964f;
                                                        _temp$2 = (((this._loadInt((_32_ + 28))) & 1) != 0) ? _temp$0 : _temp$1;
                                                        this._storeFloat((_32_ + 44), _temp$2);
                                                        break label$0;
                                                    }
                                                    while (false);
                                                    if (((_33_ = this._loadInt((_32_ + 28))) & 4294967295L) > (3 & 4294967295L)) {
                                                        break label$16;
                                                    }
                                                    label$20:
                                                    do {
                                                        switch (_33_) {
                                                            case 0: {
                                                                break label$20;
                                                            }
                                                            case 1: {
                                                                break label$12;
                                                            }
                                                            case 2: {
                                                                break label$11;
                                                            }
                                                            case 3: {
                                                                break label$10;
                                                            }
                                                            default: {
                                                                break label$20;
                                                            }
                                                        }
                                                    }
                                                    while (false);
                                                    this._storeInt((_32_ + 44), 0);
                                                    break label$0;
                                                }
                                                while (false);
                                                label$21:
                                                do {
                                                    label$22:
                                                    do {
                                                        if ((((this._loadInt((_32_ + 24))) + 218103808) & 4294967295L) < ((this._loadInt((_32_ + 20))) & 4294967295L)) {
                                                            break label$22;
                                                        }
                                                        if ((this._loadInt((_32_ + 20))) != 2139095040) {
                                                            break label$21;
                                                        }
                                                    }
                                                    while (false);
                                                    _temp$3 = -1.5707964f;
                                                    _temp$4 = 1.5707964f;
                                                    _temp$5 = (((this._loadInt((_32_ + 28))) & 1) != 0) ? _temp$3 : _temp$4;
                                                    this._storeFloat((_32_ + 44), _temp$5);
                                                    break label$0;
                                                }
                                                while (false);
                                                label$23:
                                                do {
                                                    label$24:
                                                    do {
                                                        if (((this._loadInt((_32_ + 28))) & 2) == 0) {
                                                            break label$24;
                                                        }
                                                        if ((((this._loadInt((_32_ + 20))) + 218103808) & 4294967295L) >= ((this._loadInt((_32_ + 24))) & 4294967295L)) {
                                                            break label$24;
                                                        }
                                                        this._storeInt((_32_ + 32), 0);
                                                        break label$23;
                                                    }
                                                    while (false);
                                                    this._storeFloat((_32_ + 32), (atanf((Math.abs(((this._loadFloat((_32_ + 40))) / (this._loadFloat((_32_ + 36)))))))));
                                                }
                                                while (false);
                                                if ((_33_ = this._loadInt((_32_ + 28))) == 2) {
                                                    break label$9;
                                                }
                                                if (_33_ == 1) {
                                                    break label$8;
                                                }
                                                if (_33_ != 0) {
                                                    break label$7;
                                                }
                                                this._storeFloat((_32_ + 44), (this._loadFloat((_32_ + 32))));
                                                break label$0;
                                            }
                                            while (false);
                                            this._storeInt((_32_ + 44), -1085730853);
                                            break label$0;
                                        }
                                        while (false);
                                        this._storeInt((_32_ + 44), 1075235812);
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeInt((_32_ + 44), -1072247836);
                                    break label$0;
                                }
                                while (false);
                                this._storeInt((_32_ + 44), -2147483648);
                                break label$0;
                            }
                            while (false);
                            this._storeInt((_32_ + 44), 1078530011);
                            break label$0;
                        }
                        while (false);
                        this._storeInt((_32_ + 44), -1068953637);
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((_32_ + 44), (3.1415927f - ((this._loadFloat((_32_ + 32))) + 8.742278E-8f)));
                    break label$0;
                }
                while (false);
                this._storeFloat((_32_ + 44), (-(this._loadFloat((_32_ + 32)))));
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 44), (((this._loadFloat((_32_ + 32))) + 8.742278E-8f) + -3.1415927f));
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 44));
        this._storeInt((0 + 4), (_32_ + 48));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$16(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$17(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void atan2l(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (atan2((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))), _36_)));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final float atanf(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 8), (this._storeFloat((_31_ + 40), _30_)));
        this._storeInt((_31_ + 16), ((this._storeInt((_31_ + 20), (this._loadInt((_31_ + 8))))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            label$9:
                                            do {
                                                if (((this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 20))) & 2147483647))) & 4294967295L) < (1283457024 & 4294967295L)) {
                                                    break label$9;
                                                }
                                                if ((((__FLOAT_BITS$2e$20((this._loadFloat((_31_ + 40))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                                                    break label$8;
                                                }
                                                this._storeFloat((_31_ + 44), (this._loadFloat((_31_ + 40))));
                                                break label$0;
                                            }
                                            while (false);
                                            if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1054867455 & 4294967295L)) {
                                                break label$7;
                                            }
                                            if (((this._loadInt((_31_ + 20))) & 4294967295L) > (964689919 & 4294967295L)) {
                                                break label$6;
                                            }
                                            label$10:
                                            do {
                                                if (((this._loadInt((_31_ + 20))) & 4294967295L) > (8388607 & 4294967295L)) {
                                                    break label$10;
                                                }
                                                this._storeFloat((_31_ + 4), ((_30_ = this._loadFloat((_31_ + 40))) * _30_));
                                            }
                                            while (false);
                                            this._storeFloat((_31_ + 44), (this._loadFloat((_31_ + 40))));
                                            break label$0;
                                        }
                                        while (false);
                                        this._storeFloat((_31_ + 24), ((this._loadFloat((0 + 4764))) + 7.523164E-37f));
                                        if ((this._loadInt((_31_ + 16))) == 0) {
                                            break label$4;
                                        }
                                        this._storeFloat((_31_ + 44), (-(this._loadFloat((_31_ + 24)))));
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeFloat((_31_ + 40), (Math.abs((this._loadFloat((_31_ + 40))))));
                                    if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1066926079 & 4294967295L)) {
                                        break label$5;
                                    }
                                    if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1060110335 & 4294967295L)) {
                                        break label$3;
                                    }
                                    this._storeInt((_31_ + 12), 0);
                                    this._storeFloat((_31_ + 40), ((((_30_ = this._loadFloat((_31_ + 40))) + _30_) + -1.0f) / (_30_ + 2.0f)));
                                    break label$1;
                                }
                                while (false);
                                this._storeInt((_31_ + 12), -1);
                                break label$1;
                            }
                            while (false);
                            if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1075576831 & 4294967295L)) {
                                break label$2;
                            }
                            this._storeInt((_31_ + 12), 2);
                            this._storeFloat((_31_ + 40), (((_30_ = this._loadFloat((_31_ + 40))) - 1.5f) / ((_30_ * 1.5f) + 1.0f)));
                            break label$1;
                        }
                        while (false);
                        this._storeFloat((_31_ + 44), (this._loadFloat((_31_ + 24))));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_31_ + 12), 1);
                    this._storeFloat((_31_ + 40), (((_30_ = this._loadFloat((_31_ + 40))) - 1.0f) / (_30_ + 1.0f)));
                    break label$1;
                }
                while (false);
                this._storeInt((_31_ + 12), 3);
                this._storeFloat((_31_ + 40), (-1.0f / (this._loadFloat((_31_ + 40)))));
            }
            while (false);
            _30_ = this._storeFloat((_31_ + 36), ((_30_ = this._storeFloat((_31_ + 24), ((_30_ = this._loadFloat((_31_ + 40))) * _30_))) * _30_));
            this._storeFloat((_31_ + 32), ((this._loadFloat((_31_ + 24))) * ((this._loadFloat((0 + 4768))) + (_30_ * ((this._loadFloat((0 + 4776))) + (_30_ * (this._loadFloat((0 + 4784)))))))));
            this._storeFloat((_31_ + 28), ((_30_ = this._loadFloat((_31_ + 36))) * ((this._loadFloat((0 + 4772))) + (_30_ * (this._loadFloat((0 + 4780)))))));
            label$11:
            do {
                label$12:
                do {
                    label$13:
                    do {
                        if ((this._loadInt((_31_ + 12))) <= -1) {
                            break label$13;
                        }
                        this._storeFloat((_31_ + 24), ((this._loadFloat(((_32_ = (this._loadInt((_31_ + 12))) << 2) + 4752))) - ((((_30_ = this._loadFloat((_31_ + 40))) * ((this._loadFloat((_31_ + 32))) + (this._loadFloat((_31_ + 28))))) - (this._loadFloat((_32_ + 4800)))) - _30_)));
                        if ((this._loadInt((_31_ + 16))) == 0) {
                            break label$12;
                        }
                        _30_ = -(this._loadFloat((_31_ + 24)));
                        break label$11;
                    }
                    while (false);
                    this._storeFloat((_31_ + 44), ((_30_ = this._loadFloat((_31_ + 40))) - (_30_ * ((this._loadFloat((_31_ + 32))) + (this._loadFloat((_31_ + 28)))))));
                    break label$0;
                }
                while (false);
                _30_ = this._loadFloat((_31_ + 24));
            }
            while (false);
            this._storeFloat((_31_ + 44), _30_);
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 44));
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final int __FLOAT_BITS$2e$20(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$21(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final double atanh(double _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), (this._storeDouble((_31_ + 40), _30_)));
        this._storeLong((_31_ + 28), (((this._loadLong((_31_ + 32))) >>> 52L) & 2047L));
        this._storeLong((_31_ + 24), ((this._loadLong((_31_ + 32))) >>> 63L));
        this._storeLong((_31_ + 32), ((this._loadLong((_31_ + 32))) & 9223372036854775807L));
        this._storeDouble((_31_ + 16), (this._loadDouble((_31_ + 32))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1021 & 4294967295L)) {
                        break label$2;
                    }
                    if (((this._loadInt((_31_ + 28))) & 4294967295L) > (990 & 4294967295L)) {
                        break label$1;
                    }
                    if ((this._loadInt((_31_ + 28))) != 0) {
                        break label$0;
                    }
                    this._storeFloat((_31_ + 12), ((float) (this._loadDouble((_31_ + 16)))));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 16), ((log1p(((_30_ = (_30_ = this._loadDouble((_31_ + 16))) / (1.0 - _30_)) + _30_))) * 0.5));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 16), ((log1p(((_32_ = (_30_ = this._loadDouble((_31_ + 16))) + _30_) + ((_32_ * _30_) / (1.0 - _30_))))) * 0.5));
        }
        while (false);
        label$3:
        do {
            label$4:
            do {
                if ((this._loadInt((_31_ + 24))) == 0) {
                    break label$4;
                }
                _30_ = -(this._loadDouble((_31_ + 16)));
                break label$3;
            }
            while (false);
            _30_ = this._loadDouble((_31_ + 16));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final float atanhf(float _30_)
    {
        int _31_ = 0;
        float _32_ = 0.0f;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), (this._storeFloat((_31_ + 28), _30_)));
        this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 24))) >>> 31));
        this._storeInt((_31_ + 24), ((this._loadInt((_31_ + 24))) & 2147483647));
        this._storeFloat((_31_ + 16), (this._loadFloat((_31_ + 24))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt((_31_ + 24))) & 4294967295L) > (1056964607 & 4294967295L)) {
                        break label$2;
                    }
                    if (((this._loadInt((_31_ + 24))) & 4294967295L) > (796917759 & 4294967295L)) {
                        break label$1;
                    }
                    if (((this._loadInt((_31_ + 24))) & 4294967295L) > (8388607 & 4294967295L)) {
                        break label$0;
                    }
                    this._storeFloat((_31_ + 12), ((_30_ = this._loadFloat((_31_ + 16))) * _30_));
                    break label$0;
                }
                while (false);
                this._storeFloat((_31_ + 16), ((log1pf(((_30_ = (_30_ = this._loadFloat((_31_ + 16))) / (1.0f - _30_)) + _30_))) * 0.5f));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 16), ((log1pf(((_32_ = (_30_ = this._loadFloat((_31_ + 16))) + _30_) + ((_32_ * _30_) / (1.0f - _30_))))) * 0.5f));
        }
        while (false);
        label$3:
        do {
            label$4:
            do {
                if ((this._loadInt((_31_ + 20))) == 0) {
                    break label$4;
                }
                _30_ = -(this._loadFloat((_31_ + 16)));
                break label$3;
            }
            while (false);
            _30_ = this._loadFloat((_31_ + 16));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final void atanhl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (atanh((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void atanl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (atan((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void __funcs_on_exit()
    {
        int _30_ = 0;
        int _31_ = 0;
        _30_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16));
        this.__lock.invoke(4816);
        label$0:
        while (true) {
            label$2:
            do {
                label$3:
                do {
                    if ((this._loadInt((0 + 4824))) == 0) {
                        break label$3;
                    }
                    label$4:
                    while (true) {
                        this._storeInt((0 + 4828), ((_31_ = this._loadInt((0 + 4828))) + -1));
                        if (_31_ < 1) {
                            break label$2;
                        }
                        this._storeInt((_30_ + 12), (this._loadInt(((_31_ = (this._loadInt((0 + 4824))) + ((this._loadInt((0 + 4828))) << 2)) + 4))));
                        this._storeInt((_30_ + 8), (this._loadInt((_31_ + 132))));
                        this.__unlock.invoke(4816);
                        this._viTable[this._tableIndices[this._loadInt((_30_ + 12))]].invoke((this._loadInt((_30_ + 8))));
                        this.__lock.invoke(4816);
                        continue label$4;
                    }
                }
                while (false);
                this._storeInt((0 + 4), (_30_ + 16));
                return;
            }
            while (false);
            _31_ = this._loadInt((this._loadInt((0 + 4824))));
            this._storeInt((0 + 4828), 32);
            this._storeInt((0 + 4824), _31_);
            continue label$0;
        }
//        throw (new UnreachableException());
    }

    public final void __cxa_finalize(int _30_)
    {
        this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_);
        return;
    }

    public final int __cxa_atexit(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this.__lock.invoke(4816);
        label$0:
        do {
            if ((this._loadInt((0 + 4824))) != 0) {
                break label$0;
            }
            this._storeInt((0 + 4824), 4832);
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    if ((this._loadInt((0 + 4828))) != 32) {
                        break label$3;
                    }
                    if ((this._storeInt((_33_ + 12), (calloc(260, 1)))) == 0) {
                        break label$2;
                    }
                    this._storeInt((_32_ = this._loadInt((_33_ + 12))), (this._loadInt((0 + 4824))));
                    this._storeInt((0 + 4824), _32_);
                    this._storeInt((0 + 4828), 0);
                }
                while (false);
                this._storeInt(((_32_ = (this._loadInt((0 + 4824))) + ((this._loadInt((0 + 4828))) << 2)) + 132), (this._loadInt((_33_ + 20))));
                this._storeInt((_32_ + 4), (this._loadInt((_33_ + 24))));
                this._storeInt((0 + 4828), ((this._loadInt((0 + 4828))) + 1));
                this.__unlock.invoke(4816);
                this._storeInt((_33_ + 28), 0);
                break label$1;
            }
            while (false);
            this.__unlock.invoke(4816);
            this._storeInt((_33_ + 28), -1);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int atexit(int _30_)
    {
        int _31_ = 0;
        _30_ = __cxa_atexit(1, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 0);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final void call(int _30_)
    {
        int _31_ = 0;
        this._vTable[this._tableIndices[this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)]].invoke();
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final double atof(int _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        _32_ = strtod((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 0);
        this._storeInt((0 + 4), (_31_ + 16));
        return _32_;
    }

    public final int atoi(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_31_ + 4), (this._storeInt((_31_ + 8), 0)));
        label$1:
        do {
            label$0:
            while (true) {
                if ((__isspace((this._loadInt((this._loadInt((_31_ + 12))))))) == 0) {
                    break label$1;
                }
                this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) + 1));
                continue label$0;
            }
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                if ((_30_ = this._loadInt((this._loadInt((_31_ + 12))))) == 43) {
                    break label$3;
                }
                if (_30_ != 45) {
                    break label$2;
                }
                this._storeInt((_31_ + 4), 1);
            }
            while (false);
            this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) + 1));
        }
        while (false);
        label$5:
        do {
            label$4:
            while (true) {
                if ((((this._loadInt((this._loadInt((_31_ + 12))))) + -48) & 4294967295L) > (9 & 4294967295L)) {
                    break label$5;
                }
                _30_ = this._loadInt((_31_ + 8));
                this._storeInt((_31_ + 12), ((_32_ = this._loadInt((_31_ + 12))) + 1));
                this._storeInt((_31_ + 8), ((_30_ * 10) - ((this._loadInt(_32_)) + -48)));
                continue label$4;
            }
        }
        while (false);
        label$6:
        do {
            label$7:
            do {
                if ((this._loadInt((_31_ + 4))) == 0) {
                    break label$7;
                }
                _30_ = this._loadInt((_31_ + 8));
                break label$6;
            }
            while (false);
            _30_ = 0 - (this._loadInt((_31_ + 8)));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __isspace(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if ((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) == 32) {
                break label$0;
            }
            _31_ = ((((this._loadInt((_32_ + 12))) + -9) & 4294967295L) < (5 & 4294967295L)) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int atol(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_31_ + 4), (this._storeInt((_31_ + 8), 0)));
        label$1:
        do {
            label$0:
            while (true) {
                if ((__isspace$2e$26((this._loadInt((this._loadInt((_31_ + 12))))))) == 0) {
                    break label$1;
                }
                this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) + 1));
                continue label$0;
            }
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                if ((_30_ = this._loadInt((this._loadInt((_31_ + 12))))) == 43) {
                    break label$3;
                }
                if (_30_ != 45) {
                    break label$2;
                }
                this._storeInt((_31_ + 4), 1);
            }
            while (false);
            this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) + 1));
        }
        while (false);
        label$5:
        do {
            label$4:
            while (true) {
                if ((((this._loadInt((this._loadInt((_31_ + 12))))) + -48) & 4294967295L) > (9 & 4294967295L)) {
                    break label$5;
                }
                _30_ = this._loadInt((_31_ + 8));
                this._storeInt((_31_ + 12), ((_32_ = this._loadInt((_31_ + 12))) + 1));
                this._storeInt((_31_ + 8), ((_30_ * 10) - ((this._loadInt(_32_)) + -48)));
                continue label$4;
            }
        }
        while (false);
        label$6:
        do {
            label$7:
            do {
                if ((this._loadInt((_31_ + 4))) == 0) {
                    break label$7;
                }
                _30_ = this._loadInt((_31_ + 8));
                break label$6;
            }
            while (false);
            _30_ = 0 - (this._loadInt((_31_ + 8)));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __isspace$2e$26(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if ((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) == 32) {
                break label$0;
            }
            _31_ = ((((this._loadInt((_32_ + 12))) + -9) & 4294967295L) < (5 & 4294967295L)) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final long atoll(int _30_)
    {
        int _31_ = 0;
        long _32_ = 0L;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeLong((_31_ + 16), 0L);
        this._storeInt((_31_ + 12), 0);
        label$1:
        do {
            label$0:
            while (true) {
                if ((__isspace$2e$27((this._loadInt((this._loadInt((_31_ + 28))))))) == 0) {
                    break label$1;
                }
                this._storeInt((_31_ + 28), ((this._loadInt((_31_ + 28))) + 1));
                continue label$0;
            }
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                if ((_30_ = this._loadInt((this._loadInt((_31_ + 28))))) == 43) {
                    break label$3;
                }
                if (_30_ != 45) {
                    break label$2;
                }
                this._storeInt((_31_ + 12), 1);
            }
            while (false);
            this._storeInt((_31_ + 28), ((this._loadInt((_31_ + 28))) + 1));
        }
        while (false);
        label$5:
        do {
            label$4:
            while (true) {
                if ((((this._loadInt((this._loadInt((_31_ + 28))))) + -48) & 4294967295L) > (9 & 4294967295L)) {
                    break label$5;
                }
                _32_ = this._loadLong((_31_ + 16));
                this._storeInt((_31_ + 28), ((_30_ = this._loadInt((_31_ + 28))) + 1));
                this._storeLong((_31_ + 16), ((_32_ * 10L) - ((long) ((this._loadInt(_30_)) + -48))));
                continue label$4;
            }
        }
        while (false);
        label$6:
        do {
            label$7:
            do {
                if ((this._loadInt((_31_ + 12))) == 0) {
                    break label$7;
                }
                _32_ = this._loadLong((_31_ + 16));
                break label$6;
            }
            while (false);
            _32_ = 0L - (this._loadLong((_31_ + 16)));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 32));
        return _32_;
    }

    public final int __isspace$2e$27(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if ((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) == 32) {
                break label$0;
            }
            _31_ = ((((this._loadInt((_32_ + 12))) + -9) & 4294967295L) < (5 & 4294967295L)) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int bcmp(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = memcmp((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final void bcopy(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        memmove((this._loadInt((_33_ + 8))), (this._loadInt((_33_ + 12))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return;
    }

    public final int bsearch(int _30_, int _31_, int _32_, int _33_, int _34_)
    {
        int _35_ = 0;
        this._storeInt(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_35_ + 20), _31_);
        this._storeInt((_35_ + 16), _32_);
        this._storeInt((_35_ + 12), _33_);
        this._storeInt((_35_ + 8), _34_);
        label$0:
        do {
            label$1:
            do {
                label$3:
                do {
                    label$2:
                    while (true) {
                        if ((this._loadInt((_35_ + 16))) == 0) {
                            break label$3;
                        }
                        _34_ = this._storeInt((_35_ + 4), ((this._loadInt((_35_ + 20))) + ((this._loadInt((_35_ + 12))) * ((this._loadInt((_35_ + 16))) >>> 1))));
                        if ((this._storeInt(_35_, (this._iiiTable[this._tableIndices[this._loadInt((_35_ + 8))]].invoke((this._loadInt((_35_ + 24))), _34_)))) == 0) {
                            break label$1;
                        }
                        if ((this._loadInt((_35_ + 16))) == 1) {
                            break label$3;
                        }
                        label$4:
                        do {
                            if ((this._loadInt(_35_)) <= -1) {
                                break label$4;
                            }
                            this._storeInt((_35_ + 20), (this._loadInt((_35_ + 4))));
                            this._storeInt((_35_ + 16), ((_34_ = this._loadInt((_35_ + 16))) - (_34_ >>> 1)));
                            continue label$2;
                        }
                        while (false);
                        this._storeInt((_35_ + 16), ((this._loadInt((_35_ + 16))) >>> 1));
                        continue label$2;
                    }
                }
                while (false);
                this._storeInt((_35_ + 28), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_35_ + 28), (this._loadInt((_35_ + 4))));
        }
        while (false);
        _34_ = this._loadInt((_35_ + 28));
        this._storeInt((0 + 4), (_35_ + 32));
        return _34_;
    }

    public final void bzero(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        memset((this._loadInt((_32_ + 12))), 0, _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return;
    }

    public final int calloc(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_32_ + 4), _31_)) == 0) {
                    break label$1;
                }
                if (((this._loadInt((_32_ + 8))) & 4294967295L) <= ((-1 / (this._loadInt((_32_ + 4)))) & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((__errno_location()), 12);
                this._storeInt((_32_ + 12), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 12), (__malloc0(((this._loadInt((_32_ + 4))) * (this._loadInt((_32_ + 8)))))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final double cbrt(double _30_)
    {
        double _31_ = 0.0;
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 64) + 40), (this._storeDouble((_32_ + 48), _30_)));
        label$0:
        do {
            if (((this._storeInt((_32_ + 4), ((int) ((this._loadLong((_32_ + 44))) & 2147483647L)))) & 4294967295L) < (2146435072 & 4294967295L)) {
                break label$0;
            }
            this._storeDouble((_32_ + 56), ((_30_ = this._loadDouble((_32_ + 48))) + _30_));
            return (this._loadDouble((_32_ + 56)));
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    if (((this._loadInt((_32_ + 4))) & 4294967295L) > (1048575 & 4294967295L)) {
                        break label$3;
                    }
                    this._storeDouble((_32_ + 40), ((this._loadDouble((_32_ + 48))) * 1.8014398509481984E16));
                    if ((this._storeInt((_32_ + 4), ((int) ((this._loadLong((_32_ + 44))) & 2147483647L)))) == 0) {
                        break label$1;
                    }
                    this._storeInt((_32_ + 4), (((this._loadInt((_32_ + 4))) / 3) + 696219795));
                    break label$2;
                }
                while (false);
                this._storeInt((_32_ + 4), (((this._loadInt((_32_ + 4))) / 3) + 715094163));
            }
            while (false);
            this._storeLong((_32_ + 40), ((this._storeLong((_32_ + 40), ((this._loadLong((_32_ + 40))) & -9223372036854775808L))) | ((this._loadLong((_32_ + 4))) << 32L)));
            _30_ = this._storeDouble((_32_ + 32), (((_30_ = this._storeDouble((_32_ + 16), (this._loadDouble((_32_ + 40))))) * _30_) * (_30_ / (this._loadDouble((_32_ + 48))))));
            this._storeDouble((_32_ + 16), ((this._loadDouble((_32_ + 16))) * (((_30_ * ((_30_ * 1.6214297201053545) + -1.8849797954337717)) + 1.87595182427177) + ((_30_ * (_30_ * _30_)) * ((_30_ * 0.14599619288661245) + -0.758397934778766)))));
            this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 16))));
            this._storeLong((_32_ + 40), (((this._loadLong((_32_ + 40))) + 2147483648L) & -1073741824L));
            _30_ = this._storeDouble((_32_ + 24), ((_30_ = this._storeDouble((_32_ + 16), (this._loadDouble((_32_ + 40))))) * _30_));
            this._storeDouble((_32_ + 32), ((this._loadDouble((_32_ + 48))) / _30_));
            _30_ = this._storeDouble((_32_ + 8), ((_30_ = this._loadDouble((_32_ + 16))) + _30_));
            _30_ = this._storeDouble((_32_ + 32), (((_31_ = this._loadDouble((_32_ + 32))) - (this._loadDouble((_32_ + 16)))) / (_30_ + _31_)));
            this._storeDouble((_32_ + 16), ((_31_ = this._loadDouble((_32_ + 16))) + (_31_ * _30_)));
            this._storeDouble((_32_ + 56), (this._loadDouble((_32_ + 16))));
            return (this._loadDouble((_32_ + 56)));
        }
        while (false);
        this._storeDouble((_32_ + 56), (this._loadDouble((_32_ + 48))));
        return (this._loadDouble((_32_ + 56)));
    }

    public final float cbrtf(float _30_)
    {
        double _31_ = 0.0;
        double _32_ = 0.0;
        int _33_ = 0;
        this._storeFloat(((_33_ = (this._loadInt((0 + 4))) - 48) + 16), (this._storeFloat((_33_ + 40), _30_)));
        label$0:
        do {
            if (((this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 16))) & 2147483647))) & 4294967295L) < (2139095040 & 4294967295L)) {
                break label$0;
            }
            this._storeFloat((_33_ + 44), ((_30_ = this._loadFloat((_33_ + 40))) + _30_));
            return (this._loadFloat((_33_ + 44)));
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    if (((this._loadInt((_33_ + 12))) & 4294967295L) > (8388607 & 4294967295L)) {
                        break label$3;
                    }
                    if ((this._loadInt((_33_ + 12))) == 0) {
                        break label$1;
                    }
                    this._storeFloat((_33_ + 16), ((this._loadFloat((_33_ + 40))) * 1.6777216E7f));
                    this._storeInt((_33_ + 12), (((this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 16))) & 2147483647))) / 3) + 642849266));
                    break label$2;
                }
                while (false);
                this._storeInt((_33_ + 12), (((this._loadInt((_33_ + 12))) / 3) + 709958130));
            }
            while (false);
            this._storeInt((_33_ + 16), ((this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) & -2147483648))) | (this._loadInt((_33_ + 12)))));
            _31_ = this._storeDouble((_33_ + 32), (((_31_ = this._storeDouble((_33_ + 24), ((double) (this._loadFloat((_33_ + 16)))))) * _31_) * _31_));
            this._storeDouble((_33_ + 24), (((this._loadDouble((_33_ + 24))) * (_31_ + ((_32_ = (double) (this._loadFloat((_33_ + 40)))) + _32_))) / (_31_ + (_32_ + _31_))));
            _31_ = this._storeDouble((_33_ + 32), (((_31_ = this._loadDouble((_33_ + 24))) * _31_) * _31_));
            this._storeDouble((_33_ + 24), (((this._loadDouble((_33_ + 24))) * (_31_ + ((_32_ = (double) (this._loadFloat((_33_ + 40)))) + _32_))) / (_31_ + (_32_ + _31_))));
            this._storeFloat((_33_ + 44), ((float) (this._loadDouble((_33_ + 24)))));
            return (this._loadFloat((_33_ + 44)));
        }
        while (false);
        this._storeFloat((_33_ + 44), (this._loadFloat((_33_ + 40))));
        return (this._loadFloat((_33_ + 44)));
    }

    public final void cbrtl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (cbrt((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double ceil(double _30_)
    {
        int _31_ = 0;
        double _temp$0 = 0.0;
        double _temp$1 = 0.0;
        double _temp$2 = 0.0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 48) + 24), (this._storeDouble((_31_ + 32), _30_)));
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_31_ + 20), ((int) (((this._loadLong((_31_ + 24))) >>> 52L) & 2047L)))) > 1074) {
                    break label$1;
                }
                if ((this._loadDouble((_31_ + 32))) != 0.0) {
                    break label$0;
                }
            }
            while (false);
            this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 32))));
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                if (((this._loadLong((_31_ + 24))) >>> 63L) == 0) {
                    break label$3;
                }
                this._storeDouble((_31_ + 8), ((((_30_ = this._loadDouble((_31_ + 32))) - 4.503599627370496E15) + 4.503599627370496E15) - _30_));
                break label$2;
            }
            while (false);
            this._storeDouble((_31_ + 8), ((((_30_ = this._loadDouble((_31_ + 32))) + 4.503599627370496E15) - 4.503599627370496E15) - _30_));
        }
        while (false);
        label$4:
        do {
            if ((this._loadInt((_31_ + 20))) > 1022) {
                break label$4;
            }
            this._storeDouble(_31_, (this._loadDouble((_31_ + 8))));
            _temp$0 = -0.0;
            _temp$1 = 1.0;
            _temp$2 = (((this._loadLong((_31_ + 24))) >>> 63L) != 0L) ? _temp$0 : _temp$1;
            this._storeDouble((_31_ + 40), _temp$2);
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        label$5:
        do {
            if (((((_30_ = this._loadDouble((_31_ + 8))) >= 0.0) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                break label$5;
            }
            this._storeDouble((_31_ + 40), (((this._loadDouble((_31_ + 32))) + (this._loadDouble((_31_ + 8)))) + 1.0));
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        this._storeDouble((_31_ + 40), ((this._loadDouble((_31_ + 32))) + (this._loadDouble((_31_ + 8)))));
        return (this._loadDouble((_31_ + 40)));
    }

    public final float ceilf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 32) + 16), (this._storeFloat((_31_ + 24), _30_)));
        label$0:
        do {
            if ((this._storeInt((_31_ + 12), ((((this._loadInt((_31_ + 16))) >>> 23) & 255) + -127))) < 23) {
                break label$0;
            }
            this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
            return (this._loadFloat((_31_ + 28)));
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        if ((this._loadInt((_31_ + 12))) < 0) {
                            break label$4;
                        }
                        if (((this._storeInt((_31_ + 8), (8388607 >>> (this._loadInt((_31_ + 12)))))) & (this._loadInt((_31_ + 16)))) == 0) {
                            break label$3;
                        }
                        this._storeFloat((_31_ + 4), ((this._loadFloat((_31_ + 24))) + 1.329228E36f));
                        label$5:
                        do {
                            if (((this._loadInt((_31_ + 16))) >>> 31) != 0) {
                                break label$5;
                            }
                            this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 16))) + (this._loadInt((_31_ + 8)))));
                        }
                        while (false);
                        this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 16))) & ((this._loadInt((_31_ + 8))) ^ -1)));
                        break label$1;
                    }
                    while (false);
                    this._storeFloat(_31_, ((this._loadFloat((_31_ + 24))) + 1.329228E36f));
                    if (((this._loadInt((_31_ + 16))) >>> 31) == 0) {
                        break label$2;
                    }
                    this._storeInt((_31_ + 16), -2147483648);
                    break label$1;
                }
                while (false);
                this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
                return (this._loadFloat((_31_ + 28)));
            }
            while (false);
            if (((this._loadInt((_31_ + 16))) << 1) == 0) {
                break label$1;
            }
            this._storeInt((_31_ + 16), 1065353216);
        }
        while (false);
        this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 16))));
        return (this._loadFloat((_31_ + 28)));
    }

    public final void ceill(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (Math.ceil((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int chdir(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(12, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int chown(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __syscall_ret((this.__syscall3.invoke(182, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_)));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int clearenv()
    {
        return (this._storeInt((this._loadInt((0 + 3912))), 0));
    }

    public final void clearerr(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) + 76))) < 0) {
                break label$0;
            }
            _32_ = this.__lockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        this._storeInt((_31_ + 8), _32_);
        this._storeInt((_30_ = this._loadInt((_31_ + 12))), ((this._loadInt(_30_)) & -49));
        label$1:
        do {
            if (_32_ == 0) {
                break label$1;
            }
            this.__unlockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int close(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), (this.__syscall_cp.invoke(6, (this._storeInt((_31_ + 12), (dummy((this._storeInt((_31_ + 12), _30_)))))), 0, 0, 0, 0, 0)))) != -4) {
                break label$0;
            }
            this._storeInt((_31_ + 8), 0);
        }
        while (false);
        _30_ = __syscall_ret((this._loadInt((_31_ + 8))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double copysign(double _30_, double _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeDouble((_32_ + 16), _31_);
        this._storeDouble((_32_ + 8), (this._loadDouble((_32_ + 24))));
        this._storeDouble(_32_, (this._loadDouble((_32_ + 16))));
        this._storeLong((_32_ + 8), ((this._storeLong((_32_ + 8), ((this._loadLong((_32_ + 8))) & 9223372036854775807L))) | ((this._loadLong(_32_)) & -9223372036854775808L)));
        return (this._loadDouble((_32_ + 8)));
    }

    public final float copysignf(float _30_, float _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = (this._loadInt((0 + 4))) - 32) + 28), _30_);
        this._storeFloat((_32_ + 24), _31_);
        this._storeFloat((_32_ + 16), (this._loadFloat((_32_ + 28))));
        this._storeFloat((_32_ + 8), (this._loadFloat((_32_ + 24))));
        this._storeInt((_32_ + 16), ((this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) & 2147483647))) | ((this._loadInt((_32_ + 8))) & -2147483648)));
        return (this._loadFloat((_32_ + 16)));
    }

    public final void copysignl(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (Double.longBitsToDouble((((Double.doubleToRawLongBits((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))))) & 9223372036854775807L) | ((Double.doubleToRawLongBits(_36_)) & -9223372036854775808L)))));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final double cos(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 16), (this._storeDouble((_31_ + 48), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._storeInt((_31_ + 28), ((this._storeInt((_31_ + 28), (this._loadInt((_31_ + 20))))) & 2147483647))) & 4294967295L) > (1072243195 & 4294967295L)) {
                            break label$3;
                        }
                        if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1044816029 & 4294967295L)) {
                            break label$2;
                        }
                        this._storeDouble((_31_ + 8), ((this._loadDouble((_31_ + 48))) + 1.3292279957849159E36));
                        this._storeLong((_31_ + 56), 4607182418800017408L);
                        break label$0;
                    }
                    while (false);
                    if (((this._loadInt((_31_ + 28))) & 4294967295L) < (2146435072 & 4294967295L)) {
                        break label$1;
                    }
                    this._storeDouble((_31_ + 56), ((_30_ = this._loadDouble((_31_ + 48))) - _30_));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 56), (__cos((this._loadDouble((_31_ + 48))), 0.0)));
                break label$0;
            }
            while (false);
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        if ((_32_ = (this._storeInt((_31_ + 24), (__rem_pio2((this._loadDouble((_31_ + 48))), (_31_ + 32))))) & 3) == 2) {
                            break label$6;
                        }
                        if (_32_ == 1) {
                            break label$5;
                        }
                        if (_32_ != 0) {
                            break label$4;
                        }
                        this._storeDouble((_31_ + 56), (__cos((this._loadDouble((_31_ + 32))), (this._loadDouble((_31_ + 40))))));
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_31_ + 56), (-(__cos((this._loadDouble((_31_ + 32))), (this._loadDouble((_31_ + 40)))))));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 56), (-(__sin((this._loadDouble((_31_ + 32))), (this._loadDouble((_31_ + 40))), 1))));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 56), (__sin((this._loadDouble((_31_ + 32))), (this._loadDouble((_31_ + 40))), 1)));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 56));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final float cosf(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        double _33_ = 0.0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 16), (this._storeFloat((_31_ + 40), _30_)));
        this._storeInt((_31_ + 20), ((this._storeInt((_31_ + 28), (this._loadInt((_31_ + 16))))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            label$9:
                                            do {
                                                label$10:
                                                do {
                                                    label$11:
                                                    do {
                                                        label$12:
                                                        do {
                                                            label$13:
                                                            do {
                                                                label$14:
                                                                do {
                                                                    label$15:
                                                                    do {
                                                                        label$16:
                                                                        do {
                                                                            if (((this._storeInt((_31_ + 28), ((this._loadInt((_31_ + 28))) & 2147483647))) & 4294967295L) > (1061752794 & 4294967295L)) {
                                                                                break label$16;
                                                                            }
                                                                            if (((this._loadInt((_31_ + 28))) & 4294967295L) > (964689919 & 4294967295L)) {
                                                                                break label$15;
                                                                            }
                                                                            this._storeFloat((_31_ + 12), ((this._loadFloat((_31_ + 40))) + 1.329228E36f));
                                                                            this._storeInt((_31_ + 44), 1065353216);
                                                                            break label$0;
                                                                        }
                                                                        while (false);
                                                                        if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1081824209 & 4294967295L)) {
                                                                            break label$14;
                                                                        }
                                                                        if (((this._loadInt((_31_ + 28))) & 4294967295L) < (1075235812 & 4294967295L)) {
                                                                            break label$13;
                                                                        }
                                                                        if ((this._loadInt((_31_ + 20))) == 0) {
                                                                            break label$9;
                                                                        }
                                                                        _33_ = ((double) (this._loadFloat((_31_ + 40)))) + 3.141592653589793;
                                                                        break label$8;
                                                                    }
                                                                    while (false);
                                                                    this._storeFloat((_31_ + 44), (__cosdf(((double) (this._loadFloat((_31_ + 40)))))));
                                                                    break label$0;
                                                                }
                                                                while (false);
                                                                if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1088565717 & 4294967295L)) {
                                                                    break label$12;
                                                                }
                                                                if (((this._loadInt((_31_ + 28))) & 4294967295L) < (1085271520 & 4294967295L)) {
                                                                    break label$11;
                                                                }
                                                                if ((this._loadInt((_31_ + 20))) == 0) {
                                                                    break label$6;
                                                                }
                                                                _33_ = ((double) (this._loadFloat((_31_ + 40)))) + 6.283185307179586;
                                                                break label$5;
                                                            }
                                                            while (false);
                                                            if ((this._loadInt((_31_ + 20))) == 0) {
                                                                break label$7;
                                                            }
                                                            this._storeFloat((_31_ + 44), (__sindf((((double) (this._loadFloat((_31_ + 40)))) + 1.5707963267948966))));
                                                            break label$0;
                                                        }
                                                        while (false);
                                                        if (((this._loadInt((_31_ + 28))) & 4294967295L) < (2139095040 & 4294967295L)) {
                                                            break label$10;
                                                        }
                                                        this._storeFloat((_31_ + 44), ((_30_ = this._loadFloat((_31_ + 40))) - _30_));
                                                        break label$0;
                                                    }
                                                    while (false);
                                                    if ((this._loadInt((_31_ + 20))) == 0) {
                                                        break label$4;
                                                    }
                                                    this._storeFloat((_31_ + 44), (__sindf((-4.71238898038469 - ((double) (this._loadFloat((_31_ + 40))))))));
                                                    break label$0;
                                                }
                                                while (false);
                                                if ((_32_ = (this._storeInt((_31_ + 24), (__rem_pio2f((this._loadFloat((_31_ + 40))), (_31_ + 32))))) & 3) == 2) {
                                                    break label$3;
                                                }
                                                if (_32_ == 1) {
                                                    break label$2;
                                                }
                                                if (_32_ != 0) {
                                                    break label$1;
                                                }
                                                this._storeFloat((_31_ + 44), (__cosdf((this._loadDouble((_31_ + 32))))));
                                                break label$0;
                                            }
                                            while (false);
                                            _33_ = ((double) (this._loadFloat((_31_ + 40)))) + -3.141592653589793;
                                        }
                                        while (false);
                                        this._storeFloat((_31_ + 44), (-(__cosdf(_33_))));
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeFloat((_31_ + 44), (__sindf((1.5707963267948966 - ((double) (this._loadFloat((_31_ + 40))))))));
                                    break label$0;
                                }
                                while (false);
                                _33_ = ((double) (this._loadFloat((_31_ + 40)))) + -6.283185307179586;
                            }
                            while (false);
                            this._storeFloat((_31_ + 44), (__cosdf(_33_)));
                            break label$0;
                        }
                        while (false);
                        this._storeFloat((_31_ + 44), (__sindf((((double) (this._loadFloat((_31_ + 40)))) + -4.71238898038469))));
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((_31_ + 44), (-(__cosdf((this._loadDouble((_31_ + 32)))))));
                    break label$0;
                }
                while (false);
                this._storeFloat((_31_ + 44), (__sindf((-(this._loadDouble((_31_ + 32)))))));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 44), (__sindf((this._loadDouble((_31_ + 32))))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 44));
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final double cosh(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 24), (this._storeDouble((_31_ + 32), _30_)));
        this._storeLong((_31_ + 24), ((this._loadLong((_31_ + 24))) & 9223372036854775807L));
        this._storeDouble((_31_ + 32), (this._loadDouble((_31_ + 24))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._storeInt((_31_ + 20), (this._loadInt((_31_ + 28))))) & 4294967295L) > (1072049729 & 4294967295L)) {
                            break label$3;
                        }
                        if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1045430271 & 4294967295L)) {
                            break label$2;
                        }
                        this._storeDouble(_31_, ((this._loadDouble((_31_ + 32))) + 1.3292279957849159E36));
                        this._storeLong((_31_ + 40), 4607182418800017408L);
                        break label$0;
                    }
                    while (false);
                    if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1082535489 & 4294967295L)) {
                        break label$1;
                    }
                    this._storeDouble((_31_ + 40), (((_30_ = this._storeDouble((_31_ + 8), (exp((this._loadDouble((_31_ + 32))))))) + (1.0 / _30_)) * 0.5));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 40), ((((_30_ = this._storeDouble((_31_ + 8), (expm1((this._loadDouble((_31_ + 32))))))) * _30_) / ((_30_ = _30_ + 1.0) + _30_)) + 1.0));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 40), (this._storeDouble((_31_ + 8), (__expo2((this._loadDouble((_31_ + 32))))))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 40));
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final float coshf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 16), (this._storeFloat((_31_ + 24), _30_)));
        this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 16))) & 2147483647));
        this._storeFloat((_31_ + 24), (this._loadFloat((_31_ + 16))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._storeInt((_31_ + 12), (this._loadInt((_31_ + 16))))) & 4294967295L) > (1060205078 & 4294967295L)) {
                            break label$3;
                        }
                        if (((this._loadInt((_31_ + 12))) & 4294967295L) > (964689919 & 4294967295L)) {
                            break label$2;
                        }
                        this._storeFloat((_31_ + 4), ((this._loadFloat((_31_ + 24))) + 1.329228E36f));
                        this._storeInt((_31_ + 28), 1065353216);
                        break label$0;
                    }
                    while (false);
                    if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1118925334 & 4294967295L)) {
                        break label$1;
                    }
                    this._storeFloat((_31_ + 28), (((_30_ = this._storeFloat((_31_ + 8), (expf((this._loadFloat((_31_ + 24))))))) + (1.0f / _30_)) * 0.5f));
                    break label$0;
                }
                while (false);
                this._storeFloat((_31_ + 28), ((((_30_ = this._storeFloat((_31_ + 8), (expm1f((this._loadFloat((_31_ + 24))))))) * _30_) / ((_30_ = _30_ + 1.0f) + _30_)) + 1.0f));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 28), (this._storeFloat((_31_ + 8), (__expo2f((this._loadFloat((_31_ + 24))))))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final void coshl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (cosh((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void cosl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (cos((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int ctermid(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = 5104;
        label$0:
        do {
            if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) == 0) {
                break label$0;
            }
            _32_ = strcpy((this._loadInt((_31_ + 12))), 5104);
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return _32_;
    }

    public final void div(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 16) + 12), _31_);
        this._storeInt((_33_ + 8), _32_);
        this._storeInt(_30_, ((_33_ = this._loadInt((_33_ + 12))) / _32_));
        this._storeInt((_30_ + 4), (_33_ % _32_));
        return;
    }

    public final int static_dl_iterate_phdr(int _30_, int _31_)
    {
        long _32_ = 0L;
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 240))) + 236), _30_);
        this._storeInt((_33_ + 232), _31_);
        _31_ = this._storeInt((_33_ + 164), (this._storeInt((_33_ + 216), (this._storeInt((_33_ + 220), 0)))));
        label$1:
        do {
            label$0:
            while (true) {
                if ((this._loadInt(((this._loadInt((_31_ + 12956))) + ((this._loadInt((_33_ + 164))) << 2)))) == 0) {
                    break label$1;
                }
                label$2:
                do {
                    if (((this._loadInt(((this._loadInt((_31_ + 12956))) + ((this._loadInt((_33_ + 164))) << 2)))) & 4294967295L) > (37 & 4294967295L)) {
                        break label$2;
                    }
                    this._storeInt((_33_ + ((this._loadInt((_30_ = (this._loadInt((_31_ + 12956))) + ((this._loadInt((_33_ + 164))) << 2)))) << 2)), (this._loadInt((_30_ + 4))));
                }
                while (false);
                this._storeInt((_33_ + 164), ((this._loadInt((_33_ + 164))) + 2));
                continue label$0;
            }
        }
        while (false);
        this._storeInt((_33_ + 228), (this._loadInt((_33_ + 12))));
        this._storeInt((_33_ + 212), (this._loadInt((_33_ + 20))));
        label$4:
        do {
            label$3:
            while (true) {
                if ((this._loadInt((_33_ + 212))) == 0) {
                    break label$4;
                }
                label$5:
                do {
                    if ((this._loadInt((this._storeInt((_33_ + 224), (this._loadInt((_33_ + 228))))))) != 6) {
                        break label$5;
                    }
                    this._storeInt((_33_ + 216), ((this._loadInt((_33_ + 12))) - (this._loadInt(((this._loadInt((_33_ + 224))) + 8)))));
                }
                while (false);
                label$6:
                do {
                    if ((this._loadInt((this._loadInt((_33_ + 224))))) != 7) {
                        break label$6;
                    }
                    this._storeInt((_33_ + 220), (this._loadInt((_33_ + 224))));
                }
                while (false);
                this._storeInt((_33_ + 212), ((this._loadInt((_33_ + 212))) + -1));
                this._storeInt((_33_ + 228), ((this._loadInt((_33_ + 228))) + (this._loadInt((_33_ + 16)))));
                continue label$3;
            }
        }
        while (false);
        this._storeInt((_33_ + 172), 5120);
        this._storeInt((_33_ + 168), (this._loadInt((_33_ + 216))));
        this._storeInt((_33_ + 176), (this._loadInt((_33_ + 12))));
        this._storeInt((_33_ + 180), (this._loadInt((_33_ + 20))));
        _32_ = this._storeLong((_33_ + 192), (this._storeLong((_33_ + 184), 0L)));
        label$7:
        do {
            label$8:
            do {
                if ((this._loadInt((_33_ + 220))) == 0) {
                    break label$8;
                }
                this._storeInt((_33_ + 200), 1);
                this._storeInt((_33_ + 204), ((this._loadInt((_33_ + 216))) + (this._loadInt(((this._loadInt((_33_ + 220))) + 8)))));
                break label$7;
            }
            while (false);
            this._storeLong((_33_ + 200), _32_);
        }
        while (false);
        _31_ = this._iiiiTable[this._tableIndices[this._loadInt((_33_ + 236))]].invoke((_33_ + 168), 40, (this._loadInt((_33_ + 232))));
        this._storeInt((0 + 4), (_33_ + 240));
        return _31_;
    }

    public final int stub_dladdr(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        return 0;
    }

    public final int dlclose(int _30_)
    {
        int _31_ = 0;
        _30_ = this.__dl_invalid_handle.invoke((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int dlinfo(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            label$1:
            do {
                if ((this.__dl_invalid_handle.invoke((this._loadInt((_33_ + 24))))) == 0) {
                    break label$1;
                }
                this._storeInt((_33_ + 28), -1);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((this._loadInt((_33_ + 20))) == 2) {
                    break label$2;
                }
                this._storeInt(_33_, (this._loadInt((_33_ + 20))));
                this.__dl_seterr.invoke(5136, _33_);
                this._storeInt((_33_ + 28), -1);
                break label$0;
            }
            while (false);
            this._storeInt((this._loadInt((_33_ + 16))), (this._loadInt((_33_ + 24))));
            this._storeInt((_33_ + 28), 0);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int stub_dlopen(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        this.__dl_seterr.invoke(5168, 0);
        this._storeInt((0 + 4), (_32_ + 16));
        return 0;
    }

    public final int dlsym(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = stub_dlsym((this._loadInt((_32_ + 12))), _31_, 0);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final double erand48(int _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        this._storeLong((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), (((__rand48_step((this._storeInt((_31_ + 12), _30_)), 4226)) << 4L) | 4607182418800017408L));
        _32_ = this._loadDouble(_31_);
        this._storeInt((0 + 4), (_31_ + 16));
        return (_32_ + -1.0);
    }

    public final double drand48()
    {
        return (erand48(4220));
    }

    public final int dup(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(41, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int dup2(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        label$0$end:
        do {
            label$0:
            while (true) {
                if ((this._storeInt((_32_ + 4), (this.__syscall2.invoke(63, (this._loadInt((_32_ + 12))), (this._loadInt((_32_ + 8))))))) == -16) {
                    continue label$0;
                }
                break label$0$end;
            }
        }
        while (false);
        _31_ = __syscall_ret((this._loadInt((_32_ + 4))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int __dup3(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_33_ + 24))) != (this._loadInt((_33_ + 20)))) {
                    break label$1;
                }
                this._storeInt((_33_ + 28), (__syscall_ret(-22)));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_33_ + 18))) & 8) == 0) {
                    break label$2;
                }
                label$3$end:
                do {
                    label$3:
                    while (true) {
                        if ((this._storeInt((_33_ + 12), (this.__syscall3.invoke(330, (this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 20))), (this._loadInt((_33_ + 16))))))) == -16) {
                            continue label$3;
                        }
                        break label$3$end;
                    }
                }
                while (false);
                if ((this._loadInt((_33_ + 12))) == -38) {
                    break label$2;
                }
                this._storeInt((_33_ + 28), (__syscall_ret((this._loadInt((_33_ + 12))))));
                break label$0;
            }
            while (false);
            label$5$end:
            do {
                label$5:
                while (true) {
                    if ((this._storeInt((_33_ + 12), (this.__syscall2.invoke(63, (this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 20))))))) == -16) {
                        continue label$5;
                    }
                    break label$5$end;
                }
            }
            while (false);
            label$7:
            do {
                if (((this._loadInt((_33_ + 18))) & 8) == 0) {
                    break label$7;
                }
                this.__syscall3.invoke(55, (this._loadInt((_33_ + 20))), 2, 1);
            }
            while (false);
            this._storeInt((_33_ + 28), (__syscall_ret((this._loadInt((_33_ + 12))))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int ecvt(double _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeDouble(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 96))) + 88), _30_);
        this._storeInt((_34_ + 84), _31_);
        this._storeInt((_34_ + 80), _32_);
        this._storeInt((_34_ + 76), _33_);
        label$0:
        do {
            if ((((this._loadInt((_34_ + 84))) + -1) & 4294967295L) < (16 & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_34_ + 84), 15);
        }
        while (false);
        this._storeDouble((_34_ + 8), (this._loadDouble((_34_ + 88))));
        this._storeInt(_34_, ((this._loadInt((_34_ + 84))) + -1));
        this.sprintf.invoke((_34_ + 32), 5200, _34_);
        this._storeInt((_34_ + 28), (this._storeInt((this._loadInt((_34_ + 76))), (((this._loadInt((_34_ + 32))) == 45) ? 1 : 0))));
        this._storeInt((_34_ + 24), 0);
        label$2:
        do {
            label$1:
            while (true) {
                if ((this._loadInt(((_34_ + 32) + (this._loadInt((_34_ + 28)))))) == 101) {
                    break label$2;
                }
                this._storeInt(((this._loadInt((_34_ + 24))) + 5205), (this._loadInt((_32_ = (_34_ + 32) + (_33_ = this._loadInt((_34_ + 28)))))));
                this._storeInt((_34_ + 28), (_33_ + 1));
                this._storeInt((_34_ + 24), ((this._loadInt((_34_ + 24))) + (((this._loadInt(_32_)) != 46) ? 1 : 0)));
                continue label$1;
            }
        }
        while (false);
        this._storeInt(((this._loadInt((_34_ + 24))) + 5205), 0);
        _33_ = atoi((((_34_ + 32) + (this._loadInt((_34_ + 28)))) + 1));
        this._storeInt((this._loadInt((_34_ + 80))), (_33_ + 1));
        this._storeInt((0 + 4), (_34_ + 96));
        return 5205;
    }

    public final double erf(double _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 48), _30_);
        this._storeDouble(_31_, (this._loadDouble((_31_ + 48))));
        this._storeLong((_31_ + 12), (this._loadLong((_31_ + 4))));
        this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 12))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) & 2147483647))) & 4294967295L) < (2146435072 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_31_ + 56), (((double) (1 - ((this._loadInt((_31_ + 8))) << 1))) + (1.0 / (this._loadDouble((_31_ + 48))))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1072365567 & 4294967295L)) {
                                break label$5;
                            }
                            if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1043333119 & 4294967295L)) {
                                break label$4;
                            }
                            this._storeDouble((_31_ + 56), ((((_30_ = this._loadDouble((_31_ + 48))) * 8.0) + (_30_ * 1.0270333367641007)) * 0.125));
                            break label$0;
                        }
                        while (false);
                        if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1075314687 & 4294967295L)) {
                            break label$3;
                        }
                        this._storeDouble((_31_ + 16), (1.0 - (erfc2((this._loadInt((_31_ + 12))), (this._loadDouble((_31_ + 48)))))));
                        break label$2;
                    }
                    while (false);
                    this._storeDouble((_31_ + 40), (((_30_ = this._storeDouble((_31_ + 24), ((_30_ = this._loadDouble((_31_ + 48))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * -2.3763016656650163E-5) + -0.005770270296489442)) + -0.02848174957559851)) + -0.3250421072470015)) + 0.12837916709551256));
                    _30_ = this._storeDouble((_31_ + 32), (((_30_ = this._loadDouble((_31_ + 24))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -3.960228278775368E-6) + 1.3249473800432164E-4)) + 0.005081306281875766)) + 0.0650222499887673)) + 0.39791722395915535)) + 1.0));
                    _30_ = this._storeDouble((_31_ + 16), ((this._loadDouble((_31_ + 40))) / _30_));
                    this._storeDouble((_31_ + 56), ((_32_ = this._loadDouble((_31_ + 48))) + (_32_ * _30_)));
                    break label$0;
                }
                while (false);
                this._storeLong((_31_ + 16), 4607182418800017408L);
            }
            while (false);
            label$6:
            do {
                label$7:
                do {
                    if ((this._loadInt((_31_ + 8))) == 0) {
                        break label$7;
                    }
                    _30_ = -(this._loadDouble((_31_ + 16)));
                    break label$6;
                }
                while (false);
                _30_ = this._loadDouble((_31_ + 16));
            }
            while (false);
            this._storeDouble((_31_ + 56), _30_);
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 56));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final double erfc2(int _30_, double _31_)
    {
        int _32_ = 0;
        double _33_ = 0.0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 52), _30_);
        this._storeDouble((_32_ + 40), _31_);
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_32_ + 52))) & 4294967295L) > (1072955391 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_32_ + 56), (erfc1((this._loadDouble((_32_ + 40))))));
                break label$0;
            }
            while (false);
            this._storeDouble((_32_ + 32), (1.0 / ((_31_ = this._storeDouble((_32_ + 40), (Math.abs((this._loadDouble((_32_ + 40))))))) * _31_)));
            label$2:
            do {
                label$3:
                do {
                    if (((this._loadInt((_32_ + 52))) & 4294967295L) > (1074191212 & 4294967295L)) {
                        break label$3;
                    }
                    this._storeDouble((_32_ + 24), (((_31_ = this._loadDouble((_32_ + 32))) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * -9.814329344169145) + -81.2874355063066)) + -184.60509290671104)) + -162.39666946257347)) + -62.375332450326006)) + -10.558626225323291)) + -0.6938585727071818)) + -0.009864944034847148));
                    this._storeDouble((_32_ + 16), (((_31_ = this._loadDouble((_32_ + 32))) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * -0.0604244152148581) + 6.570249770319282)) + 108.63500554177944)) + 429.00814002756783)) + 645.3872717332679)) + 434.56587747522923)) + 137.65775414351904)) + 19.651271667439257)) + 1.0));
                    break label$2;
                }
                while (false);
                this._storeDouble((_32_ + 24), (((_31_ = this._loadDouble((_32_ + 32))) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * -483.5191916086514) + -1025.0951316110772)) + -637.5664433683896)) + -160.63638485582192)) + -17.757954917754752)) + -0.799283237680523)) + -0.0098649429247001));
                this._storeDouble((_32_ + 16), (((_31_ = this._loadDouble((_32_ + 32))) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * -22.44095244658582) + 474.52854120695537)) + 2553.0504064331644)) + 3199.8582195085955)) + 1536.729586084437)) + 325.7925129965739)) + 30.33806074348246)) + 1.0));
            }
            while (false);
            this._storeDouble((_32_ + 8), (this._loadDouble((_32_ + 40))));
            this._storeDouble(_32_, (this._loadDouble((_32_ + 8))));
            this._storeLong(_32_, ((this._loadLong(_32_)) & -4294967296L));
            this._storeDouble((_32_ + 8), (this._loadDouble(_32_)));
            this._storeDouble((_32_ + 56), (((exp((-0.5625 - ((_31_ = this._loadDouble((_32_ + 8))) * _31_)))) * (exp(((((_31_ = this._loadDouble((_32_ + 8))) - (_33_ = this._loadDouble((_32_ + 40)))) * (_31_ + _33_)) + ((this._loadDouble((_32_ + 24))) / (this._loadDouble((_32_ + 16)))))))) / (this._loadDouble((_32_ + 40)))));
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 56));
        this._storeInt((0 + 4), (_32_ + 64));
        return _31_;
    }

    public final double erfc1(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 32) + 8), (((_30_ = this._storeDouble((_31_ + 16), ((Math.abs((this._storeDouble((_31_ + 24), _30_)))) - 1.0))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -0.002166375594868791) + 0.035478304325618236)) + -0.11089469428239668)) + 0.31834661990116175)) + -0.3722078760357013)) + 0.41485611868374833)) + -0.0023621185607526594));
        _30_ = this._storeDouble(_31_, (((_30_ = this._loadDouble((_31_ + 16))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 0.011984499846799107) + 0.01363708391202905)) + 0.12617121980876164)) + 0.07182865441419627)) + 0.540397917702171)) + 0.10642088040084423)) + 1.0));
        return (0.15493708848953247 - ((this._loadDouble((_31_ + 8))) / _30_));
    }

    public final double erfc(double _30_)
    {
        int _31_ = 0;
        double _temp$0 = 0.0;
        double _temp$1 = 0.0;
        double _temp$2 = 0.0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 48), _30_);
        this._storeDouble(_31_, (this._loadDouble((_31_ + 48))));
        this._storeLong((_31_ + 12), (this._loadLong((_31_ + 4))));
        this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 12))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) & 2147483647))) & 4294967295L) < (2146435072 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_31_ + 56), (((double) ((this._loadInt((_31_ + 8))) << 1)) + (1.0 / (this._loadDouble((_31_ + 48))))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            label$6:
                            do {
                                if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1072365567 & 4294967295L)) {
                                    break label$6;
                                }
                                if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1013972991 & 4294967295L)) {
                                    break label$5;
                                }
                                this._storeDouble((_31_ + 56), (1.0 - (this._loadDouble((_31_ + 48)))));
                                break label$0;
                            }
                            while (false);
                            if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1077673983 & 4294967295L)) {
                                break label$4;
                            }
                            if ((this._loadInt((_31_ + 8))) == 0) {
                                break label$3;
                            }
                            this._storeDouble((_31_ + 56), (2.0 - (erfc2((this._loadInt((_31_ + 12))), (this._loadDouble((_31_ + 48)))))));
                            break label$0;
                        }
                        while (false);
                        this._storeDouble((_31_ + 40), (((_30_ = this._storeDouble((_31_ + 24), ((_30_ = this._loadDouble((_31_ + 48))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * -2.3763016656650163E-5) + -0.005770270296489442)) + -0.02848174957559851)) + -0.3250421072470015)) + 0.12837916709551256));
                        _30_ = this._storeDouble((_31_ + 32), (((_30_ = this._loadDouble((_31_ + 24))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -3.960228278775368E-6) + 1.3249473800432164E-4)) + 0.005081306281875766)) + 0.0650222499887673)) + 0.39791722395915535)) + 1.0));
                        this._storeDouble((_31_ + 16), ((this._loadDouble((_31_ + 40))) / _30_));
                        label$7:
                        do {
                            if ((this._loadInt((_31_ + 8))) != 0) {
                                break label$7;
                            }
                            if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1070596095 & 4294967295L)) {
                                break label$2;
                            }
                        }
                        while (false);
                        this._storeDouble((_31_ + 56), (1.0 - ((_30_ = this._loadDouble((_31_ + 48))) + (_30_ * (this._loadDouble((_31_ + 16)))))));
                        break label$0;
                    }
                    while (false);
                    _temp$0 = 2.0;
                    _temp$1 = 0.0;
                    _temp$2 = ((this._loadInt((_31_ + 8))) != 0) ? _temp$0 : _temp$1;
                    this._storeDouble((_31_ + 56), _temp$2);
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 56), (erfc2((this._loadInt((_31_ + 12))), (this._loadDouble((_31_ + 48))))));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 56), (0.5 - (((_30_ = this._loadDouble((_31_ + 48))) - 0.5) + (_30_ * (this._loadDouble((_31_ + 16)))))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 56));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final float erff(float _30_)
    {
        int _31_ = 0;
        float _32_ = 0.0f;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeFloat((_31_ + 8), (this._loadFloat((_31_ + 40))));
        this._storeInt((_31_ + 20), (this._loadInt((_31_ + 8))));
        this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 20))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 20))) & 2147483647))) & 4294967295L) < (2139095040 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_31_ + 44), (((float) (1 - ((this._loadInt((_31_ + 16))) << 1))) + (1.0f / (this._loadFloat((_31_ + 40))))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1062731775 & 4294967295L)) {
                                break label$5;
                            }
                            if (((this._loadInt((_31_ + 20))) & 4294967295L) > (830472191 & 4294967295L)) {
                                break label$4;
                            }
                            this._storeFloat((_31_ + 44), ((((_30_ = this._loadFloat((_31_ + 40))) * 8.0f) + (_30_ * 1.0270333f)) * 0.125f));
                            break label$0;
                        }
                        while (false);
                        if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1086324735 & 4294967295L)) {
                            break label$3;
                        }
                        this._storeFloat((_31_ + 24), (1.0f - (erfc2$2e$35((this._loadInt((_31_ + 20))), (this._loadFloat((_31_ + 40)))))));
                        break label$2;
                    }
                    while (false);
                    this._storeFloat((_31_ + 36), (((_30_ = this._storeFloat((_31_ + 28), ((_30_ = this._loadFloat((_31_ + 40))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * -2.3763017E-5f) + -0.0057702702f)) + -0.02848175f)) + -0.3250421f)) + 0.12837917f));
                    _30_ = this._storeFloat((_31_ + 32), (((_30_ = this._loadFloat((_31_ + 28))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -3.9602282E-6f) + 1.3249474E-4f)) + 0.005081306f)) + 0.06502225f)) + 0.3979172f)) + 1.0f));
                    _30_ = this._storeFloat((_31_ + 24), ((this._loadFloat((_31_ + 36))) / _30_));
                    this._storeFloat((_31_ + 44), ((_32_ = this._loadFloat((_31_ + 40))) + (_32_ * _30_)));
                    break label$0;
                }
                while (false);
                this._storeInt((_31_ + 24), 1065353216);
            }
            while (false);
            label$6:
            do {
                label$7:
                do {
                    if ((this._loadInt((_31_ + 16))) == 0) {
                        break label$7;
                    }
                    _30_ = -(this._loadFloat((_31_ + 24)));
                    break label$6;
                }
                while (false);
                _30_ = this._loadFloat((_31_ + 24));
            }
            while (false);
            this._storeFloat((_31_ + 44), _30_);
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 44));
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final float erfc2$2e$35(int _30_, float _31_)
    {
        int _32_ = 0;
        float _33_ = 0.0f;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeFloat((_32_ + 36), _31_);
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_32_ + 40))) & 4294967295L) > (1067450367 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_32_ + 44), (erfc1$2e$36((this._loadFloat((_32_ + 36))))));
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 32), (1.0f / ((_31_ = this._storeFloat((_32_ + 36), (Math.abs((this._loadFloat((_32_ + 36))))))) * _31_)));
            label$2:
            do {
                label$3:
                do {
                    if (((this._loadInt((_32_ + 40))) & 4294967295L) > (1077336940 & 4294967295L)) {
                        break label$3;
                    }
                    this._storeFloat((_32_ + 28), (((_31_ = this._loadFloat((_32_ + 32))) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * -9.814329f) + -81.28744f)) + -184.60509f)) + -162.39667f)) + -62.37533f)) + -10.558626f)) + -0.69385856f)) + -0.009864944f));
                    this._storeFloat((_32_ + 24), (((_31_ = this._loadFloat((_32_ + 32))) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * -0.060424414f) + 6.5702496f)) + 108.635f)) + 429.00815f)) + 645.38727f)) + 434.5659f)) + 137.65776f)) + 19.651272f)) + 1.0f));
                    break label$2;
                }
                while (false);
                this._storeFloat((_32_ + 28), (((_31_ = this._loadFloat((_32_ + 32))) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * -483.5192f) + -1025.0951f)) + -637.56647f)) + -160.63638f)) + -17.757956f)) + -0.79928327f)) + -0.009864943f));
                this._storeFloat((_32_ + 24), (((_31_ = this._loadFloat((_32_ + 32))) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * -22.440952f) + 474.52853f)) + 2553.0503f)) + 3199.8582f)) + 1536.7296f)) + 325.7925f)) + 30.33806f)) + 1.0f));
            }
            while (false);
            this._storeFloat((_32_ + 16), (this._loadFloat((_32_ + 36))));
            this._storeInt((_32_ + 8), ((this._storeInt((_32_ + 40), (this._loadInt((_32_ + 16))))) & -8192));
            this._storeFloat((_32_ + 44), (((expf((-0.5625f - ((_31_ = this._storeFloat((_32_ + 20), (this._loadFloat((_32_ + 8))))) * _31_)))) * (expf(((((_31_ = this._loadFloat((_32_ + 20))) - (_33_ = this._loadFloat((_32_ + 36)))) * (_31_ + _33_)) + ((this._loadFloat((_32_ + 28))) / (this._loadFloat((_32_ + 24)))))))) / (this._loadFloat((_32_ + 36)))));
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 44));
        this._storeInt((0 + 4), (_32_ + 48));
        return _31_;
    }

    public final float erfc1$2e$36(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 4), (((_30_ = this._storeFloat((_31_ + 8), ((Math.abs((this._storeFloat((_31_ + 12), _30_)))) - 1.0f))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -0.0021663755f) + 0.035478305f)) + -0.110894695f)) + 0.31834662f)) + -0.37220788f)) + 0.4148561f)) + -0.0023621186f));
        _30_ = this._storeFloat(_31_, (((_30_ = this._loadFloat((_31_ + 8))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 0.0119845f) + 0.013637084f)) + 0.12617122f)) + 0.071828656f)) + 0.54039794f)) + 0.10642088f)) + 1.0f));
        return (0.15493709f - ((this._loadFloat((_31_ + 4))) / _30_));
    }

    public final float erfcf(float _30_)
    {
        int _31_ = 0;
        float _temp$0 = 0.0f;
        float _temp$1 = 0.0f;
        float _temp$2 = 0.0f;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeFloat((_31_ + 8), (this._loadFloat((_31_ + 40))));
        this._storeInt((_31_ + 20), (this._loadInt((_31_ + 8))));
        this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 20))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 20))) & 2147483647))) & 4294967295L) < (2139095040 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_31_ + 44), (((float) ((this._loadInt((_31_ + 16))) << 1)) + (1.0f / (this._loadFloat((_31_ + 40))))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            label$6:
                            do {
                                if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1062731775 & 4294967295L)) {
                                    break label$6;
                                }
                                if (((this._loadInt((_31_ + 20))) & 4294967295L) > (595591167 & 4294967295L)) {
                                    break label$5;
                                }
                                this._storeFloat((_31_ + 44), (1.0f - (this._loadFloat((_31_ + 40)))));
                                break label$0;
                            }
                            while (false);
                            if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1105199103 & 4294967295L)) {
                                break label$4;
                            }
                            if ((this._loadInt((_31_ + 16))) == 0) {
                                break label$3;
                            }
                            this._storeFloat((_31_ + 44), (2.0f - (erfc2$2e$35((this._loadInt((_31_ + 20))), (this._loadFloat((_31_ + 40)))))));
                            break label$0;
                        }
                        while (false);
                        this._storeFloat((_31_ + 36), (((_30_ = this._storeFloat((_31_ + 28), ((_30_ = this._loadFloat((_31_ + 40))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * -2.3763017E-5f) + -0.0057702702f)) + -0.02848175f)) + -0.3250421f)) + 0.12837917f));
                        _30_ = this._storeFloat((_31_ + 32), (((_30_ = this._loadFloat((_31_ + 28))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -3.9602282E-6f) + 1.3249474E-4f)) + 0.005081306f)) + 0.06502225f)) + 0.3979172f)) + 1.0f));
                        this._storeFloat((_31_ + 24), ((this._loadFloat((_31_ + 36))) / _30_));
                        label$7:
                        do {
                            if ((this._loadInt((_31_ + 16))) != 0) {
                                break label$7;
                            }
                            if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1048575999 & 4294967295L)) {
                                break label$2;
                            }
                        }
                        while (false);
                        this._storeFloat((_31_ + 44), (1.0f - ((_30_ = this._loadFloat((_31_ + 40))) + (_30_ * (this._loadFloat((_31_ + 24)))))));
                        break label$0;
                    }
                    while (false);
                    _temp$0 = 2.0f;
                    _temp$1 = 0.0f;
                    _temp$2 = ((this._loadInt((_31_ + 16))) != 0) ? _temp$0 : _temp$1;
                    this._storeFloat((_31_ + 44), _temp$2);
                    break label$0;
                }
                while (false);
                this._storeFloat((_31_ + 44), (erfc2$2e$35((this._loadInt((_31_ + 20))), (this._loadFloat((_31_ + 40))))));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 44), (0.5f - (((_30_ = this._loadFloat((_31_ + 40))) - 0.5f) + (_30_ * (this._loadFloat((_31_ + 24)))))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 44));
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final void erfl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (erf((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void erfcl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (erfc((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double exp(double _30_)
    {
        int _31_ = 0;
        long _32_ = 0L;
        int _33_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 96))) + 16), (this._storeDouble((_31_ + 80), _30_)));
        this._storeLong((_31_ + 28), ((_32_ = this._loadLong((_31_ + 16))) >>> 32L));
        this._storeLong((_31_ + 32), (_32_ >>> 63L));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 28), ((this._loadInt((_31_ + 28))) & 2147483647))) & 4294967295L) < (1082532651 & 4294967295L)) {
                    break label$1;
                }
                label$2:
                do {
                    if ((((__DOUBLE_BITS$2e$40((this._loadDouble((_31_ + 80))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                        break label$2;
                    }
                    this._storeDouble((_31_ + 88), (this._loadDouble((_31_ + 80))));
                    break label$0;
                }
                while (false);
                label$3:
                do {
                    if (((((_30_ = this._loadDouble((_31_ + 80))) <= 709.782712893384) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                        break label$3;
                    }
                    this._storeDouble((_31_ + 88), (this._storeDouble((_31_ + 80), ((this._loadDouble((_31_ + 80))) * 8.98846567431158E307))));
                    break label$0;
                }
                while (false);
                if (((((_30_ = this._loadDouble((_31_ + 80))) >= -708.3964185322641) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$1;
                }
                this._storeFloat((_31_ + 12), ((float) (-1.401298464324817E-45 / (this._loadDouble((_31_ + 80))))));
                if (((((_30_ = this._loadDouble((_31_ + 80))) >= -745.1332191019411) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$1;
                }
                this._storeLong((_31_ + 88), 0L);
                break label$0;
            }
            while (false);
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        label$7:
                        do {
                            label$8:
                            do {
                                if (((this._loadInt((_31_ + 28))) & 4294967295L) < (1071001155 & 4294967295L)) {
                                    break label$8;
                                }
                                if (((this._loadInt((_31_ + 28))) & 4294967295L) < (1072734898 & 4294967295L)) {
                                    break label$7;
                                }
                                this._storeInt((_31_ + 36), (_truncateDoubleToSignedInteger((((this._loadDouble((_31_ + 80))) * 1.4426950408889634) + (this._loadDouble((((this._loadInt((_31_ + 32))) << 3) + 5232)))))));
                                break label$6;
                            }
                            while (false);
                            if (((this._loadInt((_31_ + 28))) & 4294967295L) < (1043333121 & 4294967295L)) {
                                break label$4;
                            }
                            this._storeInt((_31_ + 36), 0);
                            this._storeDouble((_31_ + 72), (this._loadDouble((_31_ + 80))));
                            this._storeLong((_31_ + 64), 0L);
                            break label$5;
                        }
                        while (false);
                        this._storeInt((_31_ + 36), ((1 - (_33_ = this._loadInt((_31_ + 32)))) - _33_));
                    }
                    while (false);
                    this._storeDouble((_31_ + 72), ((this._loadDouble((_31_ + 80))) + (((double) (this._loadInt((_31_ + 36)))) * -0.6931471803691238)));
                    _30_ = this._storeDouble((_31_ + 64), (((double) (this._loadInt((_31_ + 36)))) * 1.9082149292705877E-10));
                    this._storeDouble((_31_ + 80), ((this._loadDouble((_31_ + 72))) - _30_));
                }
                while (false);
                _30_ = this._storeDouble((_31_ + 48), ((_30_ = this._loadDouble((_31_ + 80))) * _30_));
                this._storeDouble((_31_ + 40), ((((((_30_ = this._storeDouble((_31_ + 56), ((this._loadDouble((_31_ + 80))) - (_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 4.1381367970572385E-8) + -1.6533902205465252E-6)) + 6.613756321437934E-5)) + -0.0027777777777015593)) + 0.16666666666666602))))) * (this._loadDouble((_31_ + 80)))) / (2.0 - _30_)) - (this._loadDouble((_31_ + 64)))) + (this._loadDouble((_31_ + 72)))) + 1.0));
                label$9:
                do {
                    if ((this._loadInt((_31_ + 36))) == 0) {
                        break label$9;
                    }
                    this._storeDouble((_31_ + 88), (scalbn((this._loadDouble((_31_ + 40))), (this._loadInt((_31_ + 36))))));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 88), (this._loadDouble((_31_ + 40))));
                break label$0;
            }
            while (false);
            this._storeDouble(_31_, ((this._loadDouble((_31_ + 80))) + 8.98846567431158E307));
            this._storeDouble((_31_ + 88), ((this._loadDouble((_31_ + 80))) + 1.0));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 88));
        this._storeInt((0 + 4), (_31_ + 96));
        return _30_;
    }

    public final int __FLOAT_BITS$2e$39(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$40(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final double exp10(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 16), (modf((this._storeDouble((_31_ + 32), _30_)), (_31_ + 24))));
        this._storeDouble((_31_ + 8), (this._loadDouble((_31_ + 24))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((((this._loadLong((_31_ + 8))) >>> 52L) & 2047L) & 4294967295L) > (1026L & 4294967295L)) {
                        break label$2;
                    }
                    if ((this._loadDouble((_31_ + 16))) == 0.0) {
                        break label$1;
                    }
                    this._storeDouble((_31_ + 40), ((this._storeDouble((_31_ + 16), (exp2(((this._loadDouble((_31_ + 16))) * 3.321928094887362))))) * (this._loadDouble((((_truncateDoubleToSignedInteger((this._loadDouble((_31_ + 24))))) << 3) + 5368)))));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 40), (pow(10.0, (this._loadDouble((_31_ + 32))))));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 40), (this._loadDouble((((_truncateDoubleToSignedInteger((this._loadDouble((_31_ + 24))))) << 3) + 5368))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 40));
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final float exp10f(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 16), (modff((this._storeFloat((_31_ + 24), _30_)), (_31_ + 20))));
        this._storeFloat((_31_ + 8), (this._loadFloat((_31_ + 20))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((((this._loadInt((_31_ + 8))) >>> 23) & 255) & 4294967295L) > (129 & 4294967295L)) {
                        break label$2;
                    }
                    if ((this._loadFloat((_31_ + 16))) == 0.0f) {
                        break label$1;
                    }
                    this._storeFloat((_31_ + 28), ((this._storeFloat((_31_ + 16), (exp2f(((this._loadFloat((_31_ + 16))) * 3.321928f))))) * (this._loadFloat((((_truncateFloatToSignedInteger((this._loadFloat((_31_ + 20))))) << 2) + 5532)))));
                    break label$0;
                }
                while (false);
                this._storeFloat((_31_ + 28), ((float) (exp2((((double) (this._loadFloat((_31_ + 24)))) * 3.321928094887362)))));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 28), (this._loadFloat((((_truncateFloatToSignedInteger((this._loadFloat((_31_ + 20))))) << 2) + 5532))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final void exp10l(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (exp10((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double exp2(double _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 24), (this._storeDouble((_31_ + 64), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            if (((this._storeInt((_31_ + 36), ((int) ((this._loadLong((_31_ + 28))) & 2147483647L)))) & 4294967295L) < (1083174912 & 4294967295L)) {
                                break label$4;
                            }
                            label$5:
                            do {
                                if (((this._loadInt((_31_ + 36))) & 4294967295L) < (1083179008 & 4294967295L)) {
                                    break label$5;
                                }
                                if (((this._loadLong((_31_ + 24))) >>> 63L) == 0L) {
                                    break label$1;
                                }
                            }
                            while (false);
                            if (((this._loadInt((_31_ + 36))) & 4294967295L) < (2146435072 & 4294967295L)) {
                                break label$3;
                            }
                            this._storeDouble((_31_ + 72), (-1.0 / (this._loadDouble((_31_ + 64)))));
                            break label$0;
                        }
                        while (false);
                        if (((this._loadInt((_31_ + 36))) & 4294967295L) > (1016070143 & 4294967295L)) {
                            break label$2;
                        }
                        this._storeDouble((_31_ + 72), ((this._loadDouble((_31_ + 64))) + 1.0));
                        break label$0;
                    }
                    while (false);
                    if (((this._loadLong((_31_ + 24))) >>> 63L) == 0) {
                        break label$2;
                    }
                    label$6:
                    do {
                        label$7:
                        do {
                            if ((this._loadDouble((_31_ + 64))) <= -1075.0) {
                                break label$7;
                            }
                            if ((((_30_ = this._loadDouble((_31_ + 64))) - 4.503599627370496E15) + 4.503599627370496E15) == _30_) {
                                break label$6;
                            }
                        }
                        while (false);
                        this._storeFloat((_31_ + 12), ((float) (-1.401298464324817E-45 / (this._loadDouble((_31_ + 64))))));
                    }
                    while (false);
                    if (((((_30_ = this._loadDouble((_31_ + 64))) > -1075.0) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                        break label$2;
                    }
                    this._storeLong((_31_ + 72), 0L);
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 24), ((this._loadDouble((_31_ + 64))) + 2.6388279066624E13));
                this._storeInt((_31_ + 16), ((this._storeInt((_31_ + 16), ((this._storeInt((_31_ + 32), ((this._storeInt((_31_ + 32), (this._loadInt((_31_ + 24))))) + 128))) & -256))) / 256));
                this._storeInt((_31_ + 32), (this._loadInt((_31_ + 32))));
                _30_ = this._storeDouble((_31_ + 24), ((this._loadDouble((_31_ + 24))) - 2.6388279066624E13));
                this._storeDouble((_31_ + 40), ((this._loadDouble((_31_ + 64))) - _30_));
                this._storeDouble((_31_ + 48), (this._loadDouble((((this._loadInt((_31_ + 32))) << 4) + 5568))));
                _30_ = this._storeDouble((_31_ + 40), ((this._loadDouble((_31_ + 40))) - (this._loadDouble((((this._loadInt((_31_ + 32))) << 4) + 5576)))));
                this._storeDouble((_31_ + 72), (scalbn((this._storeDouble((_31_ + 56), ((_32_ = this._loadDouble((_31_ + 48))) + ((_32_ * _30_) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 0.0013333559164630223) + 0.009618129842126066)) + 0.0555041086648214)) + 0.2402265069591)) + 0.6931471805599453))))), (this._loadInt((_31_ + 16))))));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 72), (this._storeDouble((_31_ + 64), ((this._loadDouble((_31_ + 64))) * 8.98846567431158E307))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 72));
        this._storeInt((0 + 4), (_31_ + 80));
        return _30_;
    }

    public final float exp2f(float _30_)
    {
        double _31_ = 0.0;
        double _32_ = 0.0;
        int _33_ = 0;
        this._storeFloat(((_33_ = (this._loadInt((0 + 4))) - 64) + 24), (this._storeFloat((_33_ + 56), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 24))) & 2147483647))) & 4294967295L) < (1123811329 & 4294967295L)) {
                        break label$2;
                    }
                    if (((this._loadInt((_33_ + 24))) & 4294967295L) < (1124073472 & 4294967295L)) {
                        break label$1;
                    }
                    if ((this._loadInt((_33_ + 24))) < 0) {
                        break label$1;
                    }
                    this._storeFloat((_33_ + 60), (this._storeFloat((_33_ + 56), ((this._loadFloat((_33_ + 56))) * 1.7014118E38f))));
                    return (this._loadFloat((_33_ + 60)));
                }
                while (false);
                if (((this._loadInt((_33_ + 12))) & 4294967295L) > (855638016 & 4294967295L)) {
                    break label$0;
                }
                this._storeFloat((_33_ + 60), ((this._loadFloat((_33_ + 56))) + 1.0f));
                return (this._loadFloat((_33_ + 60)));
            }
            while (false);
            if ((this._loadInt((_33_ + 24))) > -1) {
                break label$0;
            }
            label$3:
            do {
                label$4:
                do {
                    if (((this._loadInt((_33_ + 24))) & 4294967295L) > (-1021968385 & 4294967295L)) {
                        break label$4;
                    }
                    if ((this._loadInt((_33_ + 24))) == 0) {
                        break label$3;
                    }
                }
                while (false);
                this._storeFloat(_33_, (-1.4E-45f / (this._loadFloat((_33_ + 56)))));
            }
            while (false);
            if (((this._loadInt((_33_ + 24))) & 4294967295L) < (-1021968384 & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_33_ + 60), 0);
            return (this._loadFloat((_33_ + 60)));
        }
        while (false);
        this._storeFloat((_33_ + 24), ((this._loadFloat((_33_ + 56))) + 786432.0f));
        this._storeLong((_33_ + 16), ((((this._storeInt((_33_ + 4), ((this._storeInt((_33_ + 8), ((this._storeInt((_33_ + 8), (this._loadInt((_33_ + 24))))) + 8))) >>> 4))) + 1023) & 4294967295L) << 52L));
        this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) & 15));
        _30_ = this._storeFloat((_33_ + 24), ((this._loadFloat((_33_ + 24))) - 786432.0f));
        this._storeDouble((_33_ + 32), ((double) ((this._loadFloat((_33_ + 56))) - _30_)));
        _31_ = this._storeDouble((_33_ + 48), ((this._storeDouble((_33_ + 40), (this._loadDouble((((this._loadInt((_33_ + 8))) << 3) + 9664))))) * (this._loadDouble((_33_ + 32)))));
        this._storeFloat((_33_ + 60), ((float) ((this._storeDouble((_33_ + 40), (((this._loadDouble((_33_ + 40))) + (_31_ * (((_32_ = this._loadDouble((_33_ + 32))) * 0.24022650718688965) + 0.6931471824645996))) + ((_31_ * (_32_ * _32_)) * ((_32_ * 0.009618354961276054) + 0.055505409836769104))))) * (this._loadDouble((_33_ + 16))))));
        return (this._loadFloat((_33_ + 60)));
    }

    public final void exp2l(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (exp2((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int __expand_heap(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 20), (this._loadInt((this._storeInt((_31_ + 24), _30_)))))) & 4294967295L) < (2147479552 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((__errno_location()), 12);
                this._storeInt((_31_ + 28), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 20), ((_30_ = this._loadInt((_31_ + 20))) + ((0 - _30_) & 4095)));
            label$2:
            do {
                if ((this._loadInt((0 + 9792))) != 0) {
                    break label$2;
                }
                this._storeInt((0 + 9792), ((_30_ = this._storeInt((0 + 9792), (this.__syscall1.invoke(45, 0)))) + ((0 - _30_) & 4095)));
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) >= (((this._loadInt((0 + 9792))) ^ -1) & 4294967295L)) {
                    break label$3;
                }
                if ((traverses_stack_p((_30_ = this._loadInt((0 + 9792))), (_30_ + (this._loadInt((_31_ + 20)))))) != 0) {
                    break label$3;
                }
                if ((this.__syscall1.invoke(45, ((this._loadInt((0 + 9792))) + (this._loadInt((_31_ + 20)))))) != ((this._loadInt((0 + 9792))) + (this._loadInt((_31_ + 20))))) {
                    break label$3;
                }
                this._storeInt((_31_ + 28), ((this._storeInt((0 + 9792), ((this._storeInt((this._loadInt((_31_ + 24))), (this._loadInt((_31_ + 20))))) + (this._loadInt((0 + 9792)))))) - (this._loadInt((_31_ + 20)))));
                break label$0;
            }
            while (false);
            _30_ = this._storeInt((_31_ + 16), (4096 << ((this._loadInt((0 + 9796))) >>> 1)));
            label$4:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) >= (_30_ & 4294967295L)) {
                    break label$4;
                }
                this._storeInt((_31_ + 20), (this._loadInt((_31_ + 16))));
            }
            while (false);
            label$5:
            do {
                if ((this._storeInt((_31_ + 12), (this.__mmap.invoke(0, (this._loadInt((_31_ + 20))), 3, 34, -1, 0L)))) == -1) {
                    break label$5;
                }
                this._storeInt((this._loadInt((_31_ + 24))), (this._loadInt((_31_ + 20))));
                this._storeInt((0 + 9796), ((this._loadInt((0 + 9796))) + 1));
                this._storeInt((_31_ + 28), (this._loadInt((_31_ + 12))));
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 28), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final int traverses_stack_p(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        this._storeInt((_32_ + 16), 8388608);
        _31_ = 0;
        label$0:
        do {
            if (((this._storeInt((_32_ + 8), (this._loadInt((0 + 12956))))) & 4294967295L) < (8388609 & 4294967295L)) {
                break label$0;
            }
            _31_ = (this._loadInt((_32_ + 8))) + -8388608;
        }
        while (false);
        this._storeInt((_32_ + 12), _31_);
        label$1:
        do {
            if (((this._loadInt((_32_ + 20))) & 4294967295L) <= (_31_ & 4294967295L)) {
                break label$1;
            }
            if (((this._loadInt((_32_ + 24))) & 4294967295L) >= ((this._loadInt((_32_ + 8))) & 4294967295L)) {
                break label$1;
            }
            this._storeInt((_32_ + 28), 1);
            return (this._loadInt((_32_ + 28)));
        }
        while (false);
        this._storeInt((_32_ + 8), (_32_ + 8));
        _31_ = 0;
        label$2:
        do {
            if (((_32_ + 8) & 4294967295L) < (8388609 & 4294967295L)) {
                break label$2;
            }
            _31_ = (this._loadInt((_32_ + 8))) + -8388608;
        }
        while (false);
        this._storeInt((_32_ + 12), _31_);
        label$3:
        do {
            if (((this._loadInt((_32_ + 20))) & 4294967295L) <= (_31_ & 4294967295L)) {
                break label$3;
            }
            if (((this._loadInt((_32_ + 24))) & 4294967295L) >= ((this._loadInt((_32_ + 8))) & 4294967295L)) {
                break label$3;
            }
            this._storeInt((_32_ + 28), 1);
            return (this._loadInt((_32_ + 28)));
        }
        while (false);
        this._storeInt((_32_ + 28), 0);
        return (this._loadInt((_32_ + 28)));
    }

    public final float expf(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 16), (this._storeFloat((_32_ + 56), _30_)));
        this._storeInt((_32_ + 28), ((this._storeInt((_32_ + 24), (this._loadInt((_32_ + 16))))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) & 2147483647))) & 4294967295L) < (1118743632 & 4294967295L)) {
                        break label$2;
                    }
                    label$3:
                    do {
                        if (((this._loadInt((_32_ + 24))) & 4294967295L) < (1118925336 & 4294967295L)) {
                            break label$3;
                        }
                        if ((this._loadInt((_32_ + 28))) == 0) {
                            break label$1;
                        }
                    }
                    while (false);
                    if ((this._loadInt((_32_ + 28))) == 0) {
                        break label$2;
                    }
                    this._storeFloat((_32_ + 12), (-1.4E-45f / (this._loadFloat((_32_ + 56)))));
                    if (((this._loadInt((_32_ + 24))) & 4294967295L) < (1120924085 & 4294967295L)) {
                        break label$2;
                    }
                    this._storeInt((_32_ + 60), 0);
                    break label$0;
                }
                while (false);
                label$4:
                do {
                    label$5:
                    do {
                        label$6:
                        do {
                            label$7:
                            do {
                                label$8:
                                do {
                                    if (((this._loadInt((_32_ + 24))) & 4294967295L) < (1051816473 & 4294967295L)) {
                                        break label$8;
                                    }
                                    if (((this._loadInt((_32_ + 24))) & 4294967295L) < (1065686419 & 4294967295L)) {
                                        break label$7;
                                    }
                                    this._storeInt((_32_ + 32), (_truncateFloatToSignedInteger((((this._loadFloat((_32_ + 56))) * 1.442695f) + (this._loadFloat((((this._loadInt((_32_ + 28))) << 2) + 9800)))))));
                                    break label$6;
                                }
                                while (false);
                                if (((this._loadInt((_32_ + 24))) & 4294967295L) < (956301313 & 4294967295L)) {
                                    break label$4;
                                }
                                _31_ = this._storeInt((_32_ + 32), 0);
                                this._storeFloat((_32_ + 52), (this._loadFloat((_32_ + 56))));
                                this._storeInt((_32_ + 48), _31_);
                                break label$5;
                            }
                            while (false);
                            this._storeInt((_32_ + 32), ((1 - (_31_ = this._loadInt((_32_ + 28)))) - _31_));
                        }
                        while (false);
                        this._storeFloat((_32_ + 52), ((this._loadFloat((_32_ + 56))) + (((float) (this._loadInt((_32_ + 32)))) * -0.69314575f)));
                        _30_ = this._storeFloat((_32_ + 48), (((float) (this._loadInt((_32_ + 32)))) * 1.4286068E-6f));
                        this._storeFloat((_32_ + 56), ((this._loadFloat((_32_ + 52))) - _30_));
                    }
                    while (false);
                    _30_ = this._storeFloat((_32_ + 40), ((_30_ = this._loadFloat((_32_ + 56))) * _30_));
                    this._storeFloat((_32_ + 36), ((((((_30_ = this._storeFloat((_32_ + 44), ((this._loadFloat((_32_ + 56))) - (_30_ * ((_30_ * -0.0027667333f) + 0.16666625f))))) * (this._loadFloat((_32_ + 56)))) / (2.0f - _30_)) - (this._loadFloat((_32_ + 48)))) + (this._loadFloat((_32_ + 52)))) + 1.0f));
                    label$9:
                    do {
                        if ((this._loadInt((_32_ + 32))) == 0) {
                            break label$9;
                        }
                        this._storeFloat((_32_ + 60), (scalbnf((this._loadFloat((_32_ + 36))), (this._loadInt((_32_ + 32))))));
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((_32_ + 60), (this._loadFloat((_32_ + 36))));
                    break label$0;
                }
                while (false);
                this._storeFloat((_32_ + 8), ((this._loadFloat((_32_ + 56))) + 1.7014118E38f));
                this._storeFloat((_32_ + 60), ((this._loadFloat((_32_ + 56))) + 1.0f));
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 60), (this._storeFloat((_32_ + 56), ((this._loadFloat((_32_ + 56))) * 1.7014118E38f))));
        }
        while (false);
        _30_ = this._loadFloat((_32_ + 60));
        this._storeInt((0 + 4), (_32_ + 64));
        return _30_;
    }

    public final void expl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (exp((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double expm1(double _30_)
    {
        int _31_ = 0;
        double _temp$0 = 0.0;
        double _temp$1 = 0.0;
        double _temp$2 = 0.0;
        int _temp$3 = 0;
        double _temp$4 = 0.0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 128))) + 24), (this._storeDouble((_31_ + 112), _30_)));
        this._storeLong((_31_ + 20), ((this._loadLong((_31_ + 28))) & 2147483647L));
        this._storeLong((_31_ + 12), ((this._loadLong((_31_ + 24))) >>> 63L));
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1078159482 & 4294967295L)) {
                    break label$1;
                }
                label$2:
                do {
                    if ((((__DOUBLE_BITS$2e$51((this._loadDouble((_31_ + 112))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                        break label$2;
                    }
                    this._storeDouble((_31_ + 120), (this._loadDouble((_31_ + 112))));
                    break label$0;
                }
                while (false);
                label$3:
                do {
                    if ((this._loadInt((_31_ + 12))) == 0) {
                        break label$3;
                    }
                    this._storeLong((_31_ + 120), -4616189618054758400L);
                    break label$0;
                }
                while (false);
                if (((((_30_ = this._loadDouble((_31_ + 112))) <= 709.782712893384) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$1;
                }
                this._storeDouble((_31_ + 120), (this._storeDouble((_31_ + 112), ((this._loadDouble((_31_ + 112))) * 8.98846567431158E307))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        label$7:
                        do {
                            label$8:
                            do {
                                label$9:
                                do {
                                    if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1071001155 & 4294967295L)) {
                                        break label$9;
                                    }
                                    if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1072734897 & 4294967295L)) {
                                        break label$8;
                                    }
                                    if ((this._loadInt((_31_ + 12))) == 0) {
                                        break label$6;
                                    }
                                    this._storeDouble((_31_ + 96), ((this._loadDouble((_31_ + 112))) + 0.6931471803691238));
                                    this._storeLong((_31_ + 88), -4761929956433773450L);
                                    this._storeInt((_31_ + 16), -1);
                                    break label$5;
                                }
                                while (false);
                                if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1016070143 & 4294967295L)) {
                                    break label$7;
                                }
                                label$10:
                                do {
                                    if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1048575 & 4294967295L)) {
                                        break label$10;
                                    }
                                    this._storeFloat((_31_ + 8), ((float) (this._loadDouble((_31_ + 112)))));
                                }
                                while (false);
                                this._storeDouble((_31_ + 120), (this._loadDouble((_31_ + 112))));
                                break label$0;
                            }
                            while (false);
                            _temp$0 = -0.5;
                            _temp$1 = 0.5;
                            _temp$2 = ((this._loadInt((_31_ + 12))) != 0) ? _temp$0 : _temp$1;
                            _temp$2 = ((this._loadDouble((_31_ + 112))) * 1.4426950408889634) + _temp$2;
                            _temp$3 = _truncateDoubleToSignedInteger(_temp$2);
                            _temp$3 = this._storeInt((_31_ + 16), _temp$3);
                            _temp$4 = (double) _temp$3;
                            _temp$4 = this._storeDouble((_31_ + 72), _temp$4);
                            _30_ = _temp$4;
                            this._storeDouble((_31_ + 96), ((this._loadDouble((_31_ + 112))) + (_30_ * -0.6931471803691238)));
                            this._storeDouble((_31_ + 88), ((this._loadDouble((_31_ + 72))) * 1.9082149292705877E-10));
                            break label$5;
                        }
                        while (false);
                        this._storeInt((_31_ + 16), 0);
                        break label$4;
                    }
                    while (false);
                    this._storeDouble((_31_ + 96), ((this._loadDouble((_31_ + 112))) + -0.6931471803691238));
                    this._storeLong((_31_ + 88), 4461442080421002358L);
                    this._storeInt((_31_ + 16), 1);
                }
                while (false);
                _30_ = this._storeDouble((_31_ + 112), ((this._loadDouble((_31_ + 96))) - (this._loadDouble((_31_ + 88)))));
                this._storeDouble((_31_ + 80), (((this._loadDouble((_31_ + 96))) - _30_) - (this._loadDouble((_31_ + 88)))));
            }
            while (false);
            _30_ = this._storeDouble((_31_ + 72), (3.0 - ((this._storeDouble((_31_ + 40), (((_30_ = this._storeDouble((_31_ + 56), ((this._storeDouble((_31_ + 48), ((this._loadDouble((_31_ + 112))) * 0.5))) * (this._loadDouble((_31_ + 112)))))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -2.0109921818362437E-7) + 4.008217827329362E-6)) + -7.93650757867488E-5)) + 0.0015873015872548146)) + -0.03333333333333313)) + 1.0))) * (this._loadDouble((_31_ + 48))))));
            this._storeDouble((_31_ + 64), ((this._loadDouble((_31_ + 56))) * (((this._loadDouble((_31_ + 40))) - _30_) / (6.0 - (_30_ * (this._loadDouble((_31_ + 112))))))));
            label$11:
            do {
                label$12:
                do {
                    label$13:
                    do {
                        label$14:
                        do {
                            label$15:
                            do {
                                label$16:
                                do {
                                    label$17:
                                    do {
                                        if ((this._loadInt((_31_ + 16))) == 0) {
                                            break label$17;
                                        }
                                        this._storeDouble((_31_ + 64), ((this._storeDouble((_31_ + 64), (((this._loadDouble((_31_ + 112))) * ((this._loadDouble((_31_ + 64))) - (_30_ = this._loadDouble((_31_ + 80))))) - _30_))) - (this._loadDouble((_31_ + 56)))));
                                        if ((this._loadInt((_31_ + 16))) == -1) {
                                            break label$16;
                                        }
                                        if ((this._loadInt((_31_ + 16))) != 1) {
                                            break label$15;
                                        }
                                        if (((((_30_ = this._loadDouble((_31_ + 112))) >= -0.25) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                                            break label$14;
                                        }
                                        this._storeDouble((_31_ + 120), (((this._loadDouble((_31_ + 64))) - ((this._loadDouble((_31_ + 112))) + 0.5)) * -2.0));
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeDouble((_31_ + 120), ((_30_ = this._loadDouble((_31_ + 112))) - ((_30_ * (this._loadDouble((_31_ + 64)))) - (this._loadDouble((_31_ + 56))))));
                                    break label$0;
                                }
                                while (false);
                                this._storeDouble((_31_ + 120), ((((this._loadDouble((_31_ + 112))) - (this._loadDouble((_31_ + 64)))) * 0.5) - 0.5));
                                break label$0;
                            }
                            while (false);
                            this._storeLong((_31_ + 24), ((((this._loadInt((_31_ + 16))) + 1023) & 4294967295L) << 52L));
                            this._storeDouble((_31_ + 32), (this._loadDouble((_31_ + 24))));
                            label$18:
                            do {
                                if ((this._loadInt((_31_ + 16))) < 0) {
                                    break label$18;
                                }
                                if ((this._loadInt((_31_ + 16))) < 57) {
                                    break label$11;
                                }
                            }
                            while (false);
                            this._storeDouble((_31_ + 104), (((this._loadDouble((_31_ + 112))) - (this._loadDouble((_31_ + 64)))) + 1.0));
                            if ((this._loadInt((_31_ + 16))) != 1024) {
                                break label$13;
                            }
                            this._storeDouble((_31_ + 104), (((_30_ = this._loadDouble((_31_ + 104))) + _30_) * 8.98846567431158E307));
                            break label$12;
                        }
                        while (false);
                        this._storeDouble((_31_ + 120), (((_30_ = (this._loadDouble((_31_ + 112))) - (this._loadDouble((_31_ + 64)))) + _30_) + 1.0));
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_31_ + 104), ((this._loadDouble((_31_ + 104))) * (this._loadDouble((_31_ + 32)))));
                }
                while (false);
                this._storeDouble((_31_ + 120), ((this._loadDouble((_31_ + 104))) + -1.0));
                break label$0;
            }
            while (false);
            this._storeLong((_31_ + 24), (((1023 - (this._loadInt((_31_ + 16)))) & 4294967295L) << 52L));
            label$19:
            do {
                label$20:
                do {
                    if ((this._loadInt((_31_ + 16))) > 19) {
                        break label$20;
                    }
                    this._storeDouble((_31_ + 104), ((((this._loadDouble((_31_ + 112))) - (this._loadDouble((_31_ + 64)))) + (1.0 - (this._loadDouble((_31_ + 24))))) * (this._loadDouble((_31_ + 32)))));
                    break label$19;
                }
                while (false);
                this._storeDouble((_31_ + 104), ((((this._loadDouble((_31_ + 112))) - ((this._loadDouble((_31_ + 64))) + (this._loadDouble((_31_ + 24))))) + 1.0) * (this._loadDouble((_31_ + 32)))));
            }
            while (false);
            this._storeDouble((_31_ + 120), (this._loadDouble((_31_ + 104))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 120));
        this._storeInt((0 + 4), (_31_ + 128));
        return _30_;
    }

    public final int __FLOAT_BITS$2e$50(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$51(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float expm1f(float _30_)
    {
        int _31_ = 0;
        float _temp$0 = 0.0f;
        float _temp$1 = 0.0f;
        float _temp$2 = 0.0f;
        int _temp$3 = 0;
        float _temp$4 = 0.0f;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 80) + 24), (this._storeFloat((_31_ + 72), _30_)));
        this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 24))) & 2147483647));
        this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 24))) >>> 31));
        label$0:
        do {
            if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1100331076 & 4294967295L)) {
                break label$0;
            }
            label$1:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (2139095041 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_31_ + 76), (this._loadFloat((_31_ + 72))));
                return (this._loadFloat((_31_ + 76)));
            }
            while (false);
            label$2:
            do {
                if ((this._loadInt((_31_ + 12))) == 0) {
                    break label$2;
                }
                this._storeInt((_31_ + 76), -1082130432);
                return (this._loadFloat((_31_ + 76)));
            }
            while (false);
            if (((((_30_ = this._loadFloat((_31_ + 72))) <= 88.72168f) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                break label$0;
            }
            this._storeFloat((_31_ + 76), (this._storeFloat((_31_ + 72), ((this._loadFloat((_31_ + 72))) * 1.7014118E38f))));
            return (this._loadFloat((_31_ + 76)));
        }
        while (false);
        label$3:
        do {
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        label$7:
                        do {
                            label$8:
                            do {
                                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1051816473 & 4294967295L)) {
                                    break label$8;
                                }
                                if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1065686417 & 4294967295L)) {
                                    break label$7;
                                }
                                if ((this._loadInt((_31_ + 12))) == 0) {
                                    break label$5;
                                }
                                this._storeFloat((_31_ + 64), ((this._loadFloat((_31_ + 72))) + 0.6931381f));
                                this._storeInt((_31_ + 60), -1223165999);
                                this._storeInt((_31_ + 16), -1);
                                break label$4;
                            }
                            while (false);
                            if (((this._loadInt((_31_ + 20))) & 4294967295L) > (855638015 & 4294967295L)) {
                                break label$6;
                            }
                            label$9:
                            do {
                                if (((this._loadInt((_31_ + 20))) & 4294967295L) > (8388607 & 4294967295L)) {
                                    break label$9;
                                }
                                this._storeFloat((_31_ + 8), ((_30_ = this._loadFloat((_31_ + 72))) * _30_));
                            }
                            while (false);
                            this._storeFloat((_31_ + 76), (this._loadFloat((_31_ + 72))));
                            return (this._loadFloat((_31_ + 76)));
                        }
                        while (false);
                        _temp$0 = -0.5f;
                        _temp$1 = 0.5f;
                        _temp$2 = ((this._loadInt((_31_ + 12))) != 0) ? _temp$0 : _temp$1;
                        _temp$2 = ((this._loadFloat((_31_ + 72))) * 1.442695f) + _temp$2;
                        _temp$3 = _truncateFloatToSignedInteger(_temp$2);
                        _temp$3 = this._storeInt((_31_ + 16), _temp$3);
                        _temp$4 = (float) _temp$3;
                        _temp$4 = this._storeFloat((_31_ + 52), _temp$4);
                        _30_ = _temp$4;
                        this._storeFloat((_31_ + 64), ((this._loadFloat((_31_ + 72))) + (_30_ * -0.6931381f)));
                        this._storeFloat((_31_ + 60), ((this._loadFloat((_31_ + 52))) * 9.058001E-6f));
                        break label$4;
                    }
                    while (false);
                    this._storeInt((_31_ + 16), 0);
                    break label$3;
                }
                while (false);
                this._storeFloat((_31_ + 64), ((this._loadFloat((_31_ + 72))) + -0.6931381f));
                this._storeInt((_31_ + 60), 924317649);
                this._storeInt((_31_ + 16), 1);
            }
            while (false);
            _30_ = this._storeFloat((_31_ + 72), ((this._loadFloat((_31_ + 64))) - (this._loadFloat((_31_ + 60)))));
            this._storeFloat((_31_ + 56), (((this._loadFloat((_31_ + 64))) - _30_) - (this._loadFloat((_31_ + 60)))));
        }
        while (false);
        _30_ = this._storeFloat((_31_ + 52), (3.0f - ((this._storeFloat((_31_ + 36), (((_30_ = this._storeFloat((_31_ + 44), ((this._storeFloat((_31_ + 40), ((this._loadFloat((_31_ + 72))) * 0.5f))) * (this._loadFloat((_31_ + 72)))))) * ((_30_ * 0.001580717f) + -0.033333212f)) + 1.0f))) * (this._loadFloat((_31_ + 40))))));
        this._storeFloat((_31_ + 48), ((this._loadFloat((_31_ + 44))) * (((this._loadFloat((_31_ + 36))) - _30_) / (6.0f - (_30_ * (this._loadFloat((_31_ + 72))))))));
        label$10:
        do {
            label$11:
            do {
                label$12:
                do {
                    label$13:
                    do {
                        label$14:
                        do {
                            label$15:
                            do {
                                label$16:
                                do {
                                    if ((this._loadInt((_31_ + 16))) == 0) {
                                        break label$16;
                                    }
                                    this._storeFloat((_31_ + 48), ((this._storeFloat((_31_ + 48), (((this._loadFloat((_31_ + 72))) * ((this._loadFloat((_31_ + 48))) - (_30_ = this._loadFloat((_31_ + 56))))) - _30_))) - (this._loadFloat((_31_ + 44)))));
                                    if ((this._loadInt((_31_ + 16))) == -1) {
                                        break label$15;
                                    }
                                    if ((this._loadInt((_31_ + 16))) != 1) {
                                        break label$14;
                                    }
                                    if (((((_30_ = this._loadFloat((_31_ + 72))) >= -0.25f) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                                        break label$13;
                                    }
                                    this._storeFloat((_31_ + 76), (((this._loadFloat((_31_ + 48))) - ((this._loadFloat((_31_ + 72))) + 0.5f)) * -2.0f));
                                    return (this._loadFloat((_31_ + 76)));
                                }
                                while (false);
                                this._storeFloat((_31_ + 76), ((_30_ = this._loadFloat((_31_ + 72))) - ((_30_ * (this._loadFloat((_31_ + 48)))) - (this._loadFloat((_31_ + 44))))));
                                return (this._loadFloat((_31_ + 76)));
                            }
                            while (false);
                            this._storeFloat((_31_ + 76), ((((this._loadFloat((_31_ + 72))) - (this._loadFloat((_31_ + 48)))) * 0.5f) - 0.5f));
                            return (this._loadFloat((_31_ + 76)));
                        }
                        while (false);
                        this._storeInt((_31_ + 24), (((this._loadInt((_31_ + 16))) << 23) + 1065353216));
                        this._storeFloat((_31_ + 32), (this._loadFloat((_31_ + 24))));
                        label$17:
                        do {
                            if ((this._loadInt((_31_ + 16))) < 0) {
                                break label$17;
                            }
                            if ((this._loadInt((_31_ + 16))) < 57) {
                                break label$10;
                            }
                        }
                        while (false);
                        this._storeFloat((_31_ + 68), (((this._loadFloat((_31_ + 72))) - (this._loadFloat((_31_ + 48)))) + 1.0f));
                        if ((this._loadInt((_31_ + 16))) != 128) {
                            break label$12;
                        }
                        this._storeFloat((_31_ + 68), (((_30_ = this._loadFloat((_31_ + 68))) + _30_) * 1.7014118E38f));
                        break label$11;
                    }
                    while (false);
                    this._storeFloat((_31_ + 76), (((_30_ = (this._loadFloat((_31_ + 72))) - (this._loadFloat((_31_ + 48)))) + _30_) + 1.0f));
                    return (this._loadFloat((_31_ + 76)));
                }
                while (false);
                this._storeFloat((_31_ + 68), ((this._loadFloat((_31_ + 68))) * (this._loadFloat((_31_ + 32)))));
            }
            while (false);
            this._storeFloat((_31_ + 76), ((this._loadFloat((_31_ + 68))) + -1.0f));
            return (this._loadFloat((_31_ + 76)));
        }
        while (false);
        this._storeInt((_31_ + 24), ((127 - (this._loadInt((_31_ + 16)))) << 23));
        label$18:
        do {
            label$19:
            do {
                if ((this._loadInt((_31_ + 16))) > 22) {
                    break label$19;
                }
                this._storeFloat((_31_ + 68), ((((this._loadFloat((_31_ + 72))) - (this._loadFloat((_31_ + 48)))) + (1.0f - (this._loadFloat((_31_ + 24))))) * (this._loadFloat((_31_ + 32)))));
                break label$18;
            }
            while (false);
            this._storeFloat((_31_ + 68), ((((this._loadFloat((_31_ + 72))) - ((this._loadFloat((_31_ + 48))) + (this._loadFloat((_31_ + 24))))) + 1.0f) * (this._loadFloat((_31_ + 32)))));
        }
        while (false);
        this._storeFloat((_31_ + 76), (this._loadFloat((_31_ + 68))));
        return (this._loadFloat((_31_ + 76)));
    }

    public final void expm1l(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (expm1((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void _flushlbf()
    {
        fflush(0);
        return;
    }

    public final int __fsetlocking(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        return 0;
    }

    public final int __fwriting(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if (((this._loadInt((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)))) & 4) != 0) {
                break label$0;
            }
            _31_ = ((this._loadInt(((this._loadInt((_32_ + 12))) + 16))) != 0) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int __freading(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if (((this._loadInt((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)))) & 8) != 0) {
                break label$0;
            }
            _31_ = ((this._loadInt(((this._loadInt((_32_ + 12))) + 8))) != 0) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int __freadable(int _30_)
    {
        return ((((this._loadInt((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)))) & 4) == 0) ? 1 : 0);
    }

    public final int __fwritable(int _30_)
    {
        return ((((this._loadInt((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)))) & 8) == 0) ? 1 : 0);
    }

    public final int __flbf(int _30_)
    {
        return (((this._loadInt(((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + 75))) > -1) ? 1 : 0);
    }

    public final int __fbufsize(int _30_)
    {
        return (this._loadInt(((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + 48)));
    }

    public final int __fpending(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) + 16))) == 0) {
                break label$0;
            }
            _31_ = (this._loadInt(((_31_ = this._loadInt((_32_ + 12))) + 20))) - (this._loadInt((_31_ + 28)));
        }
        while (false);
        return _31_;
    }

    public final int __fpurge(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = this._loadInt((0 + 4));
        this._storeLong((_30_ + 16), 0L);
        _31_ = this._storeInt((_30_ + 8), (this._storeInt((_30_ + 28), 0)));
        this._storeInt(((_32_ = _32_ - 16) + 12), _30_);
        return (this._storeInt(((this._loadInt((_32_ + 12))) + 4), _31_));
    }

    public final int __freadahead(int _30_)
    {
        return ((this._loadInt(((_30_ = this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + 8))) - (this._loadInt((_30_ + 4))));
    }

    public final int __freadptr(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 8), _30_);
        this._storeInt((_32_ + 4), _31_);
        label$0:
        do {
            if ((this._storeInt(_32_, ((this._loadInt(((_31_ = this._loadInt((_32_ + 8))) + 8))) - (this._loadInt((_31_ + 4)))))) == 0) {
                break label$0;
            }
            this._storeInt((this._loadInt((_32_ + 4))), (this._loadInt(_32_)));
            this._storeInt((_32_ + 12), (this._loadInt(((this._loadInt((_32_ + 8))) + 4))));
            return (this._loadInt((_32_ + 12)));
        }
        while (false);
        this._storeInt((_32_ + 12), 0);
        return (this._loadInt((_32_ + 12)));
    }

    public final void __freadptrinc(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        this._storeInt(((_32_ = this._loadInt((_32_ + 12))) + 4), (_31_ + (this._loadInt((_32_ + 4)))));
        return;
    }

    public final void __fseterr(int _30_)
    {
        int _31_ = 0;
        _31_ = this._loadInt((0 + 4));
        this._storeInt(_30_, ((this._loadInt(_30_)) | 32));
        this._storeInt(((_31_ - 16) + 12), _30_);
        return;
    }

    public final double fabs(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        this._storeLong(_31_, ((this._loadLong(_31_)) & 9223372036854775807L));
        return (this._loadDouble(_31_));
    }

    public final float fabsf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) & 2147483647));
        return (this._loadFloat((_31_ + 8)));
    }

    public final void fabsl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (Math.abs((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int fchdir(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 36), (this.__syscall1.invoke(133, (this._storeInt((_31_ + 40), _30_)))))) != -9) {
                    break label$1;
                }
                if ((this.__syscall2.invoke(55, (this._loadInt((_31_ + 40))), 1)) <= -1) {
                    break label$1;
                }
                __procfdname(_31_, (this._loadInt((_31_ + 40))));
                this._storeInt((_31_ + 44), (__syscall_ret((this.__syscall1.invoke(12, _31_)))));
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 44), (__syscall_ret((this._loadInt((_31_ + 36))))));
        }
        while (false);
        _30_ = this._loadInt((_31_ + 44));
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final int fchown(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_33_ + 36), _31_);
        this._storeInt((_33_ + 32), _32_);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_33_ + 28), (this.__syscall3.invoke(95, (this._loadInt((_33_ + 40))), (this._loadInt((_33_ + 36))), _32_)))) != -9) {
                    break label$1;
                }
                if ((this.__syscall2.invoke(55, (this._loadInt((_33_ + 40))), 1)) <= -1) {
                    break label$1;
                }
                __procfdname(_33_, (this._loadInt((_33_ + 40))));
                this._storeInt((_33_ + 44), (__syscall_ret((this.__syscall3.invoke(182, _33_, (this._loadInt((_33_ + 36))), (this._loadInt((_33_ + 32))))))));
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 44), (__syscall_ret((this._loadInt((_33_ + 28))))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 44));
        this._storeInt((0 + 4), (_33_ + 48));
        return _32_;
    }

    public final int fchownat(int _30_, int _31_, int _32_, int _33_, int _34_)
    {
        int _35_ = 0;
        this._storeInt(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_35_ + 24), _31_);
        this._storeInt((_35_ + 20), _32_);
        this._storeInt((_35_ + 16), _33_);
        this._storeInt((_35_ + 12), _34_);
        _34_ = __syscall_ret((this.__syscall5.invoke(298, (this._loadInt((_35_ + 28))), (this._loadInt((_35_ + 24))), (this._loadInt((_35_ + 20))), (this._loadInt((_35_ + 16))), _34_)));
        this._storeInt((0 + 4), (_35_ + 32));
        return _34_;
    }

    public final int fclose(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_)) + 76))) < 0) {
                break label$0;
            }
            _32_ = this.__lockfile.invoke((this._loadInt((_31_ + 28))));
        }
        while (false);
        this._storeInt((_31_ + 16), _32_);
        dummy$2e$58((this._loadInt((_31_ + 28))));
        label$1:
        do {
            if ((this._storeInt((_31_ + 20), ((this._loadInt((this._loadInt((_31_ + 28))))) & 1))) != 0) {
                break label$1;
            }
            this._storeInt((_31_ + 12), (__ofl_lock()));
            label$2:
            do {
                if ((this._loadInt(((this._loadInt((_31_ + 28))) + 52))) == 0) {
                    break label$2;
                }
                this._storeInt(((this._loadInt(((_32_ = this._loadInt((_31_ + 28))) + 52))) + 56), (this._loadInt((_32_ + 56))));
            }
            while (false);
            label$3:
            do {
                if ((this._loadInt(((this._loadInt((_31_ + 28))) + 56))) == 0) {
                    break label$3;
                }
                this._storeInt(((this._loadInt(((_32_ = this._loadInt((_31_ + 28))) + 56))) + 52), (this._loadInt((_32_ + 52))));
            }
            while (false);
            label$4:
            do {
                if ((this._loadInt((this._loadInt((_31_ + 12))))) != (this._loadInt((_31_ + 28)))) {
                    break label$4;
                }
                this._storeInt((this._loadInt((_31_ + 12))), (this._loadInt(((this._loadInt((_31_ + 28))) + 56))));
            }
            while (false);
            __ofl_unlock();
        }
        while (false);
        this._storeInt((_31_ + 24), (fflush((this._loadInt((_31_ + 28))))));
        this._storeInt((_31_ + 24), ((this._iiTable[this._tableIndices[this._loadInt(((_32_ = this._loadInt((_31_ + 28))) + 12))]].invoke(_32_)) | (this._loadInt((_31_ + 24)))));
        label$5:
        do {
            if ((this._loadInt(((this._loadInt((_31_ + 28))) + 96))) == 0) {
                break label$5;
            }
            free((this._loadInt(((this._loadInt((_31_ + 28))) + 96))));
        }
        while (false);
        label$6:
        do {
            label$7:
            do {
                if ((this._loadInt((_31_ + 20))) == 0) {
                    break label$7;
                }
                if ((this._loadInt((_31_ + 16))) == 0) {
                    break label$6;
                }
                this.__unlockfile.invoke((this._loadInt((_31_ + 28))));
                break label$6;
            }
            while (false);
            free((this._loadInt((_31_ + 28))));
        }
        while (false);
        _32_ = this._loadInt((_31_ + 24));
        this._storeInt((0 + 4), (_31_ + 32));
        return _32_;
    }

    public final void dummy$2e$58(int _30_)
    {
        this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_);
        return;
    }

    public final int fcvt(double _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeDouble(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 1568))) + 1552), _30_);
        this._storeInt((_34_ + 1548), _31_);
        this._storeInt((_34_ + 1544), _32_);
        this._storeInt((_34_ + 1540), _33_);
        label$0:
        do {
            if (((this._loadInt((_34_ + 1548))) & 4294967295L) < (1401 & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_34_ + 1548), 1400);
        }
        while (false);
        this._storeDouble((_34_ + 8), (this._loadDouble((_34_ + 1552))));
        this._storeInt(_34_, (this._loadInt((_34_ + 1548))));
        this.sprintf.invoke((_34_ + 32), 9808, _34_);
        label$1:
        do {
            label$2:
            do {
                if ((this._loadInt(((_34_ + 32) | (this._storeInt((_34_ + 28), (((this._loadInt((_34_ + 32))) == 45) ? 1 : 0)))))) != 48) {
                    break label$2;
                }
                this._storeInt((_34_ + 24), (strspn((((_34_ + 32) + (this._loadInt((_34_ + 28)))) + 2), 9824)));
                break label$1;
            }
            while (false);
            this._storeInt((_34_ + 24), (0 - (strcspn(((_34_ + 32) + (this._loadInt((_34_ + 28)))), 9840))));
        }
        while (false);
        label$3:
        do {
            label$4:
            do {
                if ((this._loadInt((_34_ + 1548))) > (this._loadInt((_34_ + 24)))) {
                    break label$4;
                }
                this._storeInt((this._loadInt((_34_ + 1540))), (this._loadInt((_34_ + 28))));
                this._storeInt((this._loadInt((_34_ + 1544))), 1);
                label$5:
                do {
                    if (((this._loadInt((_34_ + 1548))) & 4294967295L) < (15 & 4294967295L)) {
                        break label$5;
                    }
                    this._storeInt((_34_ + 1548), 14);
                }
                while (false);
                this._storeInt((_34_ + 1564), (9870 - (this._loadInt((_34_ + 1548)))));
                break label$3;
            }
            while (false);
            this._storeInt((_34_ + 1564), (ecvt((this._loadDouble((_34_ + 1552))), ((this._loadInt((_34_ + 1548))) - (this._loadInt((_34_ + 24)))), (this._loadInt((_34_ + 1544))), (this._loadInt((_34_ + 1540))))));
        }
        while (false);
        _33_ = this._loadInt((_34_ + 1564));
        this._storeInt((0 + 4), (_34_ + 1568));
        return _33_;
    }

    public final int fdatasync(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall_cp.invoke(148, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 0, 0, 0, 0, 0)));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double fdim(double _30_, double _31_)
    {
        int _32_ = 0;
        double _33_ = 0.0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 16), _30_);
        this._storeDouble((_32_ + 8), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((((__DOUBLE_BITS$2e$61((this._loadDouble((_32_ + 16))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 16))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((((__DOUBLE_BITS$2e$61((this._loadDouble((_32_ + 8))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                    break label$2;
                }
                this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 8))));
                break label$0;
            }
            while (false);
            _33_ = 0.0;
            label$3:
            do {
                if (((((_31_ = this._loadDouble((_32_ + 16))) <= (_30_ = this._loadDouble((_32_ + 8)))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                    break label$3;
                }
                _33_ = (this._loadDouble((_32_ + 16))) - (this._loadDouble((_32_ + 8)));
            }
            while (false);
            this._storeDouble((_32_ + 24), _33_);
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 24));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$60(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$61(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float fdimf(float _30_, float _31_)
    {
        int _32_ = 0;
        float _33_ = 0.0f;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeFloat((_32_ + 4), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((((__FLOAT_BITS$2e$62((this._loadFloat((_32_ + 8))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 8))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((((__FLOAT_BITS$2e$62((this._loadFloat((_32_ + 4))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                    break label$2;
                }
                this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 4))));
                break label$0;
            }
            while (false);
            _33_ = 0.0f;
            label$3:
            do {
                if (((((_31_ = this._loadFloat((_32_ + 8))) <= (_30_ = this._loadFloat((_32_ + 4)))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                    break label$3;
                }
                _33_ = (this._loadFloat((_32_ + 8))) - (this._loadFloat((_32_ + 4)));
            }
            while (false);
            this._storeFloat((_32_ + 12), _33_);
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$62(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$63(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void fdiml(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (fdim((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))), _36_)));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final int feof(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) + 76))) < 0) {
                break label$0;
            }
            _32_ = this.__lockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        this._storeInt((_31_ + 8), _32_);
        this._storeInt((_31_ + 4), (((this._loadInt((this._loadInt((_31_ + 12))))) & 16) >>> 4));
        label$1:
        do {
            if ((this._loadInt((_31_ + 8))) == 0) {
                break label$1;
            }
            this.__unlockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        _32_ = this._loadInt((_31_ + 4));
        this._storeInt((0 + 4), (_31_ + 16));
        return _32_;
    }

    public final int ferror(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) + 76))) < 0) {
                break label$0;
            }
            _32_ = this.__lockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        this._storeInt((_31_ + 8), _32_);
        this._storeInt((_31_ + 4), (((this._loadInt((this._loadInt((_31_ + 12))))) & 32) >>> 5));
        label$1:
        do {
            if ((this._loadInt((_31_ + 8))) == 0) {
                break label$1;
            }
            this.__unlockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        _32_ = this._loadInt((_31_ + 4));
        this._storeInt((0 + 4), (_31_ + 16));
        return _32_;
    }

    public final int fflush(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_)) == 0) {
                    break label$1;
                }
                _30_ = 0;
                label$2:
                do {
                    if ((this._loadInt(((this._loadInt((_31_ + 24))) + 76))) < 0) {
                        break label$2;
                    }
                    _30_ = this.__lockfile.invoke((this._loadInt((_31_ + 24))));
                }
                while (false);
                this._storeInt((_31_ + 16), _30_);
                this._storeInt((_31_ + 20), (__fflush_unlocked((this._loadInt((_31_ + 24))))));
                label$3:
                do {
                    if ((this._loadInt((_31_ + 16))) == 0) {
                        break label$3;
                    }
                    this.__unlockfile.invoke((this._loadInt((_31_ + 24))));
                }
                while (false);
                this._storeInt((_31_ + 28), (this._loadInt((_31_ + 20))));
                break label$0;
            }
            while (false);
            _30_ = 0;
            label$4:
            do {
                if ((this._loadInt((0 + 17296))) == 0) {
                    break label$4;
                }
                _30_ = fflush((this._loadInt((0 + 17296))));
            }
            while (false);
            this._storeInt((_31_ + 20), _30_);
            this._storeInt((_31_ + 24), (this._loadInt((__ofl_lock()))));
            label$6:
            do {
                label$5:
                while (true) {
                    if ((this._loadInt((_31_ + 24))) == 0) {
                        break label$6;
                    }
                    _30_ = 0;
                    label$7:
                    do {
                        if ((this._loadInt(((this._loadInt((_31_ + 24))) + 76))) < 0) {
                            break label$7;
                        }
                        _30_ = this.__lockfile.invoke((this._loadInt((_31_ + 24))));
                    }
                    while (false);
                    this._storeInt((_31_ + 12), _30_);
                    label$8:
                    do {
                        if (((this._loadInt(((_30_ = this._loadInt((_31_ + 24))) + 20))) & 4294967295L) <= ((this._loadInt((_30_ + 28))) & 4294967295L)) {
                            break label$8;
                        }
                        this._storeInt((_31_ + 20), ((__fflush_unlocked((this._loadInt((_31_ + 24))))) | (this._loadInt((_31_ + 20)))));
                    }
                    while (false);
                    label$9:
                    do {
                        if ((this._loadInt((_31_ + 12))) == 0) {
                            break label$9;
                        }
                        this.__unlockfile.invoke((this._loadInt((_31_ + 24))));
                    }
                    while (false);
                    this._storeInt((_31_ + 24), (this._loadInt(((this._loadInt((_31_ + 24))) + 56))));
                    continue label$5;
                }
            }
            while (false);
            __ofl_unlock();
            this._storeInt((_31_ + 28), (this._loadInt((_31_ + 20))));
        }
        while (false);
        _30_ = this._loadInt((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final int __fflush_unlocked(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt(((_30_ = this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)) + 20))) & 4294967295L) <= ((this._loadInt((_30_ + 28))) & 4294967295L)) {
                        break label$2;
                    }
                    this._iiiiTable[this._tableIndices[this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 36))]].invoke(_30_, 0, 0);
                    if ((this._loadInt(((this._loadInt((_31_ + 8))) + 20))) == 0) {
                        break label$1;
                    }
                }
                while (false);
                label$3:
                do {
                    if (((this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 4))) & 4294967295L) >= ((this._loadInt((_30_ + 8))) & 4294967295L)) {
                        break label$3;
                    }
                    this._liliTable[this._tableIndices[this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 40))]].invoke(_30_, ((long) ((this._loadInt((_30_ + 4))) - (this._loadInt((_30_ + 8))))), 1);
                }
                while (false);
                this._storeLong(((_30_ = this._loadInt((_31_ + 8))) + 16), 0L);
                _30_ = this._storeInt((_30_ + 8), (this._storeInt((_30_ + 28), 0)));
                this._storeInt((_31_ + 12), (this._storeInt(((this._loadInt((_31_ + 8))) + 4), _30_)));
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 12), -1);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int fgetc(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)) + 76))) < 0) {
                            break label$3;
                        }
                        if ((this.__lockfile.invoke((this._loadInt((_31_ + 8))))) == 0) {
                            break label$3;
                        }
                        if (((this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 4))) & 4294967295L) >= ((this._loadInt((_30_ + 8))) & 4294967295L)) {
                            break label$2;
                        }
                        this._storeInt(((_30_ = this._loadInt((_31_ + 8))) + 4), ((_30_ = this._loadInt((_30_ + 4))) + 1));
                        _30_ = this._loadInt(_30_);
                        break label$1;
                    }
                    while (false);
                    label$4:
                    do {
                        if (((this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 4))) & 4294967295L) >= ((this._loadInt((_30_ + 8))) & 4294967295L)) {
                            break label$4;
                        }
                        this._storeInt(((_30_ = this._loadInt((_31_ + 8))) + 4), ((_30_ = this._loadInt((_30_ + 4))) + 1));
                        this._storeInt((_31_ + 12), (this._loadInt(_30_)));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_31_ + 12), (__uflow((this._loadInt((_31_ + 8))))));
                    break label$0;
                }
                while (false);
                _30_ = __uflow((this._loadInt((_31_ + 8))));
            }
            while (false);
            this._storeInt((_31_ + 4), _30_);
            this.__unlockfile.invoke((this._loadInt((_31_ + 8))));
            this._storeInt((_31_ + 12), (this._loadInt((_31_ + 4))));
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int fgetln(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_32_ + 24), _31_);
        _31_ = 0;
        _30_ = this._storeInt((_32_ + 20), 0);
        label$0:
        do {
            if ((this._loadInt(((this._loadInt((_32_ + 28))) + 76))) < _30_) {
                break label$0;
            }
            _31_ = this.__lockfile.invoke((this._loadInt((_32_ + 28))));
        }
        while (false);
        this._storeInt((_32_ + 8), _31_);
        label$1:
        do {
            label$2:
            do {
                if (((this._loadInt(((_31_ = this._loadInt((_32_ + 28))) + 4))) & 4294967295L) >= ((this._loadInt((_31_ + 8))) & 4294967295L)) {
                    break label$2;
                }
                this._storeInt(((_31_ = this._loadInt((_32_ + 28))) + 4), ((_31_ = this._loadInt((_31_ + 4))) + 1));
                _31_ = this._loadInt(_31_);
                break label$1;
            }
            while (false);
            _31_ = __uflow((this._loadInt((_32_ + 28))));
        }
        while (false);
        ungetc(_31_, (this._loadInt((_32_ + 28))));
        label$3:
        do {
            label$4:
            do {
                if ((this._storeInt((_32_ + 16), (memchr((_30_ = this._loadInt(((_31_ = this._loadInt((_32_ + 28))) + 4))), 10, ((this._loadInt((_31_ + 8))) - _30_))))) == 0) {
                    break label$4;
                }
                this._storeInt((_32_ + 20), (this._loadInt(((this._loadInt((_32_ + 28))) + 4))));
                _31_ = this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) + 1));
                this._storeInt((this._loadInt((_32_ + 24))), (_31_ - (this._loadInt((_32_ + 20)))));
                this._storeInt(((this._loadInt((_32_ + 28))) + 4), _31_);
                break label$3;
            }
            while (false);
            _31_ = this._loadInt((_32_ + 28));
            this._storeInt((_32_ + 4), 0);
            if ((this._storeInt((_32_ + 12), (getline((_31_ + 96), (_32_ + 4), (this._loadInt((_32_ + 28))))))) < 1) {
                break label$3;
            }
            this._storeInt((this._loadInt((_32_ + 24))), (this._loadInt((_32_ + 12))));
            this._storeInt((_32_ + 20), (this._loadInt(((this._loadInt((_32_ + 28))) + 96))));
        }
        while (false);
        label$5:
        do {
            if ((this._loadInt((_32_ + 8))) == 0) {
                break label$5;
            }
            this.__unlockfile.invoke((this._loadInt((_32_ + 28))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 20));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int fgetpos(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeLong((_32_ + 8), (__ftello((this._loadInt((_32_ + 24))))))) <= -1L) {
                    break label$1;
                }
                this._storeLong((this._loadInt((_32_ + 20))), (this._loadLong((_32_ + 8))));
                this._storeInt((_32_ + 28), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 28), -1);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int fgets(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_33_ + 36), _31_);
        this._storeInt((_33_ + 32), _32_);
        this._storeInt((_33_ + 28), (this._loadInt((_33_ + 40))));
        _32_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._loadInt((_33_ + 32))) + 76))) < 0) {
                break label$0;
            }
            _32_ = this.__lockfile.invoke((this._loadInt((_33_ + 32))));
        }
        while (false);
        this._storeInt((_33_ + 12), _32_);
        this._storeInt((_33_ + 36), ((_32_ = this._loadInt((_33_ + 36))) + -1));
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            if (_32_ > 1) {
                                break label$5;
                            }
                            this._storeInt(((_32_ = this._loadInt((_33_ + 32))) + 74), ((_32_ = this._loadInt((_32_ + 74))) | (_32_ + -1)));
                            label$6:
                            do {
                                if ((this._loadInt((_33_ + 12))) == 0) {
                                    break label$6;
                                }
                                this.__unlockfile.invoke((this._loadInt((_33_ + 32))));
                            }
                            while (false);
                            if ((this._loadInt((_33_ + 36))) == 0) {
                                break label$4;
                            }
                            this._storeInt((_33_ + 44), 0);
                            break label$1;
                        }
                        while (false);
                        label$7:
                        while (true) {
                            if ((this._loadInt((_33_ + 36))) == 0) {
                                break label$2;
                            }
                            label$9:
                            do {
                                label$10:
                                do {
                                    if ((this._storeInt((_33_ + 24), (memchr((_31_ = this._loadInt(((_32_ = this._loadInt((_33_ + 32))) + 4))), 10, ((this._loadInt((_32_ + 8))) - _31_))))) == 0) {
                                        break label$10;
                                    }
                                    _32_ = ((this._loadInt((_33_ + 24))) - (this._loadInt(((this._loadInt((_33_ + 32))) + 4)))) + 1;
                                    break label$9;
                                }
                                while (false);
                                _32_ = (this._loadInt(((_32_ = this._loadInt((_33_ + 32))) + 8))) - (this._loadInt((_32_ + 4)));
                            }
                            while (false);
                            label$11:
                            do {
                                label$12:
                                do {
                                    if (((this._storeInt((_33_ + 20), _32_)) & 4294967295L) >= ((this._loadInt((_33_ + 36))) & 4294967295L)) {
                                        break label$12;
                                    }
                                    _32_ = this._loadInt((_33_ + 20));
                                    break label$11;
                                }
                                while (false);
                                _32_ = this._loadInt((_33_ + 36));
                            }
                            while (false);
                            this._storeInt((_33_ + 20), _32_);
                            memcpy((this._loadInt((_33_ + 28))), (this._loadInt(((this._loadInt((_33_ + 32))) + 4))), _32_);
                            this._storeInt(((_32_ = this._loadInt((_33_ + 32))) + 4), ((this._loadInt((_32_ + 4))) + (_32_ = this._loadInt((_33_ + 20)))));
                            this._storeInt((_33_ + 28), (_32_ + (this._loadInt((_33_ + 28)))));
                            this._storeInt((_33_ + 36), ((this._loadInt((_33_ + 36))) - (this._loadInt((_33_ + 20)))));
                            if ((this._loadInt((_33_ + 24))) != 0) {
                                break label$2;
                            }
                            if ((this._loadInt((_33_ + 36))) == 0) {
                                break label$2;
                            }
                            label$13:
                            do {
                                label$14:
                                do {
                                    if (((this._loadInt(((_32_ = this._loadInt((_33_ + 32))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 8))) & 4294967295L)) {
                                        break label$14;
                                    }
                                    this._storeInt(((_32_ = this._loadInt((_33_ + 32))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                    _32_ = this._loadInt(_32_);
                                    break label$13;
                                }
                                while (false);
                                _32_ = __uflow((this._loadInt((_33_ + 32))));
                            }
                            while (false);
                            if ((this._storeInt((_33_ + 16), _32_)) <= -1) {
                                break label$3;
                            }
                            this._storeInt((_33_ + 36), ((this._loadInt((_33_ + 36))) + -1));
                            _31_ = this._storeInt((_32_ = this._loadInt((_33_ + 28))), (this._loadInt((_33_ + 16))));
                            this._storeInt((_33_ + 28), (_32_ + 1));
                            if (_31_ != 10) {
                                continue label$7;
                            }
                            break label$2;
                        }
                    }
                    while (false);
                    this._storeInt((_32_ = this._loadInt((_33_ + 40))), 0);
                    this._storeInt((_33_ + 44), _32_);
                    break label$1;
                }
                while (false);
                label$15:
                do {
                    if ((this._loadInt((_33_ + 28))) == (this._loadInt((_33_ + 40)))) {
                        break label$15;
                    }
                    if (((this._loadInt((this._loadInt((_33_ + 32))))) & 16) != 0) {
                        break label$2;
                    }
                }
                while (false);
                this._storeInt((_33_ + 40), 0);
            }
            while (false);
            label$16:
            do {
                if ((this._loadInt((_33_ + 40))) == 0) {
                    break label$16;
                }
                this._storeInt((this._loadInt((_33_ + 28))), 0);
            }
            while (false);
            label$17:
            do {
                if ((this._loadInt((_33_ + 12))) == 0) {
                    break label$17;
                }
                this.__unlockfile.invoke((this._loadInt((_33_ + 32))));
            }
            while (false);
            this._storeInt((_33_ + 44), (this._loadInt((_33_ + 40))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 44));
        this._storeInt((0 + 4), (_33_ + 48));
        return _32_;
    }

    public final int fileno(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) + 76))) < 0) {
                break label$0;
            }
            _32_ = this.__lockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        label$1:
        do {
            if ((this._storeInt((_31_ + 8), _32_)) == 0) {
                break label$1;
            }
            this.__unlockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        _32_ = this._loadInt(((this._loadInt((_31_ + 12))) + 60));
        this._storeInt((0 + 4), (_31_ + 16));
        return _32_;
    }

    public final int finite(double _30_)
    {
        int _31_ = 0;
        long _32_ = 0L;
        _32_ = __DOUBLE_BITS$2e$66((this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)));
        this._storeInt((0 + 4), (_31_ + 16));
        return ((((_32_ & 9223372036854775807L) & 4294967295L) < (9218868437227405312L & 4294967295L)) ? 1 : 0);
    }

    public final long __DOUBLE_BITS$2e$66(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final int finitef(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = __FLOAT_BITS$2e$67((this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)));
        this._storeInt((0 + 4), (_31_ + 16));
        return ((((_32_ & 2147483647) & 4294967295L) < (2139095040 & 4294967295L)) ? 1 : 0);
    }

    public final int __FLOAT_BITS$2e$67(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final double floor(double _30_)
    {
        int _31_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        double _temp$3 = 0.0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 48) + 24), (this._storeDouble((_31_ + 32), _30_)));
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_31_ + 20), ((int) (((this._loadLong((_31_ + 24))) >>> 52L) & 2047L)))) > 1074) {
                    break label$1;
                }
                if ((this._loadDouble((_31_ + 32))) != 0.0) {
                    break label$0;
                }
            }
            while (false);
            this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 32))));
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                if (((this._loadLong((_31_ + 24))) >>> 63L) == 0) {
                    break label$3;
                }
                this._storeDouble((_31_ + 8), ((((_30_ = this._loadDouble((_31_ + 32))) - 4.503599627370496E15) + 4.503599627370496E15) - _30_));
                break label$2;
            }
            while (false);
            this._storeDouble((_31_ + 8), ((((_30_ = this._loadDouble((_31_ + 32))) + 4.503599627370496E15) - 4.503599627370496E15) - _30_));
        }
        while (false);
        label$4:
        do {
            if ((this._loadInt((_31_ + 20))) > 1022) {
                break label$4;
            }
            this._storeDouble(_31_, (this._loadDouble((_31_ + 8))));
            _temp$0 = -1;
            _temp$1 = 0;
            _temp$2 = (((this._loadLong((_31_ + 24))) >>> 63L) != 0L) ? _temp$0 : _temp$1;
            _temp$3 = (double) _temp$2;
            this._storeDouble((_31_ + 40), _temp$3);
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        label$5:
        do {
            if (((((_30_ = this._loadDouble((_31_ + 8))) <= 0.0) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                break label$5;
            }
            this._storeDouble((_31_ + 40), (((this._loadDouble((_31_ + 32))) + (this._loadDouble((_31_ + 8)))) + -1.0));
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        this._storeDouble((_31_ + 40), ((this._loadDouble((_31_ + 32))) + (this._loadDouble((_31_ + 8)))));
        return (this._loadDouble((_31_ + 40)));
    }

    public final float floorf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 32) + 16), (this._storeFloat((_31_ + 24), _30_)));
        label$0:
        do {
            if ((this._storeInt((_31_ + 12), ((((this._loadInt((_31_ + 16))) >>> 23) & 255) + -127))) < 23) {
                break label$0;
            }
            this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
            return (this._loadFloat((_31_ + 28)));
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        if ((this._loadInt((_31_ + 12))) < 0) {
                            break label$4;
                        }
                        if (((this._storeInt((_31_ + 8), (8388607 >>> (this._loadInt((_31_ + 12)))))) & (this._loadInt((_31_ + 16)))) == 0) {
                            break label$3;
                        }
                        this._storeFloat((_31_ + 4), ((this._loadFloat((_31_ + 24))) + 1.329228E36f));
                        label$5:
                        do {
                            if (((this._loadInt((_31_ + 16))) >>> 31) == 0) {
                                break label$5;
                            }
                            this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 16))) + (this._loadInt((_31_ + 8)))));
                        }
                        while (false);
                        this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 16))) & ((this._loadInt((_31_ + 8))) ^ -1)));
                        break label$1;
                    }
                    while (false);
                    this._storeFloat(_31_, ((this._loadFloat((_31_ + 24))) + 1.329228E36f));
                    if (((this._loadInt((_31_ + 16))) >>> 31) == 0) {
                        break label$2;
                    }
                    if (((this._loadInt((_31_ + 16))) << 1) == 0) {
                        break label$1;
                    }
                    this._storeInt((_31_ + 16), -1082130432);
                    break label$1;
                }
                while (false);
                this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
                return (this._loadFloat((_31_ + 28)));
            }
            while (false);
            this._storeInt((_31_ + 16), 0);
        }
        while (false);
        this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 16))));
        return (this._loadFloat((_31_ + 28)));
    }

    public final void floorl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (Math.floor((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double fma(double _30_, double _31_, double _32_)
    {
        int _33_ = 0;
        int _34_ = 0;
        this._storeDouble(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 176))) + 160), _30_);
        this._storeDouble((_33_ + 152), _31_);
        this._storeDouble((_33_ + 144), _32_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((((__DOUBLE_BITS$2e$69((this._loadDouble((_33_ + 160))))) & 9223372036854775807L) & 4294967295L) > (9218868437227405311L & 4294967295L)) {
                            break label$3;
                        }
                        if ((((__DOUBLE_BITS$2e$69((this._loadDouble((_33_ + 152))))) & 9223372036854775807L) & 4294967295L) >= (9218868437227405312L & 4294967295L)) {
                            break label$3;
                        }
                        if ((((__DOUBLE_BITS$2e$69((this._loadDouble((_33_ + 144))))) & 9223372036854775807L) & 4294967295L) >= (9218868437227405312L & 4294967295L)) {
                            break label$2;
                        }
                        label$4:
                        do {
                            if ((this._loadDouble((_33_ + 160))) == 0.0) {
                                break label$4;
                            }
                            if ((this._loadDouble((_33_ + 152))) != 0.0) {
                                break label$1;
                            }
                        }
                        while (false);
                        this._storeDouble((_33_ + 168), (((this._loadDouble((_33_ + 160))) * (this._loadDouble((_33_ + 152)))) + (this._loadDouble((_33_ + 144)))));
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_33_ + 168), (((this._loadDouble((_33_ + 160))) * (this._loadDouble((_33_ + 152)))) + (this._loadDouble((_33_ + 144)))));
                    break label$0;
                }
                while (false);
                this._storeDouble((_33_ + 168), (this._loadDouble((_33_ + 144))));
                break label$0;
            }
            while (false);
            label$5:
            do {
                if ((this._loadDouble((_33_ + 144))) != 0.0) {
                    break label$5;
                }
                this._storeDouble((_33_ + 168), ((this._loadDouble((_33_ + 160))) * (this._loadDouble((_33_ + 152)))));
                break label$0;
            }
            while (false);
            this._storeDouble((_33_ + 136), (frexp((this._loadDouble((_33_ + 160))), (_33_ + 72))));
            this._storeDouble((_33_ + 128), (frexp((this._loadDouble((_33_ + 152))), (_33_ + 68))));
            this._storeDouble((_33_ + 120), (frexp((this._loadDouble((_33_ + 144))), (_33_ + 64))));
            this._storeInt((_33_ + 76), (this.fegetround.invoke()));
            label$6:
            do {
                label$7:
                do {
                    label$8:
                    do {
                        label$9:
                        do {
                            label$10:
                            do {
                                label$11:
                                do {
                                    label$12:
                                    do {
                                        label$13:
                                        do {
                                            label$14:
                                            do {
                                                label$15:
                                                do {
                                                    label$16:
                                                    do {
                                                        if ((this._storeInt((_33_ + 60), (((this._loadInt((_33_ + 72))) + (this._loadInt((_33_ + 68)))) - (this._loadInt((_33_ + 64)))))) > -54) {
                                                            break label$16;
                                                        }
                                                        this.feraiseexcept.invoke(32);
                                                        label$17:
                                                        do {
                                                            if (((((__DOUBLE_BITS$2e$69((this._loadDouble((_33_ + 144))))) + 4503599627370496L) & 9223372036854775807L) & 4294967295L) > (9007199254740991L & 4294967295L)) {
                                                                break label$17;
                                                            }
                                                            this.feraiseexcept.invoke(16);
                                                        }
                                                        while (false);
                                                        if ((_34_ = this._loadInt((_33_ + 76))) == 1024) {
                                                            break label$15;
                                                        }
                                                        if (_34_ == 2048) {
                                                            break label$14;
                                                        }
                                                        if (_34_ != 3072) {
                                                            break label$13;
                                                        }
                                                        if ((((((this._loadDouble((_33_ + 160))) > 0.0) ? 1 : 0) ^ (((this._loadDouble((_33_ + 152))) < 0.0) ? 1 : 0)) ^ (((this._loadDouble((_33_ + 144))) < 0.0) ? 1 : 0)) != 1) {
                                                            break label$9;
                                                        }
                                                        this._storeDouble((_33_ + 168), (this._loadDouble((_33_ + 144))));
                                                        break label$0;
                                                    }
                                                    while (false);
                                                    label$18:
                                                    do {
                                                        label$19:
                                                        do {
                                                            if ((this._loadInt((_33_ + 60))) > 106) {
                                                                break label$19;
                                                            }
                                                            this._storeDouble((_33_ + 120), (scalbn((this._loadDouble((_33_ + 120))), (0 - (this._loadInt((_33_ + 60)))))));
                                                            break label$18;
                                                        }
                                                        while (false);
                                                        this._storeDouble((_33_ + 120), (Double.longBitsToDouble((((Double.doubleToRawLongBits(2.2250738585072014E-308)) & 9223372036854775807L) | ((Double.doubleToRawLongBits((this._loadDouble((_33_ + 120))))) & -9223372036854775808L)))));
                                                    }
                                                    while (false);
                                                    this.fesetround.invoke(0);
                                                    dd_mul((_33_ + 40), (this._loadDouble((_33_ + 136))), (this._loadDouble((_33_ + 128))));
                                                    this._storeLong(((_33_ + 96) + 8), (this._loadLong(((_33_ + 40) + 8))));
                                                    this._storeLong((_33_ + 96), (this._loadLong((_33_ + 40))));
                                                    dd_add((_33_ + 24), (this._loadDouble((_33_ + 96))), (this._loadDouble((_33_ + 120))));
                                                    this._storeLong(((_33_ + 80) + 8), (this._loadLong(((_33_ + 24) + 8))));
                                                    this._storeLong((_33_ + 80), (this._loadLong((_33_ + 24))));
                                                    this._storeInt((_33_ + 60), ((this._loadInt((_33_ + 72))) + (this._loadInt((_33_ + 68)))));
                                                    label$20:
                                                    do {
                                                        if ((this._loadDouble((_33_ + 80))) != 0.0) {
                                                            break label$20;
                                                        }
                                                        this.fesetround.invoke((this._loadInt((_33_ + 76))));
                                                        this._storeDouble((_33_ + 16), (this._loadDouble((_33_ + 120))));
                                                        this._storeDouble((_33_ + 168), (((this._loadDouble((_33_ + 96))) + (this._loadDouble((_33_ + 16)))) + (scalbn((this._loadDouble((_33_ + 104))), (this._loadInt((_33_ + 60)))))));
                                                        break label$0;
                                                    }
                                                    while (false);
                                                    if ((this._loadInt((_33_ + 76))) == 0) {
                                                        break label$10;
                                                    }
                                                    this._storeInt((_33_ + 4), (this.fetestexcept.invoke(32)));
                                                    this.feclearexcept.invoke(32);
                                                    this.fesetround.invoke((this._loadInt((_33_ + 76))));
                                                    if ((ilogb((this._storeDouble((_33_ + 8), (scalbn(((this._storeDouble((_33_ + 112), ((this._loadDouble((_33_ + 88))) + (this._loadDouble((_33_ + 104)))))) + (this._loadDouble((_33_ + 80)))), (this._loadInt((_33_ + 60))))))))) > -1023) {
                                                        break label$12;
                                                    }
                                                    if ((this.fetestexcept.invoke(32)) == 0) {
                                                        break label$12;
                                                    }
                                                    this.feraiseexcept.invoke(16);
                                                    break label$11;
                                                }
                                                while (false);
                                                if ((((this._loadDouble((_33_ + 160))) > 0.0) ? 1 : 0) == (((this._loadDouble((_33_ + 152))) < 0.0) ? 1 : 0)) {
                                                    break label$8;
                                                }
                                                this._storeDouble((_33_ + 168), (this._loadDouble((_33_ + 144))));
                                                break label$0;
                                            }
                                            while (false);
                                            if ((((this._loadDouble((_33_ + 160))) > 0.0) ? 1 : 0) == (((this._loadDouble((_33_ + 152))) < 0.0) ? 1 : 0)) {
                                                break label$7;
                                            }
                                            this._storeDouble((_33_ + 168), (nextafter((this._loadDouble((_33_ + 144))), Double.POSITIVE_INFINITY)));
                                            break label$0;
                                        }
                                        while (false);
                                        this._storeDouble((_33_ + 168), (this._loadDouble((_33_ + 144))));
                                        break label$0;
                                    }
                                    while (false);
                                    if ((this._loadInt((_33_ + 4))) == 0) {
                                        break label$11;
                                    }
                                    this.feraiseexcept.invoke(32);
                                }
                                while (false);
                                this._storeDouble((_33_ + 168), (this._loadDouble((_33_ + 8))));
                                break label$0;
                            }
                            while (false);
                            this._storeDouble((_33_ + 112), (add_adjusted((this._loadDouble((_33_ + 88))), (this._loadDouble((_33_ + 104))))));
                            if (((this._loadInt((_33_ + 60))) + (ilogb((this._loadDouble((_33_ + 80)))))) < -1022) {
                                break label$6;
                            }
                            this._storeDouble((_33_ + 168), (scalbn(((this._loadDouble((_33_ + 80))) + (this._loadDouble((_33_ + 112)))), (this._loadInt((_33_ + 60))))));
                            break label$0;
                        }
                        while (false);
                        this._storeDouble((_33_ + 168), (nextafter((this._loadDouble((_33_ + 144))), 0.0)));
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_33_ + 168), (nextafter((this._loadDouble((_33_ + 144))), Double.NEGATIVE_INFINITY)));
                    break label$0;
                }
                while (false);
                this._storeDouble((_33_ + 168), (this._loadDouble((_33_ + 144))));
                break label$0;
            }
            while (false);
            this._storeDouble((_33_ + 168), (add_and_denormalize((this._loadDouble((_33_ + 80))), (this._loadDouble((_33_ + 112))), (this._loadInt((_33_ + 60))))));
        }
        while (false);
        _32_ = this._loadDouble((_33_ + 168));
        this._storeInt((0 + 4), (_33_ + 176));
        return _32_;
    }

    public final int __FLOAT_BITS$2e$68(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$69(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void dd_mul(int _30_, double _31_, double _32_)
    {
        int _33_ = 0;
        this._storeDouble(((_33_ = (this._loadInt((0 + 4))) - 80) + 72), _31_);
        this._storeDouble((_33_ + 64), _32_);
        _32_ = this._storeDouble((_33_ + 8), ((this._loadDouble((_33_ + 72))) * 1.34217729E8));
        _32_ = this._storeDouble((_33_ + 40), ((this._storeDouble((_33_ + 40), ((this._loadDouble((_33_ + 72))) - _32_))) + (this._loadDouble((_33_ + 8)))));
        this._storeDouble((_33_ + 24), ((this._loadDouble((_33_ + 72))) - _32_));
        _32_ = this._storeDouble((_33_ + 8), ((this._loadDouble((_33_ + 64))) * 1.34217729E8));
        _32_ = this._storeDouble((_33_ + 32), ((this._storeDouble((_33_ + 32), ((this._loadDouble((_33_ + 64))) - _32_))) + (this._loadDouble((_33_ + 8)))));
        this._storeDouble((_33_ + 16), ((this._loadDouble((_33_ + 64))) - _32_));
        this._storeDouble((_33_ + 8), ((this._loadDouble((_33_ + 40))) * (this._loadDouble((_33_ + 32)))));
        _32_ = this._storeDouble((_33_ + 48), ((this._storeDouble(_33_, (((this._loadDouble((_33_ + 40))) * (this._loadDouble((_33_ + 16)))) + ((this._loadDouble((_33_ + 24))) * (this._loadDouble((_33_ + 32))))))) + (this._loadDouble((_33_ + 8)))));
        this._storeDouble((_33_ + 56), ((((this._loadDouble((_33_ + 8))) - _32_) + (this._loadDouble(_33_))) + ((this._loadDouble((_33_ + 24))) * (this._loadDouble((_33_ + 16))))));
        this._storeLong(_30_, (this._loadLong((_33_ + 48))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 56))));
        return;
    }

    public final void dd_add(int _30_, double _31_, double _32_)
    {
        int _33_ = 0;
        this._storeDouble(((_33_ = (this._loadInt((0 + 4))) - 48) + 40), _31_);
        _32_ = this._storeDouble((_33_ + 8), ((this._storeDouble((_33_ + 16), ((this._storeDouble((_33_ + 32), _32_)) + (this._loadDouble((_33_ + 40)))))) - (this._loadDouble((_33_ + 40)))));
        this._storeDouble((_33_ + 24), (((this._loadDouble((_33_ + 40))) - ((this._loadDouble((_33_ + 16))) - _32_)) + ((this._loadDouble((_33_ + 32))) - _32_)));
        this._storeLong(_30_, (this._loadLong((_33_ + 16))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 24))));
        return;
    }

    public final double add_adjusted(double _30_, double _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        long _34_ = 0L;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 56), _30_);
        this._storeDouble((_32_ + 48), _31_);
        dd_add(_32_, (this._loadDouble((_32_ + 56))), _31_);
        this._storeLong((_33_ = (_32_ + 32) + 8), (this._loadLong((_32_ + 8))));
        this._storeLong((_32_ + 32), (this._loadLong(_32_)));
        label$0:
        do {
            if ((this._loadDouble(_33_)) == 0.0) {
                break label$0;
            }
            this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 32))));
            if (((this._loadInt((_32_ + 24))) & 1) != 0) {
                break label$0;
            }
            this._storeDouble((_32_ + 16), (this._loadDouble((_32_ + 40))));
            this._storeLong((_32_ + 24), ((_34_ = this._loadLong((_32_ + 24))) + (1L - ((_34_ ^ (this._loadLong((_32_ + 16)))) >>> 62L))));
            this._storeDouble((_32_ + 32), (this._loadDouble((_32_ + 24))));
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 32));
        this._storeInt((0 + 4), (_32_ + 64));
        return _31_;
    }

    public final double add_and_denormalize(double _30_, double _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeDouble(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 72), _30_);
        this._storeDouble((_33_ + 64), _31_);
        this._storeInt((_33_ + 60), _32_);
        dd_add(_33_, (this._loadDouble((_33_ + 72))), (this._loadDouble((_33_ + 64))));
        this._storeLong((_32_ = (_33_ + 40) + 8), (this._loadLong((_33_ + 8))));
        this._storeLong((_33_ + 40), (this._loadLong(_33_)));
        label$0:
        do {
            if ((this._loadDouble(_32_)) == 0.0) {
                break label$0;
            }
            this._storeDouble((_33_ + 32), (this._loadDouble((_33_ + 40))));
            if (((((this._storeInt((_33_ + 20), (((0 - (((int) ((this._loadLong((_33_ + 32))) >>> 52L)) & 2047)) - (this._loadInt((_33_ + 60)))) + 1))) != 1) ? 1 : 0) ^ ((int) ((this._loadLong((_33_ + 32))) & 1L))) == 0) {
                break label$0;
            }
            this._storeDouble((_33_ + 24), (this._loadDouble((_33_ + 48))));
            this._storeLong((_33_ + 32), ((_34_ = this._loadLong((_33_ + 32))) + (1L - (((_34_ ^ (this._loadLong((_33_ + 24)))) >>> 62L) & 2L))));
            this._storeDouble((_33_ + 40), (this._loadDouble((_33_ + 32))));
        }
        while (false);
        _31_ = scalbn((this._loadDouble((_33_ + 40))), (this._loadInt((_33_ + 60))));
        this._storeInt((0 + 4), (_33_ + 80));
        return _31_;
    }

    public final float fmaf(float _30_, float _31_, float _32_)
    {
        int _33_ = 0;
        this._storeFloat(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 56), _30_);
        this._storeFloat((_33_ + 52), _31_);
        this._storeFloat((_33_ + 48), _32_);
        this._storeDouble((_33_ + 24), (this._storeDouble((_33_ + 32), ((this._storeDouble((_33_ + 40), (((double) (this._loadFloat((_33_ + 56)))) * ((double) (this._loadFloat((_33_ + 52))))))) + ((double) (this._loadFloat((_33_ + 48))))))));
        this._storeLong((_33_ + 20), (((this._loadLong((_33_ + 24))) >>> 52L) & 2047L));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadLong((_33_ + 24))) & 536870911L) != 268435456L) {
                        break label$2;
                    }
                    if ((this._loadInt((_33_ + 20))) == 2047) {
                        break label$2;
                    }
                    if (((this._loadDouble((_33_ + 32))) - (this._loadDouble((_33_ + 40)))) == ((double) (this._loadFloat((_33_ + 48))))) {
                        break label$2;
                    }
                    if ((this.fegetround.invoke()) == 0) {
                        break label$1;
                    }
                }
                while (false);
                label$3:
                do {
                    if ((this._loadInt((_33_ + 20))) > 896) {
                        break label$3;
                    }
                    if ((this._loadInt((_33_ + 20))) < 874) {
                        break label$3;
                    }
                    if ((this.fetestexcept.invoke(32)) == 0) {
                        break label$3;
                    }
                    this.feclearexcept.invoke(32);
                    this._storeFloat((_33_ + 16), (this._loadFloat((_33_ + 48))));
                    this._storeDouble((_33_ + 32), ((this._loadDouble((_33_ + 40))) + ((double) (this._loadFloat((_33_ + 16))))));
                    label$4:
                    do {
                        if ((this.fetestexcept.invoke(32)) == 0) {
                            break label$4;
                        }
                        this.feraiseexcept.invoke(16);
                        break label$3;
                    }
                    while (false);
                    this.feraiseexcept.invoke(32);
                }
                while (false);
                this._storeFloat((_33_ + 60), (this._storeFloat((_33_ + 48), ((float) (this._loadDouble((_33_ + 32)))))));
                break label$0;
            }
            while (false);
            this.fesetround.invoke(3072);
            this._storeDouble((_33_ + 8), (this._loadDouble((_33_ + 40))));
            this._storeDouble(_33_, ((this._loadDouble((_33_ + 8))) + ((double) (this._loadFloat((_33_ + 48))))));
            this.fesetround.invoke(0);
            label$5:
            do {
                if ((this._loadDouble((_33_ + 32))) != (this._loadDouble(_33_))) {
                    break label$5;
                }
                this._storeDouble((_33_ + 24), (this._loadDouble(_33_)));
                this._storeLong((_33_ + 24), ((this._loadLong((_33_ + 24))) + 1L));
                this._storeDouble(_33_, (this._loadDouble((_33_ + 24))));
            }
            while (false);
            this._storeFloat((_33_ + 60), (this._storeFloat((_33_ + 48), ((float) (this._loadDouble(_33_))))));
        }
        while (false);
        _32_ = this._loadFloat((_33_ + 60));
        this._storeInt((0 + 4), (_33_ + 64));
        return _32_;
    }

    public final void fmal(
            int _30_,
            long _31_,
            long _32_,
            long _33_,
            long _34_,
            long _35_,
            long _36_)
    {
        int _37_ = 0;
        double _38_ = 0.0;
        double _39_ = 0.0;
        this._storeLong(((_37_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 48), _31_);
        this._storeLong((_37_ + 32), _33_);
        this._storeLong((_37_ + 56), _32_);
        this._storeLong((_37_ + 40), _34_);
        this._storeLong((_37_ + 24), _36_);
        _38_ = this.__trunctfdf2.invoke((this._storeLong((_37_ + 16), _35_)), _36_);
        _39_ = this.__trunctfdf2.invoke((this._loadLong((_37_ + 32))), (this._loadLong((_37_ + 40))));
        this.__extenddftf2.invoke(_37_, (fma((this.__trunctfdf2.invoke((this._loadLong((_37_ + 48))), (this._loadLong((_37_ + 56))))), _39_, _38_)));
        this._storeLong((_30_ + 8), (this._loadLong((_37_ + 8))));
        this._storeLong(_30_, (this._loadLong(_37_)));
        this._storeInt((0 + 4), (_37_ + 64));
        return;
    }

    public final double fmax(double _30_, double _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 16), _30_);
        this._storeDouble((_32_ + 8), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((((__DOUBLE_BITS$2e$71((this._loadDouble((_32_ + 16))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 8))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((((__DOUBLE_BITS$2e$71((this._loadDouble((_32_ + 8))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                    break label$2;
                }
                this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 16))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if (((int) ((__DOUBLE_BITS$2e$71((this._loadDouble((_32_ + 16))))) >>> 63L)) == ((int) ((__DOUBLE_BITS$2e$71((this._loadDouble((_32_ + 8))))) >>> 63L))) {
                        break label$4;
                    }
                    if (((int) ((__DOUBLE_BITS$2e$71((this._loadDouble((_32_ + 16))))) >>> 63L)) == 0) {
                        break label$3;
                    }
                    this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 8))));
                    break label$0;
                }
                while (false);
                label$5:
                do {
                    label$6:
                    do {
                        if (((((_31_ = this._loadDouble((_32_ + 16))) >= (_30_ = this._loadDouble((_32_ + 8)))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                            break label$6;
                        }
                        _31_ = this._loadDouble((_32_ + 8));
                        break label$5;
                    }
                    while (false);
                    _31_ = this._loadDouble((_32_ + 16));
                }
                while (false);
                this._storeDouble((_32_ + 24), _31_);
                break label$0;
            }
            while (false);
            this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 16))));
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 24));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$70(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$71(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float fmaxf(float _30_, float _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeFloat((_32_ + 4), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((((__FLOAT_BITS$2e$72((this._loadFloat((_32_ + 8))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 4))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((((__FLOAT_BITS$2e$72((this._loadFloat((_32_ + 4))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                    break label$2;
                }
                this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 8))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if (((__FLOAT_BITS$2e$72((this._loadFloat((_32_ + 8))))) >>> 31) == ((__FLOAT_BITS$2e$72((this._loadFloat((_32_ + 4))))) >>> 31)) {
                        break label$4;
                    }
                    if (((__FLOAT_BITS$2e$72((this._loadFloat((_32_ + 8))))) >>> 31) == 0) {
                        break label$3;
                    }
                    this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 4))));
                    break label$0;
                }
                while (false);
                label$5:
                do {
                    label$6:
                    do {
                        if (((((_31_ = this._loadFloat((_32_ + 8))) >= (_30_ = this._loadFloat((_32_ + 4)))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                            break label$6;
                        }
                        _31_ = this._loadFloat((_32_ + 4));
                        break label$5;
                    }
                    while (false);
                    _31_ = this._loadFloat((_32_ + 8));
                }
                while (false);
                this._storeFloat((_32_ + 12), _31_);
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 8))));
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$72(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$73(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void fmaxl(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (fmax((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))), _36_)));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final int fmemopen(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 4), (((strchr((this._storeInt((_33_ + 16), _32_)), 43)) != 0) ? 1 : 0));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._loadInt((_33_ + 20))) == 0) {
                        break label$2;
                    }
                    if ((strchr(9872, (this._loadInt((this._loadInt((_33_ + 16))))))) == 0) {
                        break label$2;
                    }
                    if ((this._loadInt((_33_ + 24))) != 0) {
                        break label$1;
                    }
                    if (((this._loadInt((_33_ + 20))) & 4294967295L) < (-1176 & 4294967295L)) {
                        break label$1;
                    }
                    this._storeInt((__errno_location()), 12);
                    this._storeInt((_33_ + 28), 0);
                    break label$0;
                }
                while (false);
                this._storeInt((__errno_location()), 22);
                this._storeInt((_33_ + 28), 0);
                break label$0;
            }
            while (false);
            _32_ = 0;
            label$3:
            do {
                if ((this._loadInt((_33_ + 24))) != 0) {
                    break label$3;
                }
                _32_ = this._loadInt((_33_ + 20));
            }
            while (false);
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        if ((this._storeInt((_33_ + 12), (calloc((_32_ + 1196), 1)))) == 0) {
                            break label$6;
                        }
                        _30_ = this._storeInt((_33_ + 8), ((_31_ = this._loadInt((_33_ + 12))) + 144));
                        this._storeInt(((_32_ = this._loadInt((_33_ + 12))) + 84), _30_);
                        this._storeInt((_32_ + 60), -1);
                        this._storeInt((_32_ + 75), 255);
                        this._storeInt((_32_ + 44), (_31_ + 172));
                        _32_ = this._storeInt(((this._loadInt((_33_ + 12))) + 48), 1024);
                        label$7:
                        do {
                            if ((this._loadInt((_33_ + 24))) != 0) {
                                break label$7;
                            }
                            this._storeInt((_33_ + 24), ((this._loadInt(((this._loadInt((_33_ + 12))) + 44))) + _32_));
                        }
                        while (false);
                        this._storeInt(((_32_ = this._loadInt((_33_ + 8))) + 8), (this._loadInt((_33_ + 20))));
                        this._storeInt((_32_ + 12), (this._loadInt((_33_ + 24))));
                        this._storeInt((_32_ + 16), (this._loadInt((this._loadInt((_33_ + 16))))));
                        label$8:
                        do {
                            if ((this._loadInt((_33_ + 4))) != 0) {
                                break label$8;
                            }
                            _temp$0 = 8;
                            _temp$1 = 4;
                            _temp$2 = ((this._loadInt((this._loadInt((_33_ + 16))))) == 114) ? _temp$0 : _temp$1;
                            this._storeInt((this._loadInt((_33_ + 12))), _temp$2);
                        }
                        while (false);
                        if ((this._loadInt((this._loadInt((_33_ + 16))))) != 114) {
                            break label$5;
                        }
                        this._storeInt(((this._loadInt((_33_ + 8))) + 4), (this._loadInt((_33_ + 20))));
                        break label$4;
                    }
                    while (false);
                    this._storeInt((_33_ + 28), 0);
                    break label$0;
                }
                while (false);
                if ((this._loadInt((this._loadInt((_33_ + 16))))) != 97) {
                    break label$4;
                }
                _32_ = strnlen((this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 20))));
                this._storeInt((_31_ = this._loadInt((_33_ + 8))), (this._storeInt((_31_ + 4), _32_)));
            }
            while (false);
            this._storeInt(((_32_ = this._loadInt((_33_ + 12))) + 32), 2);
            this._storeInt((_32_ + 36), 3);
            this._storeInt((_32_ + 40), 4);
            this._storeInt(((this._loadInt((_33_ + 12))) + 12), 5);
            label$9:
            do {
                if ((this._loadInt((0 + 12944))) != 0) {
                    break label$9;
                }
                this._storeInt(((this._loadInt((_33_ + 12))) + 76), -1);
            }
            while (false);
            this._storeInt((_33_ + 28), (__ofl_add((this._loadInt((_33_ + 12))))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int mread(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        this._storeInt((_33_ + 16), (this._loadInt(((this._loadInt((_33_ + 28))) + 84))));
        this._storeInt((_33_ + 12), ((this._loadInt(((_32_ = this._loadInt((_33_ + 16))) + 4))) - (this._loadInt(_32_))));
        label$0:
        do {
            if (((this._loadInt((_32_ = this._loadInt((_33_ + 16))))) & 4294967295L) <= ((this._loadInt((_32_ + 4))) & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_33_ + 12), 0);
        }
        while (false);
        label$1:
        do {
            if (((this._loadInt((_33_ + 20))) & 4294967295L) <= ((this._loadInt((_33_ + 12))) & 4294967295L)) {
                break label$1;
            }
            this._storeInt((_33_ + 20), (this._loadInt((_33_ + 12))));
            this._storeInt((_32_ = this._loadInt((_33_ + 28))), ((this._loadInt(_32_)) | 16));
        }
        while (false);
        memcpy((this._loadInt((_33_ + 24))), ((this._loadInt(((_32_ = this._loadInt((_33_ + 16))) + 12))) + (this._loadInt(_32_))), (this._loadInt((_33_ + 20))));
        this._storeInt((_32_ = this._loadInt((_33_ + 16))), ((this._loadInt(_32_)) + (_32_ = this._loadInt((_33_ + 20)))));
        label$2:
        do {
            if (((this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) - _32_))) & 4294967295L) <= ((this._loadInt(((this._loadInt((_33_ + 28))) + 48))) & 4294967295L)) {
                break label$2;
            }
            this._storeInt((_33_ + 12), (this._loadInt(((this._loadInt((_33_ + 28))) + 48))));
        }
        while (false);
        this._storeInt(((_32_ = this._loadInt((_33_ + 28))) + 8), ((this._storeInt((_32_ + 4), (this._loadInt((_32_ + 44))))) + (this._loadInt((_33_ + 12)))));
        memcpy((this._loadInt(((this._loadInt((_33_ + 28))) + 4))), ((this._loadInt(((_32_ = this._loadInt((_33_ + 16))) + 12))) + (this._loadInt(_32_))), (this._loadInt((_33_ + 12))));
        this._storeInt((_32_ = this._loadInt((_33_ + 16))), ((this._loadInt(_32_)) + (this._loadInt((_33_ + 12)))));
        _32_ = this._loadInt((_33_ + 20));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int mwrite(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this._storeInt((_33_ + 12), (this._loadInt(((this._loadInt((_33_ + 24))) + 84))));
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_33_ + 4), ((this._loadInt(((_32_ = this._loadInt((_33_ + 24))) + 20))) - (this._loadInt((_32_ + 28)))))) == 0) {
                    break label$1;
                }
                if (((mwrite((_32_ = this._loadInt((_33_ + 24))), (this._storeInt((_32_ + 20), (this._loadInt((_32_ + 28))))), (this._loadInt((_33_ + 4))))) & 4294967295L) >= ((this._loadInt((_33_ + 4))) & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_33_ + 28), 0);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((this._loadInt(((this._loadInt((_33_ + 12))) + 16))) != 97) {
                    break label$2;
                }
                this._storeInt((_32_ = this._loadInt((_33_ + 12))), (this._loadInt((_32_ + 4))));
            }
            while (false);
            _32_ = this._storeInt((_33_ + 8), ((this._loadInt(((_32_ = this._loadInt((_33_ + 12))) + 8))) - (this._loadInt(_32_))));
            label$3:
            do {
                if (((this._loadInt((_33_ + 16))) & 4294967295L) <= (_32_ & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((_33_ + 16), (this._loadInt((_33_ + 8))));
            }
            while (false);
            memcpy(((this._loadInt(((_32_ = this._loadInt((_33_ + 12))) + 12))) + (this._loadInt(_32_))), (this._loadInt((_33_ + 20))), (this._loadInt((_33_ + 16))));
            this._storeInt((_32_ = this._loadInt((_33_ + 12))), ((this._loadInt(_32_)) + (this._loadInt((_33_ + 16)))));
            label$4:
            do {
                if (((this._loadInt(_32_)) & 4294967295L) <= ((this._loadInt((_32_ + 4))) & 4294967295L)) {
                    break label$4;
                }
                label$5:
                do {
                    if (((this._storeInt(((_32_ = this._loadInt((_33_ + 12))) + 4), (this._loadInt(_32_)))) & 4294967295L) >= ((this._loadInt((_32_ + 8))) & 4294967295L)) {
                        break label$5;
                    }
                    this._storeInt(((this._loadInt(((_32_ = this._loadInt((_33_ + 12))) + 12))) + (this._loadInt((_32_ + 4)))), 0);
                    break label$4;
                }
                while (false);
                if (((this._loadInt((this._loadInt((_33_ + 24))))) & 4) == 0) {
                    break label$4;
                }
                if ((this._loadInt(((this._loadInt((_33_ + 12))) + 8))) == 0) {
                    break label$4;
                }
                this._storeInt((((this._loadInt(((_32_ = this._loadInt((_33_ + 12))) + 12))) + (this._loadInt((_32_ + 8)))) + -1), 0);
            }
            while (false);
            this._storeInt((_33_ + 28), (this._loadInt((_33_ + 16))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final long mseek(int _30_, long _31_, int _32_)
    {
        int _33_ = 0;
        int _34_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 36), _30_);
        this._storeLong((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        this._storeInt((_33_ + 12), (this._loadInt(((this._loadInt((_33_ + 36))) + 84))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt((_33_ + 20))) & 4294967295L) >= (3 & 4294967295L)) {
                        break label$2;
                    }
                    _32_ = this._loadInt((_33_ + 20));
                    _30_ = this._storeInt(_33_, 0);
                    this._storeInt((_33_ + 4), (this._loadInt((_34_ = this._loadInt((_33_ + 12))))));
                    this._storeInt((_33_ + 8), (this._loadInt((_34_ + 4))));
                    _32_ = this._storeInt((_33_ + 16), (this._loadInt((_33_ + (_32_ << 2)))));
                    if ((this._loadLong((_33_ + 24))) < ((long) (_30_ - _32_))) {
                        break label$2;
                    }
                    if ((this._loadLong((_33_ + 24))) <= ((long) ((this._loadInt(((this._loadInt((_33_ + 12))) + 8))) - (this._loadInt((_33_ + 16)))))) {
                        break label$1;
                    }
                }
                while (false);
                this._storeInt((__errno_location()), 22);
                this._storeLong((_33_ + 40), -1L);
                break label$0;
            }
            while (false);
            this._storeLong((_33_ + 40), ((this._storeLong((this._loadInt((_33_ + 12))), ((this._loadLong((_33_ + 16))) + (this._loadLong((_33_ + 24)))))) & 4294967295L));
        }
        while (false);
        _31_ = this._loadLong((_33_ + 40));
        this._storeInt((0 + 4), (_33_ + 48));
        return _31_;
    }

    public final int mclose(int _30_)
    {
        this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_);
        return 0;
    }

    public final double fmin(double _30_, double _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 16), _30_);
        this._storeDouble((_32_ + 8), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((((__DOUBLE_BITS$2e$76((this._loadDouble((_32_ + 16))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 8))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((((__DOUBLE_BITS$2e$76((this._loadDouble((_32_ + 8))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                    break label$2;
                }
                this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 16))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if (((int) ((__DOUBLE_BITS$2e$76((this._loadDouble((_32_ + 16))))) >>> 63L)) == ((int) ((__DOUBLE_BITS$2e$76((this._loadDouble((_32_ + 8))))) >>> 63L))) {
                        break label$4;
                    }
                    if (((int) ((__DOUBLE_BITS$2e$76((this._loadDouble((_32_ + 16))))) >>> 63L)) == 0) {
                        break label$3;
                    }
                    this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 16))));
                    break label$0;
                }
                while (false);
                label$5:
                do {
                    label$6:
                    do {
                        if (((((_31_ = this._loadDouble((_32_ + 16))) >= (_30_ = this._loadDouble((_32_ + 8)))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                            break label$6;
                        }
                        _31_ = this._loadDouble((_32_ + 16));
                        break label$5;
                    }
                    while (false);
                    _31_ = this._loadDouble((_32_ + 8));
                }
                while (false);
                this._storeDouble((_32_ + 24), _31_);
                break label$0;
            }
            while (false);
            this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 8))));
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 24));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$75(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$76(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float fminf(float _30_, float _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeFloat((_32_ + 4), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((((__FLOAT_BITS$2e$77((this._loadFloat((_32_ + 8))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 4))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((((__FLOAT_BITS$2e$77((this._loadFloat((_32_ + 4))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                    break label$2;
                }
                this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 8))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if (((__FLOAT_BITS$2e$77((this._loadFloat((_32_ + 8))))) >>> 31) == ((__FLOAT_BITS$2e$77((this._loadFloat((_32_ + 4))))) >>> 31)) {
                        break label$4;
                    }
                    if (((__FLOAT_BITS$2e$77((this._loadFloat((_32_ + 8))))) >>> 31) == 0) {
                        break label$3;
                    }
                    this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 8))));
                    break label$0;
                }
                while (false);
                label$5:
                do {
                    label$6:
                    do {
                        if (((((_31_ = this._loadFloat((_32_ + 8))) >= (_30_ = this._loadFloat((_32_ + 4)))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                            break label$6;
                        }
                        _31_ = this._loadFloat((_32_ + 8));
                        break label$5;
                    }
                    while (false);
                    _31_ = this._loadFloat((_32_ + 4));
                }
                while (false);
                this._storeFloat((_32_ + 12), _31_);
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 4))));
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$77(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$78(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void fminl(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (fmin((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))), _36_)));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final double fmod(double _30_, double _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 64), _30_);
        this._storeDouble((_32_ + 56), _31_);
        this._storeDouble((_32_ + 48), (this._loadDouble((_32_ + 64))));
        this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 56))));
        this._storeLong((_32_ + 36), (((this._loadLong((_32_ + 48))) >>> 52L) & 2047L));
        this._storeLong((_32_ + 32), (((this._loadLong((_32_ + 40))) >>> 52L) & 2047L));
        this._storeLong((_32_ + 28), ((this._loadLong((_32_ + 48))) >>> 63L));
        this._storeLong((_32_ + 8), (this._loadLong((_32_ + 48))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadLong((_32_ + 40))) << 1L) == 0) {
                        break label$2;
                    }
                    if ((((__DOUBLE_BITS$2e$80((this._loadDouble((_32_ + 56))))) & 9223372036854775807L) & 4294967295L) > (9218868437227405312L & 4294967295L)) {
                        break label$2;
                    }
                    if ((this._loadInt((_32_ + 36))) != 2047) {
                        break label$1;
                    }
                }
                while (false);
                this._storeDouble((_32_ + 72), ((_31_ = (this._loadDouble((_32_ + 64))) * (this._loadDouble((_32_ + 56)))) / _31_));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    label$5:
                    do {
                        label$6:
                        do {
                            if ((((this._loadLong((_32_ + 8))) << 1L) & 4294967295L) > (((this._loadLong((_32_ + 40))) << 1L) & 4294967295L)) {
                                break label$6;
                            }
                            if (((this._loadLong((_32_ + 8))) << 1L) != ((this._loadLong((_32_ + 40))) << 1L)) {
                                break label$5;
                            }
                            this._storeDouble((_32_ + 72), ((this._loadDouble((_32_ + 64))) * 0.0));
                            break label$0;
                        }
                        while (false);
                        if ((this._loadInt((_32_ + 36))) == 0) {
                            break label$4;
                        }
                        this._storeLong((_32_ + 8), ((this._storeLong((_32_ + 8), ((this._loadLong((_32_ + 8))) & 4503599627370495L))) | 4503599627370496L));
                        break label$3;
                    }
                    while (false);
                    this._storeDouble((_32_ + 72), (this._loadDouble((_32_ + 64))));
                    break label$0;
                }
                while (false);
                this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 8))) << 12L));
                label$8:
                do {
                    label$7:
                    while (true) {
                        if (((this._loadLong((_32_ + 16))) >>> 63L) != 0L) {
                            break label$8;
                        }
                        this._storeInt((_32_ + 36), ((this._loadInt((_32_ + 36))) + -1));
                        this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 16))) << 1L));
                        continue label$7;
                    }
                }
                while (false);
                this._storeLong((_32_ + 8), ((this._loadLong((_32_ + 8))) << ((1 - (this._loadInt((_32_ + 36)))) & 4294967295L)));
            }
            while (false);
            label$9:
            do {
                label$10:
                do {
                    if ((this._loadInt((_32_ + 32))) == 0) {
                        break label$10;
                    }
                    this._storeLong((_32_ + 40), ((this._storeLong((_32_ + 40), ((this._loadLong((_32_ + 40))) & 4503599627370495L))) | 4503599627370496L));
                    break label$9;
                }
                while (false);
                this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 40))) << 12L));
                label$12:
                do {
                    label$11:
                    while (true) {
                        if (((this._loadLong((_32_ + 16))) >>> 63L) != 0L) {
                            break label$12;
                        }
                        this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 32))) + -1));
                        this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 16))) << 1L));
                        continue label$11;
                    }
                }
                while (false);
                this._storeLong((_32_ + 40), ((this._loadLong((_32_ + 40))) << ((1 - (this._loadInt((_32_ + 32)))) & 4294967295L)));
            }
            while (false);
            label$13:
            do {
                label$14:
                do {
                    label$15:
                    do {
                        label$16:
                        do {
                            label$18:
                            do {
                                label$17:
                                while (true) {
                                    if ((this._loadInt((_32_ + 36))) <= (this._loadInt((_32_ + 32)))) {
                                        break label$18;
                                    }
                                    label$19:
                                    do {
                                        if (((this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 8))) - (this._loadLong((_32_ + 40)))))) >>> 63L) != 0L) {
                                            break label$19;
                                        }
                                        if ((this._loadLong((_32_ + 16))) == 0L) {
                                            break label$16;
                                        }
                                        this._storeLong((_32_ + 8), (this._loadLong((_32_ + 16))));
                                    }
                                    while (false);
                                    this._storeLong((_32_ + 8), ((this._loadLong((_32_ + 8))) << 1L));
                                    this._storeInt((_32_ + 36), ((this._loadInt((_32_ + 36))) + -1));
                                    continue label$17;
                                }
                            }
                            while (false);
                            label$20:
                            do {
                                if (((this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 8))) - (this._loadLong((_32_ + 40)))))) >>> 63L) != 0L) {
                                    break label$20;
                                }
                                if ((this._loadLong((_32_ + 16))) == 0L) {
                                    break label$13;
                                }
                                this._storeLong((_32_ + 8), (this._loadLong((_32_ + 16))));
                            }
                            while (false);
                            label$22:
                            do {
                                label$21:
                                while (true) {
                                    if (((this._loadLong((_32_ + 8))) >>> 52L) != 0L) {
                                        break label$22;
                                    }
                                    this._storeLong((_32_ + 8), ((this._loadLong((_32_ + 8))) << 1L));
                                    this._storeInt((_32_ + 36), ((this._loadInt((_32_ + 36))) + -1));
                                    continue label$21;
                                }
                            }
                            while (false);
                            if ((this._loadInt((_32_ + 36))) < 1) {
                                break label$15;
                            }
                            this._storeLong((_32_ + 8), ((this._storeLong((_32_ + 8), ((this._loadLong((_32_ + 8))) + -4503599627370496L))) | ((this._loadLong((_32_ + 36))) << 52L)));
                            break label$14;
                        }
                        while (false);
                        this._storeDouble((_32_ + 72), ((this._loadDouble((_32_ + 64))) * 0.0));
                        break label$0;
                    }
                    while (false);
                    this._storeLong((_32_ + 8), ((this._loadLong((_32_ + 8))) >>> ((1 - (this._loadInt((_32_ + 36)))) & 4294967295L)));
                }
                while (false);
                this._storeLong((_32_ + 48), (this._storeLong((_32_ + 8), ((this._loadLong((_32_ + 8))) | ((this._loadLong((_32_ + 28))) << 63L)))));
                this._storeDouble((_32_ + 72), (this._loadDouble((_32_ + 48))));
                break label$0;
            }
            while (false);
            this._storeDouble((_32_ + 72), ((this._loadDouble((_32_ + 64))) * 0.0));
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 72));
        this._storeInt((0 + 4), (_32_ + 80));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$79(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$80(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float fmodf(float _30_, float _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeFloat((_32_ + 36), _31_);
        this._storeFloat((_32_ + 32), (this._loadFloat((_32_ + 40))));
        this._storeFloat((_32_ + 24), (this._loadFloat((_32_ + 36))));
        this._storeInt((_32_ + 20), (((this._loadInt((_32_ + 32))) >>> 23) & 255));
        this._storeInt((_32_ + 16), (((this._loadInt((_32_ + 24))) >>> 23) & 255));
        this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 32))) & -2147483648));
        this._storeInt((_32_ + 4), (this._loadInt((_32_ + 32))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt((_32_ + 24))) << 1) == 0) {
                        break label$2;
                    }
                    if ((((__FLOAT_BITS$2e$81((this._loadFloat((_32_ + 36))))) & 2147483647) & 4294967295L) > (2139095040 & 4294967295L)) {
                        break label$2;
                    }
                    if ((this._loadInt((_32_ + 20))) != 255) {
                        break label$1;
                    }
                }
                while (false);
                this._storeFloat((_32_ + 44), ((_31_ = (this._loadFloat((_32_ + 40))) * (this._loadFloat((_32_ + 36)))) / _31_));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    label$5:
                    do {
                        label$6:
                        do {
                            if ((((this._loadInt((_32_ + 4))) << 1) & 4294967295L) > (((this._loadInt((_32_ + 24))) << 1) & 4294967295L)) {
                                break label$6;
                            }
                            if (((this._loadInt((_32_ + 4))) << 1) != ((this._loadInt((_32_ + 24))) << 1)) {
                                break label$5;
                            }
                            this._storeFloat((_32_ + 44), ((this._loadFloat((_32_ + 40))) * 0.0f));
                            break label$0;
                        }
                        while (false);
                        if ((this._loadInt((_32_ + 20))) == 0) {
                            break label$4;
                        }
                        this._storeInt((_32_ + 4), ((this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) & 8388607))) | 8388608));
                        break label$3;
                    }
                    while (false);
                    this._storeFloat((_32_ + 44), (this._loadFloat((_32_ + 40))));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 4))) << 9));
                label$8:
                do {
                    label$7:
                    while (true) {
                        if (((this._loadInt((_32_ + 8))) >>> 31) != 0) {
                            break label$8;
                        }
                        this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + -1));
                        this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 8))) << 1));
                        continue label$7;
                    }
                }
                while (false);
                this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) << (1 - (this._loadInt((_32_ + 20))))));
            }
            while (false);
            label$9:
            do {
                label$10:
                do {
                    if ((this._loadInt((_32_ + 16))) == 0) {
                        break label$10;
                    }
                    this._storeInt((_32_ + 24), ((this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) & 8388607))) | 8388608));
                    break label$9;
                }
                while (false);
                this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 24))) << 9));
                label$12:
                do {
                    label$11:
                    while (true) {
                        if (((this._loadInt((_32_ + 8))) >>> 31) != 0) {
                            break label$12;
                        }
                        this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) + -1));
                        this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 8))) << 1));
                        continue label$11;
                    }
                }
                while (false);
                this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) << (1 - (this._loadInt((_32_ + 16))))));
            }
            while (false);
            label$13:
            do {
                label$14:
                do {
                    label$15:
                    do {
                        label$16:
                        do {
                            label$18:
                            do {
                                label$17:
                                while (true) {
                                    if ((this._loadInt((_32_ + 20))) <= (this._loadInt((_32_ + 16)))) {
                                        break label$18;
                                    }
                                    label$19:
                                    do {
                                        if (((this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 4))) - (this._loadInt((_32_ + 24)))))) >>> 31) != 0) {
                                            break label$19;
                                        }
                                        if ((this._loadInt((_32_ + 8))) == 0) {
                                            break label$16;
                                        }
                                        this._storeInt((_32_ + 4), (this._loadInt((_32_ + 8))));
                                    }
                                    while (false);
                                    this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) << 1));
                                    this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + -1));
                                    continue label$17;
                                }
                            }
                            while (false);
                            label$20:
                            do {
                                if (((this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 4))) - (this._loadInt((_32_ + 24)))))) >>> 31) != 0) {
                                    break label$20;
                                }
                                if ((this._loadInt((_32_ + 8))) == 0) {
                                    break label$13;
                                }
                                this._storeInt((_32_ + 4), (this._loadInt((_32_ + 8))));
                            }
                            while (false);
                            label$22:
                            do {
                                label$21:
                                while (true) {
                                    if (((this._loadInt((_32_ + 4))) >>> 23) != 0) {
                                        break label$22;
                                    }
                                    this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) << 1));
                                    this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + -1));
                                    continue label$21;
                                }
                            }
                            while (false);
                            if ((this._loadInt((_32_ + 20))) < 1) {
                                break label$15;
                            }
                            this._storeInt((_32_ + 4), ((this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) + -8388608))) | ((this._loadInt((_32_ + 20))) << 23)));
                            break label$14;
                        }
                        while (false);
                        this._storeFloat((_32_ + 44), ((this._loadFloat((_32_ + 40))) * 0.0f));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) >>> (1 - (this._loadInt((_32_ + 20))))));
                }
                while (false);
                this._storeInt((_32_ + 32), (this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) | (this._loadInt((_32_ + 12)))))));
                this._storeFloat((_32_ + 44), (this._loadFloat((_32_ + 32))));
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 44), ((this._loadFloat((_32_ + 40))) * 0.0f));
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 44));
        this._storeInt((0 + 4), (_32_ + 48));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$81(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$82(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void fmodl(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (fmod((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))), _36_)));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final int fnmatch(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._loadInt((_33_ + 16))) & 1) == 0) {
                            break label$3;
                        }
                        label$5:
                        do {
                            label$4:
                            while (true) {
                                this._storeInt((_33_ + 12), (this._loadInt((_33_ + 20))));
                                label$7:
                                do {
                                    label$6:
                                    while (true) {
                                        _32_ = 0;
                                        label$8:
                                        do {
                                            if ((this._loadInt((this._loadInt((_33_ + 12))))) == 0) {
                                                break label$8;
                                            }
                                            _32_ = ((this._loadInt((this._loadInt((_33_ + 12))))) != 47) ? 1 : 0;
                                        }
                                        while (false);
                                        if (_32_ == 0) {
                                            break label$7;
                                        }
                                        this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 1));
                                        continue label$6;
                                    }
                                }
                                while (false);
                                this._storeInt((_33_ + 8), (this._loadInt((_33_ + 24))));
                                label$10:
                                do {
                                    label$9:
                                    while (true) {
                                        _32_ = 0;
                                        label$11:
                                        do {
                                            if ((this._storeInt(_33_, (pat_next((this._loadInt((_33_ + 8))), -1, (_33_ + 4), (this._loadInt((_33_ + 16))))))) == 0) {
                                                break label$11;
                                            }
                                            _32_ = ((this._loadInt(_33_)) != 47) ? 1 : 0;
                                        }
                                        while (false);
                                        if (_32_ == 0) {
                                            break label$10;
                                        }
                                        this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + (this._loadInt((_33_ + 4)))));
                                        continue label$9;
                                    }
                                }
                                while (false);
                                label$12:
                                do {
                                    if ((this._loadInt(_33_)) == (this._loadInt((this._loadInt((_33_ + 12)))))) {
                                        break label$12;
                                    }
                                    if ((this._loadInt((this._loadInt((_33_ + 12))))) == 0) {
                                        break label$2;
                                    }
                                    if (((this._loadInt((_33_ + 16))) & 8) == 0) {
                                        break label$2;
                                    }
                                }
                                while (false);
                                if ((fnmatch_internal((_32_ = this._loadInt((_33_ + 24))), ((this._loadInt((_33_ + 8))) - _32_), (_32_ = this._loadInt((_33_ + 20))), ((this._loadInt((_33_ + 12))) - _32_), (this._loadInt((_33_ + 16))))) != 0) {
                                    break label$1;
                                }
                                if ((this._loadInt(_33_)) == 0) {
                                    break label$5;
                                }
                                this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 12))) + 1));
                                this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 8))) + (this._loadInt((_33_ + 4)))));
                                continue label$4;
                            }
                        }
                        while (false);
                        this._storeInt((_33_ + 28), 0);
                        break label$0;
                    }
                    while (false);
                    label$13:
                    do {
                        if (((this._loadInt((_33_ + 16))) & 8) == 0) {
                            break label$13;
                        }
                        this._storeInt((_33_ + 12), (this._loadInt((_33_ + 20))));
                        label$15:
                        do {
                            label$14:
                            while (true) {
                                if ((this._loadInt((this._loadInt((_33_ + 12))))) == 0) {
                                    break label$13;
                                }
                                label$16:
                                do {
                                    if ((this._loadInt((this._loadInt((_33_ + 12))))) != 47) {
                                        break label$16;
                                    }
                                    if ((fnmatch_internal((this._loadInt((_33_ + 24))), -1, (_32_ = this._loadInt((_33_ + 20))), ((this._loadInt((_33_ + 12))) - _32_), (this._loadInt((_33_ + 16))))) == 0) {
                                        break label$15;
                                    }
                                }
                                while (false);
                                this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 1));
                                continue label$14;
                            }
                        }
                        while (false);
                        this._storeInt((_33_ + 28), 0);
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_33_ + 28), (fnmatch_internal((this._loadInt((_33_ + 24))), -1, (this._loadInt((_33_ + 20))), -1, (this._loadInt((_33_ + 16))))));
                    break label$0;
                }
                while (false);
                this._storeInt((_33_ + 28), 1);
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 28), 1);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int pat_next(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_34_ + 36), _31_);
        this._storeInt((_34_ + 32), _32_);
        this._storeInt((_34_ + 28), _33_);
        _33_ = this._storeInt((_34_ + 24), 0);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    if ((this._loadInt((_34_ + 36))) == 0) {
                                        break label$6;
                                    }
                                    if ((this._loadInt((this._loadInt((_34_ + 40))))) == 0) {
                                        break label$6;
                                    }
                                    this._storeInt((this._loadInt((_34_ + 32))), 1);
                                    label$7:
                                    do {
                                        if ((this._loadInt((this._loadInt((_34_ + 40))))) != 92) {
                                            break label$7;
                                        }
                                        if ((this._loadInt(((this._loadInt((_34_ + 40))) + 1))) == 0) {
                                            break label$7;
                                        }
                                        if (((this._loadInt((_34_ + 28))) & 2) == 0) {
                                            break label$2;
                                        }
                                    }
                                    while (false);
                                    if ((this._loadInt((this._loadInt((_34_ + 40))))) != 91) {
                                        break label$5;
                                    }
                                    this._storeInt((_34_ + 20), 1);
                                    label$8:
                                    do {
                                        if (((this._loadInt((_34_ + 36))) & 4294967295L) < (2 & 4294967295L)) {
                                            break label$8;
                                        }
                                        label$9:
                                        do {
                                            if ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) == 94) {
                                                break label$9;
                                            }
                                            if ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) != 33) {
                                                break label$8;
                                            }
                                        }
                                        while (false);
                                        this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 20))) + 1));
                                    }
                                    while (false);
                                    label$10:
                                    do {
                                        if (((this._loadInt((_34_ + 20))) & 4294967295L) >= ((this._loadInt((_34_ + 36))) & 4294967295L)) {
                                            break label$10;
                                        }
                                        if ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) != 93) {
                                            break label$10;
                                        }
                                        this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 20))) + 1));
                                    }
                                    while (false);
                                    label$12:
                                    do {
                                        label$11:
                                        while (true) {
                                            _33_ = 0;
                                            label$13:
                                            do {
                                                if (((this._loadInt((_34_ + 20))) & 4294967295L) >= ((this._loadInt((_34_ + 36))) & 4294967295L)) {
                                                    break label$13;
                                                }
                                                if ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) == 0) {
                                                    break label$13;
                                                }
                                                _33_ = ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) != 93) ? 1 : 0;
                                            }
                                            while (false);
                                            if (_33_ == 0) {
                                                break label$12;
                                            }
                                            label$14:
                                            do {
                                                if ((((this._loadInt((_34_ + 20))) + 1) & 4294967295L) >= ((this._loadInt((_34_ + 36))) & 4294967295L)) {
                                                    break label$14;
                                                }
                                                if ((this._loadInt((((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))) + 1))) == 0) {
                                                    break label$14;
                                                }
                                                if ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) != 91) {
                                                    break label$14;
                                                }
                                                label$15:
                                                do {
                                                    if ((this._loadInt((((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))) + 1))) == 58) {
                                                        break label$15;
                                                    }
                                                    if ((this._loadInt((((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))) + 1))) == 46) {
                                                        break label$15;
                                                    }
                                                    if ((this._loadInt((((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))) + 1))) != 61) {
                                                        break label$14;
                                                    }
                                                }
                                                while (false);
                                                this._storeInt((_34_ + 16), (this._loadInt((((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))) + 1))));
                                                label$16:
                                                do {
                                                    if (((this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 20))) + 2))) & 4294967295L) >= ((this._loadInt((_34_ + 36))) & 4294967295L)) {
                                                        break label$16;
                                                    }
                                                    if ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) == 0) {
                                                        break label$16;
                                                    }
                                                    this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 20))) + 1));
                                                }
                                                while (false);
                                                label$18:
                                                do {
                                                    label$17:
                                                    while (true) {
                                                        _33_ = 0;
                                                        label$19:
                                                        do {
                                                            if (((this._loadInt((_34_ + 20))) & 4294967295L) >= ((this._loadInt((_34_ + 36))) & 4294967295L)) {
                                                                break label$19;
                                                            }
                                                            if ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) == 0) {
                                                                break label$19;
                                                            }
                                                            _33_ = 1;
                                                            if ((this._loadInt((((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))) + -1))) != (this._loadInt((_34_ + 16)))) {
                                                                break label$19;
                                                            }
                                                            _33_ = ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) != 93) ? 1 : 0;
                                                        }
                                                        while (false);
                                                        if (_33_ == 0) {
                                                            break label$18;
                                                        }
                                                        this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 20))) + 1));
                                                        continue label$17;
                                                    }
                                                }
                                                while (false);
                                                if ((this._loadInt((_34_ + 20))) == (this._loadInt((_34_ + 36)))) {
                                                    break label$12;
                                                }
                                                if ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) == 0) {
                                                    break label$12;
                                                }
                                            }
                                            while (false);
                                            this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 20))) + 1));
                                            continue label$11;
                                        }
                                    }
                                    while (false);
                                    if ((this._loadInt((_34_ + 20))) == (this._loadInt((_34_ + 36)))) {
                                        break label$4;
                                    }
                                    if ((this._loadInt(((this._loadInt((_34_ + 40))) + (this._loadInt((_34_ + 20)))))) == 0) {
                                        break label$4;
                                    }
                                    this._storeInt((this._loadInt((_34_ + 32))), ((this._loadInt((_34_ + 20))) + 1));
                                    this._storeInt((_34_ + 44), -3);
                                    break label$0;
                                }
                                while (false);
                                this._storeInt((_34_ + 44), (this._storeInt((this._loadInt((_34_ + 32))), _33_)));
                                break label$0;
                            }
                            while (false);
                            if ((this._loadInt((this._loadInt((_34_ + 40))))) != 42) {
                                break label$3;
                            }
                            this._storeInt((_34_ + 44), -5);
                            break label$0;
                        }
                        while (false);
                        this._storeInt((this._loadInt((_34_ + 32))), 1);
                        this._storeInt((_34_ + 44), 91);
                        break label$0;
                    }
                    while (false);
                    if ((this._loadInt((this._loadInt((_34_ + 40))))) != 63) {
                        break label$1;
                    }
                    this._storeInt((_34_ + 44), -4);
                    break label$0;
                }
                while (false);
                this._storeInt((this._loadInt((_34_ + 32))), 2);
                this._storeInt((_34_ + 40), ((this._loadInt((_34_ + 40))) + 1));
                this._storeInt((_34_ + 24), 1);
            }
            while (false);
            label$20:
            do {
                label$21:
                do {
                    if (((this._loadInt((this._loadInt((_34_ + 40))))) & 4294967295L) < (128 & 4294967295L)) {
                        break label$21;
                    }
                    if ((this._storeInt((_34_ + 8), (this.mbtowc.invoke((_34_ + 12), (this._loadInt((_34_ + 40))), (this._loadInt((_34_ + 36))))))) <= -1) {
                        break label$20;
                    }
                    this._storeInt((this._loadInt((_34_ + 32))), ((this._loadInt((_34_ + 8))) + (this._loadInt((_34_ + 24)))));
                    this._storeInt((_34_ + 44), (this._loadInt((_34_ + 12))));
                    break label$0;
                }
                while (false);
                this._storeInt((_34_ + 44), (this._loadInt((this._loadInt((_34_ + 40))))));
                break label$0;
            }
            while (false);
            this._storeInt((this._loadInt((_34_ + 32))), 0);
            this._storeInt((_34_ + 44), -2);
        }
        while (false);
        _33_ = this._loadInt((_34_ + 44));
        this._storeInt((0 + 4), (_34_ + 48));
        return _33_;
    }

    public final int fnmatch_internal(int _30_, int _31_, int _32_, int _33_, int _34_)
    {
        int _35_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        this._storeInt(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 72), _30_);
        this._storeInt((_35_ + 68), _31_);
        this._storeInt((_35_ + 64), _32_);
        this._storeInt((_35_ + 60), _33_);
        this._storeInt((_35_ + 56), _34_);
        _33_ = this._storeInt((_35_ + 20), 0);
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_35_ + 56))) & 4) == 0) {
                    break label$1;
                }
                if ((this._loadInt((this._loadInt((_35_ + 64))))) != 46) {
                    break label$1;
                }
                if ((this._loadInt((this._loadInt((_35_ + 72))))) == 46) {
                    break label$1;
                }
                this._storeInt((_35_ + 76), 1);
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            label$6:
                            do {
                                label$7:
                                do {
                                    label$8:
                                    do {
                                        label$10:
                                        do {
                                            label$9:
                                            while (true) {
                                                if ((_34_ = this._storeInt((_35_ + 16), (pat_next((this._loadInt((_35_ + 72))), (this._loadInt((_35_ + 68))), (_35_ + 28), (this._loadInt((_35_ + 56))))))) == -5) {
                                                    break label$7;
                                                }
                                                if (_34_ == -2) {
                                                    break label$6;
                                                }
                                                if ((this._storeInt((_35_ + 12), (str_next((this._loadInt((_35_ + 64))), (this._loadInt((_35_ + 60))), (_35_ + 24))))) <= _33_) {
                                                    break label$8;
                                                }
                                                this._storeInt((_35_ + 64), ((this._loadInt((_35_ + 64))) + (this._loadInt((_35_ + 24)))));
                                                this._storeInt((_35_ + 60), ((this._loadInt((_35_ + 60))) - (this._loadInt((_35_ + 24)))));
                                                label$11:
                                                do {
                                                    label$12:
                                                    do {
                                                        if (((this._loadInt((_35_ + 56))) & 16) == 0) {
                                                            break label$12;
                                                        }
                                                        _34_ = casefold((this._loadInt((_35_ + 12))));
                                                        break label$11;
                                                    }
                                                    while (false);
                                                    _34_ = this._loadInt((_35_ + 12));
                                                }
                                                while (false);
                                                this._storeInt((_35_ + 8), _34_);
                                                label$13:
                                                do {
                                                    label$14:
                                                    do {
                                                        if ((this._loadInt((_35_ + 16))) != -3) {
                                                            break label$14;
                                                        }
                                                        if ((match_bracket((this._loadInt((_35_ + 72))), (this._loadInt((_35_ + 12))), (this._loadInt((_35_ + 8))))) != 0) {
                                                            break label$13;
                                                        }
                                                        break label$5;
                                                    }
                                                    while (false);
                                                    if ((this._loadInt((_35_ + 16))) == -4) {
                                                        break label$13;
                                                    }
                                                    if ((this._loadInt((_35_ + 12))) == (this._loadInt((_35_ + 16)))) {
                                                        break label$13;
                                                    }
                                                    if ((this._loadInt((_35_ + 8))) != (this._loadInt((_35_ + 16)))) {
                                                        break label$10;
                                                    }
                                                }
                                                while (false);
                                                this._storeInt((_35_ + 72), ((this._loadInt((_35_ + 72))) + (this._loadInt((_35_ + 28)))));
                                                this._storeInt((_35_ + 68), ((this._loadInt((_35_ + 68))) - (this._loadInt((_35_ + 28)))));
                                                continue label$9;
                                            }
                                        }
                                        while (false);
                                        this._storeInt((_35_ + 76), 1);
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeInt((_35_ + 76), (((this._loadInt((_35_ + 16))) != 0) ? 1 : 0));
                                    break label$0;
                                }
                                while (false);
                                this._storeInt((_35_ + 72), ((this._loadInt((_35_ + 72))) + 1));
                                _34_ = this._storeInt((_35_ + 68), ((this._loadInt((_35_ + 68))) + -1));
                                this._storeInt((_35_ + 44), ((this._storeInt((_35_ + 68), (strnlen((this._loadInt((_35_ + 72))), _34_)))) + (this._loadInt((_35_ + 72)))));
                                this._storeInt((_35_ + 52), (this._storeInt((_35_ + 48), (this._loadInt((_35_ + 72))))));
                                label$15:
                                while (true) {
                                    if (((this._loadInt((_35_ + 52))) & 4294967295L) >= ((this._loadInt((_35_ + 44))) & 4294967295L)) {
                                        break label$4;
                                    }
                                    label$17:
                                    do {
                                        label$18:
                                        do {
                                            if ((_34_ = pat_next((_34_ = this._loadInt((_35_ + 52))), ((this._loadInt((_35_ + 44))) - _34_), (_35_ + 28), (this._loadInt((_35_ + 56))))) == -5) {
                                                break label$18;
                                            }
                                            if (_34_ == -2) {
                                                break label$3;
                                            }
                                            this._storeInt((_35_ + 20), ((this._loadInt((_35_ + 20))) + 1));
                                            break label$17;
                                        }
                                        while (false);
                                        this._storeInt((_35_ + 20), 0);
                                        this._storeInt((_35_ + 48), ((this._loadInt((_35_ + 52))) + 1));
                                    }
                                    while (false);
                                    this._storeInt((_35_ + 52), ((this._loadInt((_35_ + 52))) + (this._loadInt((_35_ + 28)))));
                                    continue label$15;
                                }
                            }
                            while (false);
                            this._storeInt((_35_ + 76), 1);
                            break label$0;
                        }
                        while (false);
                        this._storeInt((_35_ + 76), 1);
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_35_ + 32), ((this._storeInt((_35_ + 60), (strnlen((this._loadInt((_35_ + 64))), (this._loadInt((_35_ + 60))))))) + (this._loadInt((_35_ + 64)))));
                    if (((this._loadInt((_35_ + 60))) & 4294967295L) >= ((this._loadInt((_35_ + 20))) & 4294967295L)) {
                        break label$2;
                    }
                    this._storeInt((_35_ + 76), 1);
                    break label$0;
                }
                while (false);
                this._storeInt((_35_ + 76), 1);
                break label$0;
            }
            while (false);
            this._storeInt((_35_ + 40), (this._loadInt((_35_ + 32))));
            label$20:
            do {
                label$19:
                while (true) {
                    _34_ = 0;
                    label$21:
                    do {
                        if (((this._loadInt((_35_ + 40))) & 4294967295L) <= ((this._loadInt((_35_ + 64))) & 4294967295L)) {
                            break label$21;
                        }
                        _34_ = ((this._loadInt((_35_ + 20))) != 0) ? 1 : 0;
                    }
                    while (false);
                    label$22:
                    do {
                        label$23:
                        do {
                            if (_34_ == 0) {
                                break label$23;
                            }
                            label$24:
                            do {
                                label$25:
                                do {
                                    if (((this._loadInt(((this._loadInt((_35_ + 40))) + -1))) & 4294967295L) < (128 & 4294967295L)) {
                                        break label$25;
                                    }
                                    _temp$0 = 4;
                                    _temp$1 = 1;
                                    _temp$2 = ((this._loadInt((this._loadInt(((__pthread_self$2e$83()) + 156))))) != 0) ? _temp$0 : _temp$1;
                                    _temp$2 = (_temp$2 != 1) ? 1 : 0;
                                    if (_temp$2 != 0) {
                                        break label$24;
                                    }
                                }
                                while (false);
                                this._storeInt((_35_ + 40), ((this._loadInt((_35_ + 40))) + -1));
                                break label$22;
                            }
                            while (false);
                            label$26:
                            while (true) {
                                _34_ = 0;
                                label$28:
                                do {
                                    if ((((this._loadInt((this._storeInt((_35_ + 40), ((this._loadInt((_35_ + 40))) + -1))))) + -128) & 4294967295L) > (63 & 4294967295L)) {
                                        break label$28;
                                    }
                                    _34_ = (((this._loadInt((_35_ + 40))) & 4294967295L) > ((this._loadInt((_35_ + 64))) & 4294967295L)) ? 1 : 0;
                                }
                                while (false);
                                if (_34_ != 0) {
                                    continue label$26;
                                }
                                break label$22;
                            }
                        }
                        while (false);
                        label$29:
                        do {
                            if ((this._loadInt((_35_ + 20))) == 0) {
                                break label$29;
                            }
                            this._storeInt((_35_ + 76), 1);
                            break label$20;
                        }
                        while (false);
                        this._storeInt((_35_ + 36), (this._loadInt((_35_ + 40))));
                        this._storeInt((_35_ + 52), (this._loadInt((_35_ + 48))));
                        label$30:
                        do {
                            label$31:
                            do {
                                label$32:
                                do {
                                    label$33$end:
                                    do {
                                        label$33:
                                        while (true) {
                                            this._storeInt((_35_ + 16), (pat_next((_34_ = this._loadInt((_35_ + 52))), ((this._loadInt((_35_ + 44))) - _34_), (_35_ + 28), (this._loadInt((_35_ + 56))))));
                                            this._storeInt((_35_ + 52), ((this._loadInt((_35_ + 52))) + (this._loadInt((_35_ + 28)))));
                                            if ((this._storeInt((_35_ + 12), (str_next((_34_ = this._loadInt((_35_ + 40))), ((this._loadInt((_35_ + 32))) - _34_), (_35_ + 24))))) <= 0) {
                                                break label$32;
                                            }
                                            this._storeInt((_35_ + 40), ((this._loadInt((_35_ + 40))) + (this._loadInt((_35_ + 24)))));
                                            label$35:
                                            do {
                                                label$36:
                                                do {
                                                    if (((this._loadInt((_35_ + 56))) & 16) == 0) {
                                                        break label$36;
                                                    }
                                                    _34_ = casefold((this._loadInt((_35_ + 12))));
                                                    break label$35;
                                                }
                                                while (false);
                                                _34_ = this._loadInt((_35_ + 12));
                                            }
                                            while (false);
                                            this._storeInt((_35_ + 8), _34_);
                                            label$37:
                                            do {
                                                if ((this._loadInt((_35_ + 16))) != -3) {
                                                    break label$37;
                                                }
                                                if ((match_bracket(((this._loadInt((_35_ + 52))) - (this._loadInt((_35_ + 28)))), (this._loadInt((_35_ + 12))), (this._loadInt((_35_ + 8))))) != 0) {
                                                    continue label$33;
                                                }
                                                break label$31;
                                            }
                                            while (false);
                                            if ((this._loadInt((_35_ + 16))) == -4) {
                                                continue label$33;
                                            }
                                            if ((this._loadInt((_35_ + 12))) == (this._loadInt((_35_ + 16)))) {
                                                continue label$33;
                                            }
                                            if ((this._loadInt((_35_ + 8))) == (this._loadInt((_35_ + 16)))) {
                                                continue label$33;
                                            }
                                            break label$33$end;
                                        }
                                    }
                                    while (false);
                                    this._storeInt((_35_ + 76), 1);
                                    break label$20;
                                }
                                while (false);
                                if ((this._loadInt((_35_ + 16))) == 0) {
                                    break label$30;
                                }
                                this._storeInt((_35_ + 76), 1);
                                break label$20;
                            }
                            while (false);
                            this._storeInt((_35_ + 76), 1);
                            break label$20;
                        }
                        while (false);
                        this._storeInt((_35_ + 32), (this._loadInt((_35_ + 36))));
                        this._storeInt((_35_ + 44), (this._loadInt((_35_ + 48))));
                        label$38:
                        do {
                            label$40:
                            do {
                                label$39:
                                while (true) {
                                    if (((this._loadInt((_35_ + 72))) & 4294967295L) >= ((this._loadInt((_35_ + 44))) & 4294967295L)) {
                                        break label$38;
                                    }
                                    this._storeInt((_35_ + 52), (this._loadInt((_35_ + 72))));
                                    this._storeInt((_35_ + 40), (this._loadInt((_35_ + 64))));
                                    label$41:
                                    do {
                                        label$43:
                                        do {
                                            label$42:
                                            while (true) {
                                                this._storeInt((_35_ + 16), (pat_next((_34_ = this._loadInt((_35_ + 52))), ((this._loadInt((_35_ + 44))) - _34_), (_35_ + 28), (this._loadInt((_35_ + 56))))));
                                                this._storeInt((_35_ + 52), ((this._loadInt((_35_ + 52))) + (this._loadInt((_35_ + 28)))));
                                                if ((this._loadInt((_35_ + 16))) == -5) {
                                                    break label$43;
                                                }
                                                if ((this._storeInt((_35_ + 12), (str_next((_34_ = this._loadInt((_35_ + 40))), ((this._loadInt((_35_ + 32))) - _34_), (_35_ + 24))))) == 0) {
                                                    break label$40;
                                                }
                                                label$44:
                                                do {
                                                    label$45:
                                                    do {
                                                        if (((this._loadInt((_35_ + 56))) & 16) == 0) {
                                                            break label$45;
                                                        }
                                                        _34_ = casefold((this._loadInt((_35_ + 12))));
                                                        break label$44;
                                                    }
                                                    while (false);
                                                    _34_ = this._loadInt((_35_ + 12));
                                                }
                                                while (false);
                                                this._storeInt((_35_ + 8), _34_);
                                                label$46:
                                                do {
                                                    label$47:
                                                    do {
                                                        if ((this._loadInt((_35_ + 16))) != -3) {
                                                            break label$47;
                                                        }
                                                        if ((match_bracket(((this._loadInt((_35_ + 52))) - (this._loadInt((_35_ + 28)))), (this._loadInt((_35_ + 12))), (this._loadInt((_35_ + 8))))) != 0) {
                                                            break label$46;
                                                        }
                                                        break label$41;
                                                    }
                                                    while (false);
                                                    if ((this._loadInt((_35_ + 16))) == -4) {
                                                        break label$46;
                                                    }
                                                    if ((this._loadInt((_35_ + 12))) == (this._loadInt((_35_ + 16)))) {
                                                        break label$46;
                                                    }
                                                    if ((this._loadInt((_35_ + 8))) != (this._loadInt((_35_ + 16)))) {
                                                        break label$41;
                                                    }
                                                }
                                                while (false);
                                                this._storeInt((_35_ + 40), ((this._loadInt((_35_ + 40))) + (this._loadInt((_35_ + 24)))));
                                                continue label$42;
                                            }
                                        }
                                        while (false);
                                        this._storeInt((_35_ + 72), (this._loadInt((_35_ + 52))));
                                        this._storeInt((_35_ + 64), (this._loadInt((_35_ + 40))));
                                    }
                                    while (false);
                                    if ((this._loadInt((_35_ + 16))) == -5) {
                                        continue label$39;
                                    }
                                    label$48:
                                    do {
                                        if ((this._storeInt((_35_ + 12), (str_next((_34_ = this._loadInt((_35_ + 64))), ((this._loadInt((_35_ + 32))) - _34_), (_35_ + 24))))) < 1) {
                                            break label$48;
                                        }
                                        this._storeInt((_35_ + 64), ((this._loadInt((_35_ + 64))) + (this._loadInt((_35_ + 24)))));
                                        continue label$39;
                                    }
                                    while (false);
                                    this._storeInt((_35_ + 64), ((this._loadInt((_35_ + 64))) + 1));
                                    label$49:
                                    while (true) {
                                        if ((str_next((_34_ = this._loadInt((_35_ + 64))), ((this._loadInt((_35_ + 32))) - _34_), (_35_ + 24))) > -1) {
                                            continue label$39;
                                        }
                                        this._storeInt((_35_ + 64), ((this._loadInt((_35_ + 64))) + 1));
                                        continue label$49;
                                    }
                                }
                            }
                            while (false);
                            this._storeInt((_35_ + 76), 1);
                            break label$20;
                        }
                        while (false);
                        this._storeInt((_35_ + 76), 0);
                        break label$20;
                    }
                    while (false);
                    this._storeInt((_35_ + 20), ((this._loadInt((_35_ + 20))) + -1));
                    continue label$19;
                }
            }
            while (false);
        }
        while (false);
        _34_ = this._loadInt((_35_ + 76));
        this._storeInt((0 + 4), (_35_ + 80));
        return _34_;
    }

    public final int str_next(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((this._loadInt((_33_ + 20))) == 0) {
                            break label$3;
                        }
                        if (((this._loadInt((this._loadInt((_33_ + 24))))) & 4294967295L) < (128 & 4294967295L)) {
                            break label$2;
                        }
                        if ((this._storeInt((_33_ + 8), (this.mbtowc.invoke((_33_ + 12), (this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 20))))))) <= -1) {
                            break label$1;
                        }
                        this._storeInt((this._loadInt((_33_ + 16))), (this._loadInt((_33_ + 8))));
                        this._storeInt((_33_ + 28), (this._loadInt((_33_ + 12))));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_33_ + 28), (this._storeInt((this._loadInt((_33_ + 16))), 0)));
                    break label$0;
                }
                while (false);
                this._storeInt((this._loadInt((_33_ + 16))), 1);
                this._storeInt((_33_ + 28), (this._loadInt((this._loadInt((_33_ + 24))))));
                break label$0;
            }
            while (false);
            this._storeInt((this._loadInt((_33_ + 16))), 1);
            this._storeInt((_33_ + 28), -1);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int casefold(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), (this.towupper.invoke((this._storeInt((_31_ + 12), _30_)))))) != (this._loadInt((_31_ + 12)))) {
                    break label$1;
                }
                _30_ = this.towlower.invoke((this._loadInt((_31_ + 12))));
                break label$0;
            }
            while (false);
            _30_ = this._loadInt((_31_ + 8));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int match_bracket(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 72), _30_);
        this._storeInt((_33_ + 68), _31_);
        this._storeInt((_33_ + 64), _32_);
        this._storeInt((_33_ + 56), 0);
        this._storeInt((_33_ + 72), ((_32_ = this._loadInt((_33_ + 72))) + 1));
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_32_ + 1))) == 94) {
                    break label$1;
                }
                if ((this._loadInt((this._loadInt((_33_ + 72))))) != 33) {
                    break label$0;
                }
            }
            while (false);
            this._storeInt((_33_ + 72), ((this._storeInt((_33_ + 56), 1)) + (this._loadInt((_33_ + 72)))));
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                label$4:
                do {
                    label$5:
                    do {
                        label$6:
                        do {
                            if ((this._loadInt((this._loadInt((_33_ + 72))))) != 93) {
                                break label$6;
                            }
                            if ((this._loadInt((_33_ + 68))) != 93) {
                                break label$5;
                            }
                            this._storeInt((_33_ + 76), (((this._loadInt((_33_ + 56))) == 0) ? 1 : 0));
                            break label$2;
                        }
                        while (false);
                        if ((this._loadInt((this._loadInt((_33_ + 72))))) != 45) {
                            break label$3;
                        }
                        if ((this._loadInt((_33_ + 68))) != 45) {
                            break label$4;
                        }
                        this._storeInt((_33_ + 76), (((this._loadInt((_33_ + 56))) == 0) ? 1 : 0));
                        break label$2;
                    }
                    while (false);
                    this._storeInt((_33_ + 72), ((this._loadInt((_33_ + 72))) + 1));
                    break label$3;
                }
                while (false);
                this._storeInt((_33_ + 72), ((this._loadInt((_33_ + 72))) + 1));
            }
            while (false);
            this._storeInt((_33_ + 60), (this._loadInt(((this._loadInt((_33_ + 72))) + -1))));
            label$7:
            do {
                label$8:
                do {
                    label$9:
                    do {
                        label$10:
                        do {
                            label$11:
                            do {
                                label$13:
                                do {
                                    label$12:
                                    while (true) {
                                        if ((this._loadInt((this._loadInt((_33_ + 72))))) == 93) {
                                            break label$11;
                                        }
                                        label$14:
                                        do {
                                            label$15:
                                            do {
                                                if ((this._loadInt((this._loadInt((_33_ + 72))))) != 45) {
                                                    break label$15;
                                                }
                                                if ((this._loadInt(((this._loadInt((_33_ + 72))) + 1))) == 93) {
                                                    break label$15;
                                                }
                                                if ((this._storeInt((_33_ + 48), (this.mbtowc.invoke((_33_ + 52), ((this._loadInt((_33_ + 72))) + 1), 4)))) <= -1) {
                                                    break label$10;
                                                }
                                                label$16:
                                                do {
                                                    if (((this._loadInt((_33_ + 60))) & 4294967295L) > ((this._loadInt((_33_ + 52))) & 4294967295L)) {
                                                        break label$16;
                                                    }
                                                    if ((((this._loadInt((_33_ + 68))) - (_32_ = this._loadInt((_33_ + 60)))) & 4294967295L) <= (((this._loadInt((_33_ + 52))) - _32_) & 4294967295L)) {
                                                        break label$9;
                                                    }
                                                    if ((((this._loadInt((_33_ + 64))) - (_32_ = this._loadInt((_33_ + 60)))) & 4294967295L) <= (((this._loadInt((_33_ + 52))) - _32_) & 4294967295L)) {
                                                        break label$9;
                                                    }
                                                }
                                                while (false);
                                                this._storeInt((_33_ + 72), (((this._loadInt((_33_ + 72))) + (this._loadInt((_33_ + 48)))) + -1));
                                                break label$14;
                                            }
                                            while (false);
                                            label$17:
                                            do {
                                                if ((this._loadInt((this._loadInt((_33_ + 72))))) != 91) {
                                                    break label$17;
                                                }
                                                label$18:
                                                do {
                                                    if ((this._loadInt(((this._loadInt((_33_ + 72))) + 1))) == 58) {
                                                        break label$18;
                                                    }
                                                    if ((this._loadInt(((this._loadInt((_33_ + 72))) + 1))) == 46) {
                                                        break label$18;
                                                    }
                                                    if ((this._loadInt(((this._loadInt((_33_ + 72))) + 1))) != 61) {
                                                        break label$17;
                                                    }
                                                }
                                                while (false);
                                                this._storeInt((_33_ + 44), ((this._loadInt((_33_ + 72))) + 2));
                                                this._storeInt((_33_ + 40), (this._loadInt(((this._loadInt((_33_ + 72))) + 1))));
                                                this._storeInt((_33_ + 72), ((this._loadInt((_33_ + 72))) + 3));
                                                label$20:
                                                do {
                                                    label$19:
                                                    while (true) {
                                                        _32_ = 1;
                                                        label$21:
                                                        do {
                                                            if ((this._loadInt(((this._loadInt((_33_ + 72))) + -1))) != (this._loadInt((_33_ + 40)))) {
                                                                break label$21;
                                                            }
                                                            _32_ = ((this._loadInt((this._loadInt((_33_ + 72))))) != 93) ? 1 : 0;
                                                        }
                                                        while (false);
                                                        if (_32_ == 0) {
                                                            break label$20;
                                                        }
                                                        this._storeInt((_33_ + 72), ((this._loadInt((_33_ + 72))) + 1));
                                                        continue label$19;
                                                    }
                                                }
                                                while (false);
                                                if ((this._loadInt((_33_ + 40))) != 58) {
                                                    break label$14;
                                                }
                                                if ((((this._loadInt((_33_ + 72))) + -1) - (this._loadInt((_33_ + 44)))) > 15) {
                                                    break label$14;
                                                }
                                                memcpy((_33_ + 16), (_32_ = this._loadInt((_33_ + 44))), (((this._loadInt((_33_ + 72))) + -1) - _32_));
                                                this._storeInt(((_33_ + 16) + (((this._loadInt((_33_ + 72))) + -1) - (this._loadInt((_33_ + 44))))), 0);
                                                if ((this.iswctype.invoke((this._loadInt((_33_ + 68))), (this.wctype.invoke((_33_ + 16))))) != 0) {
                                                    break label$7;
                                                }
                                                if ((this.iswctype.invoke((this._loadInt((_33_ + 64))), (this.wctype.invoke((_33_ + 16))))) == 0) {
                                                    break label$14;
                                                }
                                                break label$7;
                                            }
                                            while (false);
                                            label$22:
                                            do {
                                                label$23:
                                                do {
                                                    if (((this._loadInt((this._loadInt((_33_ + 72))))) & 4294967295L) > (127 & 4294967295L)) {
                                                        break label$23;
                                                    }
                                                    this._storeInt((_33_ + 60), (this._loadInt((this._loadInt((_33_ + 72))))));
                                                    break label$22;
                                                }
                                                while (false);
                                                if ((this._storeInt((_33_ + 12), (this.mbtowc.invoke((_33_ + 60), (this._loadInt((_33_ + 72))), 4)))) <= -1) {
                                                    break label$8;
                                                }
                                                this._storeInt((_33_ + 72), (((this._loadInt((_33_ + 72))) + (this._loadInt((_33_ + 12)))) + -1));
                                            }
                                            while (false);
                                            if ((this._loadInt((_33_ + 60))) == (this._loadInt((_33_ + 68)))) {
                                                break label$13;
                                            }
                                            if ((this._loadInt((_33_ + 60))) == (this._loadInt((_33_ + 64)))) {
                                                break label$13;
                                            }
                                        }
                                        while (false);
                                        this._storeInt((_33_ + 72), ((this._loadInt((_33_ + 72))) + 1));
                                        continue label$12;
                                    }
                                }
                                while (false);
                                this._storeInt((_33_ + 76), (((this._loadInt((_33_ + 56))) == 0) ? 1 : 0));
                                break label$2;
                            }
                            while (false);
                            this._storeInt((_33_ + 76), (this._loadInt((_33_ + 56))));
                            break label$2;
                        }
                        while (false);
                        this._storeInt((_33_ + 76), 0);
                        break label$2;
                    }
                    while (false);
                    this._storeInt((_33_ + 76), (((this._loadInt((_33_ + 56))) == 0) ? 1 : 0));
                    break label$2;
                }
                while (false);
                this._storeInt((_33_ + 76), 0);
                break label$2;
            }
            while (false);
            this._storeInt((_33_ + 76), (((this._loadInt((_33_ + 56))) == 0) ? 1 : 0));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 76));
        this._storeInt((0 + 4), (_33_ + 80));
        return _32_;
    }

    public final int __pthread_self$2e$83()
    {
        return (this.pthread_self.invoke());
    }

    public final int fopen(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((strchr(9888, (this._loadInt((this._storeInt((_32_ + 20), _31_)))))) == 0) {
                            break label$3;
                        }
                        _31_ = this._storeInt((_32_ + 8), (__fmodeflags((this._loadInt((_32_ + 20))))));
                        if ((this._storeInt((_32_ + 12), (__syscall_ret((this.__syscall3.invoke(5, (this._loadInt((_32_ + 24))), (_31_ | 32768), 438)))))) <= -1) {
                            break label$2;
                        }
                        label$4:
                        do {
                            if (((this._loadInt((_32_ + 10))) & 8) == 0) {
                                break label$4;
                            }
                            this.__syscall3.invoke(221, (this._loadInt((_32_ + 12))), 2, 1);
                        }
                        while (false);
                        if ((this._storeInt((_32_ + 16), (this.__fdopen.invoke((this._loadInt((_32_ + 12))), (this._loadInt((_32_ + 20))))))) == 0) {
                            break label$1;
                        }
                        this._storeInt((_32_ + 28), (this._loadInt((_32_ + 16))));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((__errno_location()), 22);
                    this._storeInt((_32_ + 28), 0);
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 28), 0);
                break label$0;
            }
            while (false);
            this.__syscall1.invoke(6, (this._loadInt((_32_ + 12))));
            this._storeInt((_32_ + 28), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int fputc(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((this._loadInt(((this._storeInt((_32_ + 4), _31_)) + 76))) < 0) {
                            break label$3;
                        }
                        if ((this.__lockfile.invoke((this._loadInt((_32_ + 4))))) == 0) {
                            break label$3;
                        }
                        if ((this._loadInt((_32_ + 8))) == (this._loadInt(((this._loadInt((_32_ + 4))) + 75)))) {
                            break label$2;
                        }
                        if (((this._loadInt(((_31_ = this._loadInt((_32_ + 4))) + 20))) & 4294967295L) >= ((this._loadInt((_31_ + 16))) & 4294967295L)) {
                            break label$2;
                        }
                        this._storeInt(((_31_ = this._loadInt((_32_ + 4))) + 20), ((_30_ = this._loadInt((_31_ + 20))) + 1));
                        this._storeInt(_30_, (_31_ = this._loadInt((_32_ + 8))));
                        break label$1;
                    }
                    while (false);
                    label$4:
                    do {
                        if ((this._loadInt((_32_ + 8))) == (this._loadInt(((this._loadInt((_32_ + 4))) + 75)))) {
                            break label$4;
                        }
                        if (((this._loadInt(((_31_ = this._loadInt((_32_ + 4))) + 20))) & 4294967295L) >= ((this._loadInt((_31_ + 16))) & 4294967295L)) {
                            break label$4;
                        }
                        this._storeInt(((_31_ = this._loadInt((_32_ + 4))) + 20), ((_31_ = this._loadInt((_31_ + 20))) + 1));
                        this._storeInt((_32_ + 12), (this._storeInt(_31_, (this._loadInt((_32_ + 8))))));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_32_ + 12), (__overflow((this._loadInt((_32_ + 4))), (this._loadInt((_32_ + 8))))));
                    break label$0;
                }
                while (false);
                _31_ = __overflow((this._loadInt((_32_ + 4))), (this._loadInt((_32_ + 8))));
            }
            while (false);
            this._storeInt((_32_ + 8), _31_);
            this.__unlockfile.invoke((this._loadInt((_32_ + 4))));
            this._storeInt((_32_ + 12), (this._loadInt((_32_ + 8))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int fputs(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = fwrite((_31_ = this._loadInt((_32_ + 12))), (strlen(_31_)), 1, (this._loadInt((_32_ + 8))));
        this._storeInt((0 + 4), (_32_ + 16));
        return (_31_ + -1);
    }

    public final int fread(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_34_ + 36), _31_);
        this._storeInt((_34_ + 32), _32_);
        this._storeInt((_34_ + 28), _33_);
        this._storeInt((_34_ + 24), (this._loadInt((_34_ + 40))));
        this._storeInt((_34_ + 16), (this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 36))) * (this._loadInt((_34_ + 32)))))));
        _33_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._loadInt((_34_ + 28))) + 76))) < 0) {
                break label$0;
            }
            _33_ = this.__lockfile.invoke((this._loadInt((_34_ + 28))));
        }
        while (false);
        this._storeInt((_34_ + 8), _33_);
        this._storeInt(((_33_ = this._loadInt((_34_ + 28))) + 74), ((_32_ = this._loadInt((_33_ + 74))) | (_32_ + -1)));
        label$1:
        do {
            if (((this._loadInt((_33_ + 8))) - (this._loadInt((_33_ + 4)))) < 1) {
                break label$1;
            }
            label$2:
            do {
                label$3:
                do {
                    if ((((this._loadInt(((_33_ = this._loadInt((_34_ + 28))) + 8))) - (this._loadInt((_33_ + 4)))) & 4294967295L) >= ((this._loadInt((_34_ + 16))) & 4294967295L)) {
                        break label$3;
                    }
                    _33_ = (this._loadInt(((_33_ = this._loadInt((_34_ + 28))) + 8))) - (this._loadInt((_33_ + 4)));
                    break label$2;
                }
                while (false);
                _33_ = this._loadInt((_34_ + 16));
            }
            while (false);
            this._storeInt((_34_ + 12), _33_);
            memcpy((this._loadInt((_34_ + 24))), (this._loadInt(((this._loadInt((_34_ + 28))) + 4))), _33_);
            this._storeInt(((_33_ = this._loadInt((_34_ + 28))) + 4), ((this._loadInt((_33_ + 4))) + (_33_ = this._loadInt((_34_ + 12)))));
            this._storeInt((_34_ + 24), (_33_ + (this._loadInt((_34_ + 24)))));
            this._storeInt((_34_ + 16), ((this._loadInt((_34_ + 16))) - (this._loadInt((_34_ + 12)))));
        }
        while (false);
        label$4:
        do {
            label$5:
            do {
                label$7:
                do {
                    label$6:
                    while (true) {
                        if ((this._loadInt((_34_ + 16))) == 0) {
                            break label$5;
                        }
                        _33_ = 0;
                        label$8:
                        do {
                            if ((__toread((this._loadInt((_34_ + 28))))) != 0) {
                                break label$8;
                            }
                            _33_ = this._iiiiTable[this._tableIndices[this._loadInt(((_33_ = this._loadInt((_34_ + 28))) + 32))]].invoke(_33_, (this._loadInt((_34_ + 24))), (this._loadInt((_34_ + 16))));
                        }
                        while (false);
                        if ((((this._storeInt((_34_ + 12), _33_)) + 1) & 4294967295L) <= (1 & 4294967295L)) {
                            break label$7;
                        }
                        this._storeInt((_34_ + 16), ((this._loadInt((_34_ + 16))) - (this._loadInt((_34_ + 12)))));
                        this._storeInt((_34_ + 24), ((this._loadInt((_34_ + 24))) + (this._loadInt((_34_ + 12)))));
                        continue label$6;
                    }
                }
                while (false);
                label$9:
                do {
                    if ((this._loadInt((_34_ + 8))) == 0) {
                        break label$9;
                    }
                    this.__unlockfile.invoke((this._loadInt((_34_ + 28))));
                }
                while (false);
                this._storeInt((_34_ + 44), (((this._loadInt((_34_ + 20))) - (this._loadInt((_34_ + 16)))) / (this._loadInt((_34_ + 36)))));
                break label$4;
            }
            while (false);
            label$10:
            do {
                if ((this._loadInt((_34_ + 8))) == 0) {
                    break label$10;
                }
                this.__unlockfile.invoke((this._loadInt((_34_ + 28))));
            }
            while (false);
            this._storeInt((_34_ + 44), (this._loadInt((_34_ + 32))));
        }
        while (false);
        _33_ = this._loadInt((_34_ + 44));
        this._storeInt((0 + 4), (_34_ + 48));
        return _33_;
    }

    public final int freopen(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this._storeInt((_33_ + 12), (__fmodeflags((this._loadInt((_33_ + 20))))));
        _32_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._loadInt((_33_ + 16))) + 76))) < 0) {
                break label$0;
            }
            _32_ = this.__lockfile.invoke((this._loadInt((_33_ + 16))));
        }
        while (false);
        this._storeInt((_33_ + 4), _32_);
        fflush((this._loadInt((_33_ + 16))));
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            label$6:
                            do {
                                label$7:
                                do {
                                    if ((this._loadInt((_33_ + 24))) == 0) {
                                        break label$7;
                                    }
                                    if ((this._storeInt((_33_ + 8), (fopen((this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 20))))))) == 0) {
                                        break label$2;
                                    }
                                    if ((this._loadInt(((this._loadInt((_33_ + 8))) + 60))) != (this._loadInt(((this._loadInt((_33_ + 16))) + 60)))) {
                                        break label$6;
                                    }
                                    this._storeInt(((this._loadInt((_33_ + 8))) + 60), -1);
                                    break label$5;
                                }
                                while (false);
                                label$8:
                                do {
                                    if (((this._loadInt((_33_ + 14))) & 8) == 0) {
                                        break label$8;
                                    }
                                    this.__syscall3.invoke(221, (this._loadInt(((this._loadInt((_33_ + 16))) + 60))), 2, 1);
                                }
                                while (false);
                                _32_ = this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) & -524481));
                                if ((__syscall_ret((this.__syscall3.invoke(221, (this._loadInt(((this._loadInt((_33_ + 16))) + 60))), 4, _32_)))) >= 0) {
                                    break label$4;
                                }
                                break label$2;
                            }
                            while (false);
                            if ((__dup3((this._loadInt(((this._loadInt((_33_ + 8))) + 60))), (this._loadInt(((this._loadInt((_33_ + 16))) + 60))), ((this._loadInt((_33_ + 12))) & 524288))) < 0) {
                                break label$3;
                            }
                        }
                        while (false);
                        this._storeInt((_32_ = this._loadInt((_33_ + 16))), (((this._loadInt(_32_)) & 1) | (this._loadInt((this._loadInt((_33_ + 8)))))));
                        this._storeInt(((this._loadInt((_33_ + 16))) + 32), (this._loadInt(((this._loadInt((_33_ + 8))) + 32))));
                        this._storeInt(((this._loadInt((_33_ + 16))) + 36), (this._loadInt(((this._loadInt((_33_ + 8))) + 36))));
                        this._storeInt(((this._loadInt((_33_ + 16))) + 40), (this._loadInt(((this._loadInt((_33_ + 8))) + 40))));
                        this._storeInt(((this._loadInt((_33_ + 16))) + 12), (this._loadInt(((this._loadInt((_33_ + 8))) + 12))));
                        fclose((this._loadInt((_33_ + 8))));
                    }
                    while (false);
                    label$9:
                    do {
                        if ((this._loadInt((_33_ + 4))) == 0) {
                            break label$9;
                        }
                        this.__unlockfile.invoke((this._loadInt((_33_ + 16))));
                    }
                    while (false);
                    this._storeInt((_33_ + 28), (this._loadInt((_33_ + 16))));
                    break label$1;
                }
                while (false);
                fclose((this._loadInt((_33_ + 8))));
            }
            while (false);
            fclose((this._loadInt((_33_ + 16))));
            this._storeInt((_33_ + 28), 0);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final double frexp(double _30_, int _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _30_);
        this._storeInt((_32_ + 28), _31_);
        this._storeDouble((_32_ + 16), (this._loadDouble((_32_ + 32))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            if ((this._storeInt((_32_ + 12), ((int) (((this._loadLong((_32_ + 16))) >>> 52L) & 2047L)))) == 0) {
                                break label$4;
                            }
                            if ((this._loadInt((_32_ + 12))) != 2047) {
                                break label$3;
                            }
                            this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 32))));
                            break label$0;
                        }
                        while (false);
                        if ((this._loadDouble((_32_ + 32))) == 0.0) {
                            break label$2;
                        }
                        this._storeDouble((_32_ + 32), (frexp(((this._loadDouble((_32_ + 32))) * 1.8446744073709552E19), (this._loadInt((_32_ + 28))))));
                        this._storeInt((_31_ = this._loadInt((_32_ + 28))), ((this._loadInt(_31_)) + -64));
                        break label$1;
                    }
                    while (false);
                    this._storeInt((this._loadInt((_32_ + 28))), ((this._loadInt((_32_ + 12))) + -1022));
                    this._storeLong((_32_ + 16), ((this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 16))) & -9218868437227405313L))) | 4602678819172646912L));
                    this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 16))));
                    break label$0;
                }
                while (false);
                this._storeInt((this._loadInt((_32_ + 28))), 0);
            }
            while (false);
            this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 32))));
        }
        while (false);
        _30_ = this._loadDouble((_32_ + 40));
        this._storeInt((0 + 4), (_32_ + 48));
        return _30_;
    }

    public final float frexpf(float _30_, int _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        this._storeFloat((_32_ + 16), (this._loadFloat((_32_ + 24))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            if ((this._storeInt((_32_ + 12), (((this._loadInt((_32_ + 16))) >>> 23) & 255))) == 0) {
                                break label$4;
                            }
                            if ((this._loadInt((_32_ + 12))) != 255) {
                                break label$3;
                            }
                            this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 24))));
                            break label$0;
                        }
                        while (false);
                        if ((this._loadFloat((_32_ + 24))) == 0.0f) {
                            break label$2;
                        }
                        this._storeFloat((_32_ + 24), (frexpf(((float) (((double) (this._loadFloat((_32_ + 24)))) * 1.8446744073709552E19)), (this._loadInt((_32_ + 20))))));
                        this._storeInt((_31_ = this._loadInt((_32_ + 20))), ((this._loadInt(_31_)) + -64));
                        break label$1;
                    }
                    while (false);
                    this._storeInt((this._loadInt((_32_ + 20))), ((this._loadInt((_32_ + 12))) + -126));
                    this._storeInt((_32_ + 16), ((this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) & -2139095041))) | 1056964608));
                    this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 16))));
                    break label$0;
                }
                while (false);
                this._storeInt((this._loadInt((_32_ + 20))), 0);
            }
            while (false);
            this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 24))));
        }
        while (false);
        _30_ = this._loadFloat((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _30_;
    }

    public final void frexpl(int _30_, long _31_, long _32_, int _33_)
    {
        int _34_ = 0;
        this._storeLong(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeInt((_34_ + 28), _33_);
        this._storeLong((_34_ + 40), _32_);
        this.__extenddftf2.invoke((_34_ + 8), (frexp((this.__trunctfdf2.invoke((this._loadLong((_34_ + 32))), _32_)), _33_)));
        this._storeLong((_30_ + 8), (this._loadLong(((_34_ + 8) + 8))));
        this._storeLong(_30_, (this._loadLong((_34_ + 8))));
        this._storeInt((0 + 4), (_34_ + 48));
        return;
    }

    public final int __fseeko_unlocked(int _30_, long _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeLong((_33_ + 16), _31_);
        label$0:
        do {
            if ((this._storeInt((_33_ + 12), _32_)) != 1) {
                break label$0;
            }
            this._storeLong((_33_ + 16), ((this._loadLong((_33_ + 16))) - ((long) ((this._loadInt(((_32_ = this._loadInt((_33_ + 24))) + 8))) - (this._loadInt((_32_ + 4)))))));
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    if (((this._loadInt(((_32_ = this._loadInt((_33_ + 24))) + 20))) & 4294967295L) <= ((this._loadInt((_32_ + 28))) & 4294967295L)) {
                        break label$3;
                    }
                    this._iiiiTable[this._tableIndices[this._loadInt(((_32_ = this._loadInt((_33_ + 24))) + 36))]].invoke(_32_, 0, 0);
                    if ((this._loadInt(((this._loadInt((_33_ + 24))) + 20))) == 0) {
                        break label$2;
                    }
                }
                while (false);
                _30_ = this._storeInt(((_32_ = this._loadInt((_33_ + 24))) + 20), (this._storeInt((_32_ + 16), (this._storeInt((_32_ + 28), 0)))));
                label$4:
                do {
                    if ((this._liliTable[this._tableIndices[this._loadInt((_32_ + 40))]].invoke(_32_, (this._loadLong((_33_ + 16))), (this._loadInt((_33_ + 12))))) <= -1L) {
                        break label$4;
                    }
                    this._storeLong(((_32_ = this._loadInt((_33_ + 24))) + 4), 0L);
                    this._storeInt(_32_, ((this._loadInt(_32_)) & -17));
                    this._storeInt((_33_ + 28), _30_);
                    break label$1;
                }
                while (false);
                this._storeInt((_33_ + 28), -1);
                break label$1;
            }
            while (false);
            this._storeInt((_33_ + 28), -1);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int __fseeko(int _30_, long _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeLong((_33_ + 16), _31_);
        this._storeInt((_33_ + 12), _32_);
        _32_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._loadInt((_33_ + 28))) + 76))) < 0) {
                break label$0;
            }
            _32_ = this.__lockfile.invoke((this._loadInt((_33_ + 28))));
        }
        while (false);
        this._storeInt((_33_ + 4), _32_);
        this._storeInt((_33_ + 8), (__fseeko_unlocked((this._loadInt((_33_ + 28))), (this._loadLong((_33_ + 16))), (this._loadInt((_33_ + 12))))));
        label$1:
        do {
            if ((this._loadInt((_33_ + 4))) == 0) {
                break label$1;
            }
            this.__unlockfile.invoke((this._loadInt((_33_ + 28))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 8));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int fseek(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __fseeko((this._loadInt((_33_ + 12))), (this._loadLong((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int fsetpos(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __fseeko((this._loadInt((_32_ + 12))), (this._loadLong(_31_)), 0);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int fsync(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall_cp.invoke(118, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 0, 0, 0, 0, 0)));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final long __ftello_unlocked(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        long _33_ = 0L;
        int _34_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        long _temp$3 = 0L;
        int _temp$4 = 0;
        _32_ = this._loadInt(((_30_ = this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 20), _30_)) + 40));
        _34_ = 0;
        label$0:
        do {
            if (((this._loadInt(_30_)) & 128) == 0) {
                break label$0;
            }
            _34_ = (((this._loadInt(((_34_ = this._loadInt((_31_ + 20))) + 20))) & 4294967295L) > ((this._loadInt((_34_ + 28))) & 4294967295L)) ? 1 : 0;
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                _temp$0 = 2;
                _temp$1 = 1;
                _temp$2 = (_34_ != 0) ? _temp$0 : _temp$1;
                _temp$3 = this._liliTable[this._tableIndices[_32_]].invoke(_30_, 0L, _temp$2);
                _temp$3 = this._storeLong((_31_ + 8), _temp$3);
                _temp$4 = (_temp$3 <= -1L) ? 1 : 0;
                if (_temp$4 != 0) {
                    break label$2;
                }
                this._storeLong((_31_ + 24), (((this._loadLong((_31_ + 8))) - ((long) ((this._loadInt(((_30_ = this._loadInt((_31_ + 20))) + 8))) - (this._loadInt((_30_ + 4)))))) + ((long) ((this._loadInt((_30_ + 20))) - (this._loadInt((_30_ + 28)))))));
                break label$1;
            }
            while (false);
            this._storeLong((_31_ + 24), (this._loadLong((_31_ + 8))));
        }
        while (false);
        _33_ = this._loadLong((_31_ + 24));
        this._storeInt((0 + 4), (_31_ + 32));
        return _33_;
    }

    public final long __ftello(int _30_)
    {
        int _31_ = 0;
        long _32_ = 0L;
        int _33_ = 0;
        _33_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_)) + 76))) < 0) {
                break label$0;
            }
            _33_ = this.__lockfile.invoke((this._loadInt((_31_ + 28))));
        }
        while (false);
        this._storeInt((_31_ + 12), _33_);
        this._storeLong((_31_ + 16), (__ftello_unlocked((this._loadInt((_31_ + 28))))));
        label$1:
        do {
            if ((this._loadInt((_31_ + 12))) == 0) {
                break label$1;
            }
            this.__unlockfile.invoke((this._loadInt((_31_ + 28))));
        }
        while (false);
        _32_ = this._loadLong((_31_ + 16));
        this._storeInt((0 + 4), (_31_ + 32));
        return _32_;
    }

    public final int ftell(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((this._storeLong((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), (__ftello((this._storeInt((_31_ + 8), _30_)))))) < 2147483648L) {
                    break label$1;
                }
                this._storeInt((__errno_location()), 75);
                this._storeInt((_31_ + 12), -1);
                break label$0;
            }
            while (false);
            this._storeLong((_31_ + 12), (this._loadLong(_31_)));
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int ftruncate(int _30_, long _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeLong((_32_ + 16), _31_);
        _30_ = this._loadInt((_32_ + 28));
        this._storeLong((_32_ + 8), _31_);
        _33_ = this._loadInt((_32_ + 8));
        this._storeLong(_32_, (this._loadLong((_32_ + 16))));
        _30_ = __syscall_ret((this.__syscall4.invoke(93, _30_, 0, _33_, (this._loadInt((_32_ + 4))))));
        this._storeInt((0 + 4), (_32_ + 32));
        return _30_;
    }

    public final int __fwritex(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this._storeInt((_33_ + 12), 0);
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt(((this._loadInt((_33_ + 16))) + 16))) != 0) {
                    break label$1;
                }
                if ((__towrite((this._loadInt((_33_ + 16))))) == 0) {
                    break label$1;
                }
                this._storeInt((_33_ + 28), 0);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_33_ + 20))) & 4294967295L) <= (((this._loadInt(((_32_ = this._loadInt((_33_ + 16))) + 16))) - (this._loadInt((_32_ + 20)))) & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_33_ + 28), (this._iiiiTable[this._tableIndices[this._loadInt(((_32_ = this._loadInt((_33_ + 16))) + 36))]].invoke(_32_, (this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 20))))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if ((this._loadInt(((this._loadInt((_33_ + 16))) + 75))) < 0) {
                    break label$3;
                }
                this._storeInt((_33_ + 12), (this._loadInt((_33_ + 20))));
                label$5:
                do {
                    label$4:
                    while (true) {
                        _32_ = 0;
                        label$6:
                        do {
                            if ((this._loadInt((_33_ + 12))) == 0) {
                                break label$6;
                            }
                            _32_ = ((this._loadInt((((this._loadInt((_33_ + 24))) + (this._loadInt((_33_ + 12)))) + -1))) != 10) ? 1 : 0;
                        }
                        while (false);
                        if (_32_ == 0) {
                            break label$5;
                        }
                        this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + -1));
                        continue label$4;
                    }
                }
                while (false);
                if ((this._loadInt((_33_ + 12))) == 0) {
                    break label$3;
                }
                label$7:
                do {
                    if (((this._iiiiTable[this._tableIndices[this._loadInt(((_32_ = this._loadInt((_33_ + 16))) + 36))]].invoke(_32_, (this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 12))))) & 4294967295L) >= ((this._loadInt((_33_ + 12))) & 4294967295L)) {
                        break label$7;
                    }
                    this._storeInt((_33_ + 28), (this._loadInt((_33_ + 12))));
                    break label$0;
                }
                while (false);
                this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + (this._loadInt((_33_ + 12)))));
                this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) - (this._loadInt((_33_ + 12)))));
            }
            while (false);
            memcpy((this._loadInt(((this._loadInt((_33_ + 16))) + 20))), (this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 20))));
            this._storeInt(((_32_ = this._loadInt((_33_ + 16))) + 20), ((this._loadInt((_32_ + 20))) + (_32_ = this._loadInt((_33_ + 20)))));
            this._storeInt((_33_ + 28), (_32_ + (this._loadInt((_33_ + 12)))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int fwrite(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_34_ + 24), _31_);
        this._storeInt((_34_ + 20), _32_);
        this._storeInt((_34_ + 16), _33_);
        this._storeInt((_34_ + 8), ((this._loadInt((_34_ + 24))) * (this._loadInt((_34_ + 20)))));
        _33_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._loadInt((_34_ + 16))) + 76))) < 0) {
                break label$0;
            }
            _33_ = this.__lockfile.invoke((this._loadInt((_34_ + 16))));
        }
        while (false);
        this._storeInt((_34_ + 4), _33_);
        this._storeInt((_34_ + 12), (__fwritex((this._loadInt((_34_ + 28))), (this._loadInt((_34_ + 8))), (this._loadInt((_34_ + 16))))));
        label$1:
        do {
            if ((this._loadInt((_34_ + 4))) == 0) {
                break label$1;
            }
            this.__unlockfile.invoke((this._loadInt((_34_ + 16))));
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                if ((this._loadInt((_34_ + 12))) != (this._loadInt((_34_ + 8)))) {
                    break label$3;
                }
                _33_ = this._loadInt((_34_ + 20));
                break label$2;
            }
            while (false);
            _33_ = (this._loadInt((_34_ + 12))) / (this._loadInt((_34_ + 24)));
        }
        while (false);
        this._storeInt((0 + 4), (_34_ + 32));
        return _33_;
    }

    public final int gcvt(double _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeDouble(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        _31_ = this._loadInt((_33_ + 20));
        this._storeDouble((_33_ + 8), (this._loadDouble((_33_ + 24))));
        this._storeInt(_33_, _31_);
        this.sprintf.invoke(_32_, 9904, _33_);
        _32_ = this._loadInt((_33_ + 16));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int getc(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)) + 76))) < 0) {
                            break label$3;
                        }
                        if ((this.__lockfile.invoke((this._loadInt((_31_ + 8))))) == 0) {
                            break label$3;
                        }
                        if (((this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 4))) & 4294967295L) >= ((this._loadInt((_30_ + 8))) & 4294967295L)) {
                            break label$2;
                        }
                        this._storeInt(((_30_ = this._loadInt((_31_ + 8))) + 4), ((_30_ = this._loadInt((_30_ + 4))) + 1));
                        _30_ = this._loadInt(_30_);
                        break label$1;
                    }
                    while (false);
                    label$4:
                    do {
                        if (((this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 4))) & 4294967295L) >= ((this._loadInt((_30_ + 8))) & 4294967295L)) {
                            break label$4;
                        }
                        this._storeInt(((_30_ = this._loadInt((_31_ + 8))) + 4), ((_30_ = this._loadInt((_30_ + 4))) + 1));
                        this._storeInt((_31_ + 12), (this._loadInt(_30_)));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_31_ + 12), (__uflow((this._loadInt((_31_ + 8))))));
                    break label$0;
                }
                while (false);
                _30_ = __uflow((this._loadInt((_31_ + 8))));
            }
            while (false);
            this._storeInt((_31_ + 4), _30_);
            this.__unlockfile.invoke((this._loadInt((_31_ + 8))));
            this._storeInt((_31_ + 12), (this._loadInt((_31_ + 4))));
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int getc_unlocked(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt(((_30_ = this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) + 4))) & 4294967295L) >= ((this._loadInt((_30_ + 8))) & 4294967295L)) {
                    break label$1;
                }
                this._storeInt(((_30_ = this._loadInt((_31_ + 12))) + 4), ((_30_ = this._loadInt((_30_ + 4))) + 1));
                _30_ = this._loadInt(_30_);
                break label$0;
            }
            while (false);
            _30_ = __uflow((this._loadInt((_31_ + 12))));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int getchar()
    {
        return (fgetc((this._loadInt((0 + 14932)))));
    }

    public final int getchar_unlocked()
    {
        int _30_ = 0;
        int _31_ = 0;
        label$0:
        do {
            if (((this._loadInt(((_30_ = this._loadInt((0 + 14932))) + 4))) & 4294967295L) >= ((this._loadInt((_30_ + 8))) & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_30_ + 4), ((_31_ = this._loadInt((_30_ + 4))) + 1));
            return (this._loadInt(_31_));
        }
        while (false);
        return (__uflow(_30_));
    }

    public final int getdelim(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_34_ + 36), _31_);
        this._storeInt((_34_ + 32), _32_);
        this._storeInt((_34_ + 28), _33_);
        _33_ = 0;
        _32_ = this._storeInt((_34_ + 12), 0);
        label$0:
        do {
            if ((this._loadInt(((this._loadInt((_34_ + 28))) + 76))) < _32_) {
                break label$0;
            }
            _33_ = this.__lockfile.invoke((this._loadInt((_34_ + 28))));
        }
        while (false);
        this._storeInt((_34_ + 4), _33_);
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            label$6:
                            do {
                                if ((this._loadInt((_34_ + 36))) == 0) {
                                    break label$6;
                                }
                                if ((this._loadInt((_34_ + 40))) == 0) {
                                    break label$6;
                                }
                                label$7:
                                do {
                                    if ((this._loadInt((this._loadInt((_34_ + 40))))) != 0) {
                                        break label$7;
                                    }
                                    this._storeInt((this._loadInt((_34_ + 36))), 0);
                                }
                                while (false);
                                label$8:
                                while (true) {
                                    label$10:
                                    do {
                                        label$11:
                                        do {
                                            if ((this._storeInt((_34_ + 20), (memchr((_32_ = this._loadInt(((_33_ = this._loadInt((_34_ + 28))) + 4))), (this._loadInt((_34_ + 32))), ((this._loadInt((_33_ + 8))) - _32_))))) == 0) {
                                                break label$11;
                                            }
                                            _33_ = ((this._loadInt((_34_ + 20))) - (this._loadInt(((this._loadInt((_34_ + 28))) + 4)))) + 1;
                                            break label$10;
                                        }
                                        while (false);
                                        _33_ = (this._loadInt(((_33_ = this._loadInt((_34_ + 28))) + 8))) - (this._loadInt((_33_ + 4)));
                                    }
                                    while (false);
                                    label$12:
                                    do {
                                        if (((((this._storeInt((_34_ + 16), _33_)) + (this._loadInt((_34_ + 12)))) + 1) & 4294967295L) < ((this._loadInt((this._loadInt((_34_ + 36))))) & 4294967295L)) {
                                            break label$12;
                                        }
                                        if (((this._loadInt((_34_ + 16))) & 4294967295L) >= ((2147483647 - (this._loadInt((_34_ + 12)))) & 4294967295L)) {
                                            break label$3;
                                        }
                                        this._storeInt(_34_, (((this._loadInt((_34_ + 12))) + (this._loadInt((_34_ + 16)))) + 2));
                                        label$13:
                                        do {
                                            if ((this._loadInt((_34_ + 20))) != 0) {
                                                break label$13;
                                            }
                                            if (((this._loadInt(_34_)) & 4294967295L) > (1073741822 & 4294967295L)) {
                                                break label$13;
                                            }
                                            this._storeInt(_34_, ((_33_ = this._loadInt(_34_)) + (_33_ >>> 1)));
                                        }
                                        while (false);
                                        label$14:
                                        do {
                                            if ((this._storeInt((_34_ + 24), (realloc((this._loadInt((this._loadInt((_34_ + 40))))), (this._loadInt(_34_)))))) != 0) {
                                                break label$14;
                                            }
                                            _33_ = this._storeInt(_34_, (((this._loadInt((_34_ + 12))) + (this._loadInt((_34_ + 16)))) + 2));
                                            if ((this._storeInt((_34_ + 24), (realloc((this._loadInt((this._loadInt((_34_ + 40))))), _33_)))) == 0) {
                                                break label$3;
                                            }
                                        }
                                        while (false);
                                        this._storeInt((this._loadInt((_34_ + 40))), (this._loadInt((_34_ + 24))));
                                        this._storeInt((this._loadInt((_34_ + 36))), (this._loadInt(_34_)));
                                    }
                                    while (false);
                                    memcpy(((this._loadInt((this._loadInt((_34_ + 40))))) + (this._loadInt((_34_ + 12)))), (this._loadInt(((this._loadInt((_34_ + 28))) + 4))), (this._loadInt((_34_ + 16))));
                                    this._storeInt(((_33_ = this._loadInt((_34_ + 28))) + 4), ((this._loadInt((_33_ + 4))) + (_33_ = this._loadInt((_34_ + 16)))));
                                    this._storeInt((_34_ + 12), (_33_ + (this._loadInt((_34_ + 12)))));
                                    if ((this._loadInt((_34_ + 20))) != 0) {
                                        break label$4;
                                    }
                                    label$15:
                                    do {
                                        label$16:
                                        do {
                                            if (((this._loadInt(((_33_ = this._loadInt((_34_ + 28))) + 4))) & 4294967295L) >= ((this._loadInt((_33_ + 8))) & 4294967295L)) {
                                                break label$16;
                                            }
                                            this._storeInt(((_33_ = this._loadInt((_34_ + 28))) + 4), ((_33_ = this._loadInt((_33_ + 4))) + 1));
                                            _33_ = this._loadInt(_33_);
                                            break label$15;
                                        }
                                        while (false);
                                        _33_ = __uflow((this._loadInt((_34_ + 28))));
                                    }
                                    while (false);
                                    if ((this._storeInt((_34_ + 8), _33_)) == -1) {
                                        break label$5;
                                    }
                                    _33_ = this._loadInt((_34_ + 8));
                                    this._storeInt((_34_ + 12), ((_32_ = this._loadInt((_34_ + 12))) + 1));
                                    if ((this._storeInt((_32_ + (this._loadInt((this._loadInt((_34_ + 40)))))), _33_)) != (this._loadInt((_34_ + 32)))) {
                                        continue label$8;
                                    }
                                    break label$4;
                                }
                            }
                            while (false);
                            this._storeInt((_33_ = this._loadInt((_34_ + 28))), ((this._loadInt(_33_)) | 32));
                            label$17:
                            do {
                                if ((this._loadInt((_34_ + 4))) == 0) {
                                    break label$17;
                                }
                                this.__unlockfile.invoke((this._loadInt((_34_ + 28))));
                            }
                            while (false);
                            this._storeInt((__errno_location()), 22);
                            this._storeInt((_34_ + 44), -1);
                            break label$1;
                        }
                        while (false);
                        if ((this._loadInt((_34_ + 12))) == 0) {
                            break label$2;
                        }
                        if (((this._loadInt((this._loadInt((_34_ + 28))))) & 16) == 0) {
                            break label$2;
                        }
                    }
                    while (false);
                    this._storeInt(((this._loadInt((this._loadInt((_34_ + 40))))) + (this._loadInt((_34_ + 12)))), 0);
                    label$18:
                    do {
                        if ((this._loadInt((_34_ + 4))) == 0) {
                            break label$18;
                        }
                        this.__unlockfile.invoke((this._loadInt((_34_ + 28))));
                    }
                    while (false);
                    this._storeInt((_34_ + 44), (this._loadInt((_34_ + 12))));
                    break label$1;
                }
                while (false);
                this._storeInt((_33_ = this._loadInt((_34_ + 28))), ((this._loadInt(_33_)) | 32));
                label$19:
                do {
                    if ((this._loadInt((_34_ + 4))) == 0) {
                        break label$19;
                    }
                    this.__unlockfile.invoke((this._loadInt((_34_ + 28))));
                }
                while (false);
                this._storeInt((__errno_location()), 12);
                this._storeInt((_34_ + 44), -1);
                break label$1;
            }
            while (false);
            label$20:
            do {
                if ((this._loadInt((_34_ + 4))) == 0) {
                    break label$20;
                }
                this.__unlockfile.invoke((this._loadInt((_34_ + 28))));
            }
            while (false);
            this._storeInt((_34_ + 44), -1);
        }
        while (false);
        _33_ = this._loadInt((_34_ + 44));
        this._storeInt((0 + 4), (_34_ + 48));
        return _33_;
    }

    public final int getegid()
    {
        return (this.__syscall0.invoke(50));
    }

    public final int getenv(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeInt((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), (strlen((this._storeInt((_32_ + 8), _30_)))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._loadInt((0 + 3912))) == 0) {
                        break label$2;
                    }
                    if ((this._loadInt((this._loadInt((_32_ + 8))))) == 0) {
                        break label$2;
                    }
                    if ((strchr((this._loadInt((_32_ + 8))), 61)) == 0) {
                        break label$1;
                    }
                }
                while (false);
                this._storeInt((_32_ + 12), 0);
                break label$0;
            }
            while (false);
            _31_ = this._storeInt((_32_ + 4), 0);
            label$4:
            do {
                label$3:
                while (true) {
                    _30_ = 0;
                    label$5:
                    do {
                        if ((this._loadInt(((this._loadInt((_31_ + 3912))) + ((this._loadInt((_32_ + 4))) << 2)))) == 0) {
                            break label$5;
                        }
                        _30_ = 1;
                        if ((strncmp((this._loadInt((_32_ + 8))), (this._loadInt(((this._loadInt((_31_ + 3912))) + ((this._loadInt((_32_ + 4))) << 2)))), (this._loadInt(_32_)))) != 0) {
                            break label$5;
                        }
                        _30_ = ((this._loadInt(((this._loadInt(((this._loadInt((_31_ + 3912))) + ((this._loadInt((_32_ + 4))) << 2)))) + (this._loadInt(_32_))))) != 61) ? 1 : 0;
                    }
                    while (false);
                    if (_30_ == 0) {
                        break label$4;
                    }
                    this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) + 1));
                    continue label$3;
                }
            }
            while (false);
            label$6:
            do {
                if ((this._loadInt(((this._loadInt((0 + 3912))) + ((this._loadInt((_32_ + 4))) << 2)))) == 0) {
                    break label$6;
                }
                this._storeInt((_32_ + 12), (((this._loadInt(((this._loadInt((0 + 3912))) + ((this._loadInt((_32_ + 4))) << 2)))) + (this._loadInt(_32_))) + 1));
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 12), 0);
        }
        while (false);
        _30_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _30_;
    }

    public final int geteuid()
    {
        return (this.__syscall0.invoke(49));
    }

    public final int getgid()
    {
        return (this.__syscall0.invoke(47));
    }

    public final int getgroups(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __syscall_ret((this.__syscall2.invoke(80, (this._loadInt((_32_ + 12))), _31_)));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int gethostname(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 416))) + 408), _30_);
        this._storeInt((_32_ + 404), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((this.uname.invoke((_32_ + 8))) == 0) {
                    break label$1;
                }
                this._storeInt((_32_ + 412), -1);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 404))) & 4294967295L) < (66 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_32_ + 404), 65);
            }
            while (false);
            _30_ = this._storeInt((_32_ + 400), 0);
            label$4:
            do {
                label$3:
                while (true) {
                    _31_ = 0;
                    label$5:
                    do {
                        if (((this._loadInt((_32_ + 400))) & 4294967295L) >= ((this._loadInt((_32_ + 404))) & 4294967295L)) {
                            break label$5;
                        }
                        _31_ = ((this._storeInt(((this._loadInt((_32_ + 408))) + (_31_ = this._loadInt((_32_ + 400)))), (this._loadInt((((_32_ + 8) + _31_) + 65))))) != _30_) ? 1 : 0;
                    }
                    while (false);
                    if (_31_ == 0) {
                        break label$4;
                    }
                    this._storeInt((_32_ + 400), ((this._loadInt((_32_ + 400))) + 1));
                    continue label$3;
                }
            }
            while (false);
            label$6:
            do {
                if ((this._loadInt((_32_ + 400))) != (this._loadInt((_32_ + 404)))) {
                    break label$6;
                }
                this._storeInt((((this._loadInt((_32_ + 408))) + (this._loadInt((_32_ + 400)))) + -1), 0);
            }
            while (false);
            this._storeInt((_32_ + 412), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 412));
        this._storeInt((0 + 4), (_32_ + 416));
        return _31_;
    }

    public final int getline(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = getdelim((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), 10, _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int getlogin()
    {
        return (getenv(9920));
    }

    public final int getlogin_r(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_32_ + 4), _31_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._storeInt(_32_, (getlogin()))) == 0) {
                        break label$2;
                    }
                    if (((strlen((this._loadInt(_32_)))) & 4294967295L) < ((this._loadInt((_32_ + 4))) & 4294967295L)) {
                        break label$1;
                    }
                    this._storeInt((_32_ + 12), 34);
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 12), 6);
                break label$0;
            }
            while (false);
            strcpy((this._loadInt((_32_ + 8))), (this._loadInt(_32_)));
            this._storeInt((_32_ + 12), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int getpgid(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(132, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int getpgrp()
    {
        return (this.__syscall1.invoke(132, 0));
    }

    public final int getpid()
    {
        return (this.__syscall0.invoke(20));
    }

    public final int getppid()
    {
        return (this.__syscall0.invoke(64));
    }

    public final int gets(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), (fgets((this._storeInt((_31_ + 12), _30_)), 2147483647, (this._loadInt((0 + 14932))))))) == 0) {
                break label$0;
            }
            if ((this._loadInt((((strlen((this._loadInt((_31_ + 12))))) + (this._loadInt((_31_ + 12)))) + -1))) != 10) {
                break label$0;
            }
            this._storeInt((((strlen((this._loadInt((_31_ + 12))))) + (this._loadInt((_31_ + 12)))) + -1), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 8));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int getsid(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(147, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int getuid()
    {
        return (this.__syscall0.invoke(24));
    }

    public final double hypot(double _30_, double _31_)
    {
        long _32_ = 0L;
        int _33_ = 0;
        this._storeDouble(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 96))) + 80), _30_);
        this._storeDouble((_33_ + 72), _31_);
        this._storeDouble((_33_ + 64), (this._loadDouble((_33_ + 80))));
        this._storeDouble((_33_ + 56), (this._loadDouble((_33_ + 72))));
        this._storeLong((_33_ + 64), ((this._loadLong((_33_ + 64))) & 9223372036854775807L));
        _32_ = this._storeLong((_33_ + 56), ((this._loadLong((_33_ + 56))) & 9223372036854775807L));
        label$0:
        do {
            if (((this._loadLong((_33_ + 64))) & 4294967295L) >= (_32_ & 4294967295L)) {
                break label$0;
            }
            this._storeLong((_33_ + 48), (this._loadLong((_33_ + 64))));
            this._storeInt((_33_ + 68), (this._loadInt((_33_ + 60))));
            this._storeInt((_33_ + 64), (this._loadInt((_33_ + 56))));
            this._storeInt((_33_ + 56), (this._loadInt((_33_ + 48))));
            this._storeInt((_33_ + 60), (this._loadInt((_33_ + 52))));
        }
        while (false);
        this._storeLong((_33_ + 44), ((this._loadLong((_33_ + 64))) >>> 52L));
        this._storeLong((_33_ + 40), ((this._loadLong((_33_ + 56))) >>> 52L));
        this._storeDouble((_33_ + 80), (this._loadDouble((_33_ + 64))));
        this._storeDouble((_33_ + 72), (this._loadDouble((_33_ + 56))));
        label$1:
        do {
            label$2:
            do {
                if ((this._loadInt((_33_ + 40))) != 2047) {
                    break label$2;
                }
                this._storeDouble((_33_ + 88), (this._loadDouble((_33_ + 72))));
                break label$1;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if ((this._loadInt((_33_ + 44))) == 2047) {
                        break label$4;
                    }
                    if ((this._loadLong((_33_ + 56))) == 0L) {
                        break label$4;
                    }
                    if (((this._loadInt((_33_ + 44))) - (this._loadInt((_33_ + 40)))) < 65) {
                        break label$3;
                    }
                    this._storeDouble((_33_ + 88), ((this._loadDouble((_33_ + 80))) + (this._loadDouble((_33_ + 72)))));
                    break label$1;
                }
                while (false);
                this._storeDouble((_33_ + 88), (this._loadDouble((_33_ + 80))));
                break label$1;
            }
            while (false);
            this._storeLong(_33_, 4607182418800017408L);
            label$5:
            do {
                label$6:
                do {
                    if ((this._loadInt((_33_ + 44))) < 1534) {
                        break label$6;
                    }
                    this._storeLong(_33_, 7759702157959364608L);
                    this._storeDouble((_33_ + 80), ((this._loadDouble((_33_ + 80))) * 1.9010915662951598E-211));
                    this._storeDouble((_33_ + 72), ((this._loadDouble((_33_ + 72))) * 1.9010915662951598E-211));
                    break label$5;
                }
                while (false);
                if ((this._loadInt((_33_ + 40))) > 572) {
                    break label$5;
                }
                this._storeLong(_33_, 1454662679640670208L);
                this._storeDouble((_33_ + 80), ((this._loadDouble((_33_ + 80))) * 5.2601359015483735E210));
                this._storeDouble((_33_ + 72), ((this._loadDouble((_33_ + 72))) * 5.2601359015483735E210));
            }
            while (false);
            sq((_33_ + 32), (_33_ + 24), (this._loadDouble((_33_ + 80))));
            sq((_33_ + 16), (_33_ + 8), (this._loadDouble((_33_ + 72))));
            this._storeDouble((_33_ + 88), ((this._loadDouble(_33_)) * (Math.sqrt(((((this._loadDouble((_33_ + 8))) + (this._loadDouble((_33_ + 24)))) + (this._loadDouble((_33_ + 16)))) + (this._loadDouble((_33_ + 32))))))));
        }
        while (false);
        _31_ = this._loadDouble((_33_ + 88));
        this._storeInt((0 + 4), (_33_ + 96));
        return _31_;
    }

    public final void sq(int _30_, int _31_, double _32_)
    {
        double _33_ = 0.0;
        double _34_ = 0.0;
        int _35_ = 0;
        this._storeInt(((_35_ = (this._loadInt((0 + 4))) - 48) + 44), _30_);
        this._storeInt((_35_ + 40), _31_);
        _32_ = this._storeDouble((_35_ + 24), ((_32_ = this._storeDouble((_35_ + 8), ((this._storeDouble((_35_ + 32), _32_)) * 1.34217729E8))) + ((this._loadDouble((_35_ + 32))) - _32_)));
        _32_ = this._storeDouble((_35_ + 16), ((this._loadDouble((_35_ + 32))) - _32_));
        _33_ = this._storeDouble((this._loadInt((_35_ + 44))), ((_34_ = this._loadDouble((_35_ + 32))) * _34_));
        this._storeDouble((this._loadInt((_35_ + 40))), (((((_34_ = this._loadDouble((_35_ + 24))) * _34_) - _33_) + (_32_ * (_34_ + _34_))) + (_32_ * _32_)));
        return;
    }

    public final float hypotf(float _30_, float _31_)
    {
        int _32_ = 0;
        double _33_ = 0.0;
        int _34_ = 0;
        this._storeFloat(((_34_ = (this._loadInt((0 + 4))) - 48) + 40), _30_);
        this._storeFloat((_34_ + 36), _31_);
        this._storeFloat((_34_ + 32), (this._loadFloat((_34_ + 40))));
        this._storeFloat((_34_ + 24), (this._loadFloat((_34_ + 36))));
        this._storeInt((_34_ + 32), ((this._loadInt((_34_ + 32))) & 2147483647));
        _32_ = this._storeInt((_34_ + 24), ((this._loadInt((_34_ + 24))) & 2147483647));
        label$0:
        do {
            if (((this._loadInt((_34_ + 32))) & 4294967295L) >= (_32_ & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_34_ + 16), (this._loadInt((_34_ + 32))));
            this._storeInt((_34_ + 32), (this._loadInt((_34_ + 24))));
            this._storeInt((_34_ + 24), (this._loadInt((_34_ + 16))));
        }
        while (false);
        this._storeFloat((_34_ + 40), (this._loadFloat((_34_ + 32))));
        this._storeFloat((_34_ + 36), (this._loadFloat((_34_ + 24))));
        label$1:
        do {
            if ((this._loadInt((_34_ + 24))) != 2139095040) {
                break label$1;
            }
            this._storeFloat((_34_ + 44), (this._loadFloat((_34_ + 36))));
            return (this._loadFloat((_34_ + 44)));
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                if (((this._loadInt((_34_ + 32))) & 4294967295L) > (2139095039 & 4294967295L)) {
                    break label$3;
                }
                if ((this._loadInt((_34_ + 24))) == 0) {
                    break label$3;
                }
                if ((((this._loadInt((_34_ + 32))) - (this._loadInt((_34_ + 24)))) & 4294967295L) < (209715200 & 4294967295L)) {
                    break label$2;
                }
            }
            while (false);
            this._storeFloat((_34_ + 44), ((this._loadFloat((_34_ + 40))) + (this._loadFloat((_34_ + 36)))));
            return (this._loadFloat((_34_ + 44)));
        }
        while (false);
        this._storeInt((_34_ + 12), 1065353216);
        label$4:
        do {
            label$5:
            do {
                if (((this._loadInt((_34_ + 32))) & 4294967295L) < (1568669696 & 4294967295L)) {
                    break label$5;
                }
                this._storeInt((_34_ + 12), 1820327936);
                this._storeFloat((_34_ + 40), ((this._loadFloat((_34_ + 40))) * 8.0779357E-28f));
                this._storeFloat((_34_ + 36), ((this._loadFloat((_34_ + 36))) * 8.0779357E-28f));
                break label$4;
            }
            while (false);
            if (((this._loadInt((_34_ + 24))) & 4294967295L) > (562036735 & 4294967295L)) {
                break label$4;
            }
            this._storeInt((_34_ + 12), 310378496);
            this._storeFloat((_34_ + 40), ((this._loadFloat((_34_ + 40))) * 1.23794004E27f));
            this._storeFloat((_34_ + 36), ((this._loadFloat((_34_ + 36))) * 1.23794004E27f));
        }
        while (false);
        this._storeFloat((_34_ + 44), ((this._loadFloat((_34_ + 12))) * ((float) (Math.sqrt(((float) (((_33_ = (double) (this._loadFloat((_34_ + 40)))) * _33_) + ((_33_ = (double) (this._loadFloat((_34_ + 36)))) * _33_))))))));
        return (this._loadFloat((_34_ + 44)));
    }

    public final void hypotl(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (hypot((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))), _36_)));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final int ilogb(double _30_)
    {
        int _31_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 48) + 24), (this._storeDouble((_31_ + 32), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._storeInt((_31_ + 12), ((int) (((this._storeLong((_31_ + 16), (this._loadLong((_31_ + 24))))) >>> 52L) & 2047L)))) == 0) {
                        break label$2;
                    }
                    if ((this._loadInt((_31_ + 12))) != 2047) {
                        break label$1;
                    }
                    this._storeInt((_31_ + 4), 2143289344);
                    _temp$0 = -2147483648;
                    _temp$1 = 2147483647;
                    _temp$2 = (((this._loadLong((_31_ + 16))) << 12L) != 0L) ? _temp$0 : _temp$1;
                    this._storeInt((_31_ + 44), _temp$2);
                    return (this._loadInt((_31_ + 44)));
                }
                while (false);
                if ((this._storeLong((_31_ + 16), ((this._loadLong((_31_ + 16))) << 12L))) == 0L) {
                    break label$0;
                }
                this._storeInt((_31_ + 12), -1023);
                label$4:
                do {
                    label$3:
                    while (true) {
                        if (((this._loadLong((_31_ + 16))) >>> 63L) != 0L) {
                            break label$4;
                        }
                        this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) + -1));
                        this._storeLong((_31_ + 16), ((this._loadLong((_31_ + 16))) << 1L));
                        continue label$3;
                    }
                }
                while (false);
                this._storeInt((_31_ + 44), (this._loadInt((_31_ + 12))));
                return (this._loadInt((_31_ + 44)));
            }
            while (false);
            this._storeInt((_31_ + 44), ((this._loadInt((_31_ + 12))) + -1023));
            return (this._loadInt((_31_ + 44)));
        }
        while (false);
        this._storeInt((_31_ + 8), 2143289344);
        this._storeInt((_31_ + 44), -2147483648);
        return (this._loadInt((_31_ + 44)));
    }

    public final int ilogbf(float _30_)
    {
        int _31_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 32) + 16), (this._storeFloat((_31_ + 24), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._storeInt((_31_ + 8), (((this._storeInt((_31_ + 12), (this._loadInt((_31_ + 16))))) >>> 23) & 255))) == 0) {
                        break label$2;
                    }
                    if ((this._loadInt((_31_ + 8))) != 255) {
                        break label$1;
                    }
                    this._storeInt(_31_, 2143289344);
                    _temp$0 = -2147483648;
                    _temp$1 = 2147483647;
                    _temp$2 = (((this._loadInt((_31_ + 12))) << 9) != 0) ? _temp$0 : _temp$1;
                    this._storeInt((_31_ + 28), _temp$2);
                    return (this._loadInt((_31_ + 28)));
                }
                while (false);
                if ((this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) << 9))) == 0) {
                    break label$0;
                }
                this._storeInt((_31_ + 8), -127);
                label$4:
                do {
                    label$3:
                    while (true) {
                        if (((this._loadInt((_31_ + 12))) >>> 31) != 0) {
                            break label$4;
                        }
                        this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) + -1));
                        this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) << 1));
                        continue label$3;
                    }
                }
                while (false);
                this._storeInt((_31_ + 28), (this._loadInt((_31_ + 8))));
                return (this._loadInt((_31_ + 28)));
            }
            while (false);
            this._storeInt((_31_ + 28), ((this._loadInt((_31_ + 8))) + -127));
            return (this._loadInt((_31_ + 28)));
        }
        while (false);
        this._storeInt((_31_ + 4), 2143289344);
        this._storeInt((_31_ + 28), -2147483648);
        return (this._loadInt((_31_ + 28)));
    }

    public final int ilogbl(long _30_, long _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        _33_ = ilogb((this.__trunctfdf2.invoke((this._storeLong((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), _30_)), (this._storeLong((_32_ + 8), _31_)))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _33_;
    }

    public final long imaxabs(long _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._storeLong(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), _30_)) < 1L) {
                break label$0;
            }
            return (this._loadLong((_31_ + 8)));
        }
        while (false);
        return (0L - (this._loadLong((_31_ + 8))));
    }

    public final void imaxdiv(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this._storeLong(((_33_ = (this._loadInt((0 + 4))) - 16) + 8), _31_);
        this._storeLong(_33_, _32_);
        this._storeLong(_30_, ((_31_ = this._loadLong((_33_ + 8))) / _32_));
        this._storeLong((_30_ + 8), (_31_ % _32_));
        return;
    }

    public final int index(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = strchr((this._loadInt((_32_ + 12))), _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final long __intscan(int _30_, int _31_, int _32_, long _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 52), _30_);
        this._storeInt((_34_ + 48), _31_);
        this._storeInt((_34_ + 44), _32_);
        this._storeLong((_34_ + 32), _33_);
        this._storeInt((_34_ + 28), 9937);
        this._storeInt((_34_ + 20), 0);
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_34_ + 48))) & 4294967295L) < (37 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((__errno_location()), 22);
                this._storeLong((_34_ + 56), 0L);
                break label$0;
            }
            while (false);
            label$2$end:
            do {
                label$2:
                while (true) {
                    label$4:
                    do {
                        label$5:
                        do {
                            if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                break label$5;
                            }
                            this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                            _32_ = this._loadInt(_32_);
                            break label$4;
                        }
                        while (false);
                        _32_ = __shgetc((this._loadInt((_34_ + 52))));
                    }
                    while (false);
                    if ((__isspace$2e$98((this._storeInt((_34_ + 24), _32_)))) != 0) {
                        continue label$2;
                    }
                    break label$2$end;
                }
            }
            while (false);
            label$6:
            do {
                label$7:
                do {
                    if ((this._loadInt((_34_ + 24))) == 43) {
                        break label$7;
                    }
                    if ((this._loadInt((_34_ + 24))) != 45) {
                        break label$6;
                    }
                }
                while (false);
                this._storeInt((_34_ + 20), (0 - (((this._loadInt((_34_ + 24))) == 45) ? 1 : 0)));
                label$8:
                do {
                    label$9:
                    do {
                        if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                            break label$9;
                        }
                        this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                        _32_ = this._loadInt(_32_);
                        break label$8;
                    }
                    while (false);
                    _32_ = __shgetc((this._loadInt((_34_ + 52))));
                }
                while (false);
                this._storeInt((_34_ + 24), _32_);
            }
            while (false);
            label$10:
            do {
                label$11:
                do {
                    label$12:
                    do {
                        label$13:
                        do {
                            label$14:
                            do {
                                label$15:
                                do {
                                    label$16:
                                    do {
                                        if ((this._loadInt((_34_ + 48))) == 0) {
                                            break label$16;
                                        }
                                        if ((this._loadInt((_34_ + 48))) != 16) {
                                            break label$15;
                                        }
                                    }
                                    while (false);
                                    if ((this._loadInt((_34_ + 24))) != 48) {
                                        break label$15;
                                    }
                                    if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                        break label$14;
                                    }
                                    this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                    _32_ = this._loadInt(_32_);
                                    break label$13;
                                }
                                while (false);
                                label$17:
                                do {
                                    if ((this._loadInt((_34_ + 48))) != 0) {
                                        break label$17;
                                    }
                                    this._storeInt((_34_ + 48), 10);
                                }
                                while (false);
                                if (((this._loadInt(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24)))))) & 4294967295L) < ((this._loadInt((_34_ + 48))) & 4294967295L)) {
                                    break label$12;
                                }
                                label$18:
                                do {
                                    if ((this._loadInt(((this._loadInt((_34_ + 52))) + 104))) == 0) {
                                        break label$18;
                                    }
                                    this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((this._loadInt((_32_ + 4))) + -1));
                                }
                                while (false);
                                __shlim((this._loadInt((_34_ + 52))), 0L);
                                this._storeInt((__errno_location()), 22);
                                this._storeLong((_34_ + 56), 0L);
                                break label$0;
                            }
                            while (false);
                            _32_ = __shgetc((this._loadInt((_34_ + 52))));
                        }
                        while (false);
                        label$19:
                        do {
                            label$20:
                            do {
                                label$21:
                                do {
                                    if (((this._storeInt((_34_ + 24), _32_)) | 32) != 120) {
                                        break label$21;
                                    }
                                    if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                        break label$20;
                                    }
                                    this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                    _32_ = this._loadInt(_32_);
                                    break label$19;
                                }
                                while (false);
                                if ((this._loadInt((_34_ + 48))) != 0) {
                                    break label$12;
                                }
                                this._storeInt((_34_ + 48), 8);
                                break label$12;
                            }
                            while (false);
                            _32_ = __shgetc((this._loadInt((_34_ + 52))));
                        }
                        while (false);
                        label$22:
                        do {
                            if ((this._loadInt(((this._storeInt((_34_ + 24), _32_)) + (this._loadInt((_34_ + 28)))))) < 16) {
                                break label$22;
                            }
                            label$23:
                            do {
                                if ((this._loadInt(((this._loadInt((_34_ + 52))) + 104))) == 0) {
                                    break label$23;
                                }
                                this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((this._loadInt((_32_ + 4))) + -1));
                            }
                            while (false);
                            if ((this._loadInt((_34_ + 44))) == 0) {
                                break label$11;
                            }
                            if ((this._loadInt(((this._loadInt((_34_ + 52))) + 104))) == 0) {
                                break label$10;
                            }
                            this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((this._loadInt((_32_ + 4))) + -1));
                            break label$10;
                        }
                        while (false);
                        this._storeInt((_34_ + 48), 16);
                    }
                    while (false);
                    label$24:
                    do {
                        label$25:
                        do {
                            label$26:
                            do {
                                label$27:
                                do {
                                    label$28:
                                    do {
                                        label$29:
                                        do {
                                            if ((this._loadInt((_34_ + 48))) != 10) {
                                                break label$29;
                                            }
                                            this._storeInt((_34_ + 16), 0);
                                            label$30:
                                            while (true) {
                                                _32_ = 0;
                                                label$32:
                                                do {
                                                    if ((((this._loadInt((_34_ + 24))) + -48) & 4294967295L) > (9 & 4294967295L)) {
                                                        break label$32;
                                                    }
                                                    _32_ = (((this._loadInt((_34_ + 16))) & 4294967295L) < (429496729 & 4294967295L)) ? 1 : 0;
                                                }
                                                while (false);
                                                if (_32_ == 0) {
                                                    break label$28;
                                                }
                                                this._storeInt((_34_ + 16), ((((this._loadInt((_34_ + 16))) * 10) + (this._loadInt((_34_ + 24)))) + -48));
                                                label$33:
                                                do {
                                                    if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                                        break label$33;
                                                    }
                                                    this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                                    this._storeInt((_34_ + 24), (this._loadInt(_32_)));
                                                    continue label$30;
                                                }
                                                while (false);
                                                this._storeInt((_34_ + 24), (__shgetc((this._loadInt((_34_ + 52))))));
                                                continue label$30;
                                            }
                                        }
                                        while (false);
                                        if (((_32_ = this._loadInt((_34_ + 48))) & (_32_ + -1)) == 0) {
                                            break label$26;
                                        }
                                        this._storeInt((_34_ + 16), 0);
                                        label$34:
                                        while (true) {
                                            _32_ = 0;
                                            label$36:
                                            do {
                                                if (((this._loadInt(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24)))))) & 4294967295L) >= ((this._loadInt((_34_ + 48))) & 4294967295L)) {
                                                    break label$36;
                                                }
                                                _32_ = (((this._loadInt((_34_ + 16))) & 4294967295L) < (119304647 & 4294967295L)) ? 1 : 0;
                                            }
                                            while (false);
                                            if (_32_ == 0) {
                                                break label$27;
                                            }
                                            this._storeInt((_34_ + 16), (((this._loadInt((_34_ + 16))) * (this._loadInt((_34_ + 48)))) + (this._loadInt(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24))))))));
                                            label$37:
                                            do {
                                                if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                                    break label$37;
                                                }
                                                this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                                this._storeInt((_34_ + 24), (this._loadInt(_32_)));
                                                continue label$34;
                                            }
                                            while (false);
                                            this._storeInt((_34_ + 24), (__shgetc((this._loadInt((_34_ + 52))))));
                                            continue label$34;
                                        }
                                    }
                                    while (false);
                                    this._storeLong((_34_ + 8), (this._loadLong((_34_ + 16))));
                                    label$39:
                                    do {
                                        label$38:
                                        while (true) {
                                            _32_ = 0;
                                            label$40:
                                            do {
                                                if ((((this._loadInt((_34_ + 24))) + -48) & 4294967295L) > (9 & 4294967295L)) {
                                                    break label$40;
                                                }
                                                if (((this._loadLong((_34_ + 8))) & 4294967295L) > (1844674407370955161L & 4294967295L)) {
                                                    break label$40;
                                                }
                                                _32_ = ((((this._loadLong((_34_ + 8))) * 10L) & 4294967295L) <= ((((long) ((this._loadInt((_34_ + 24))) + -48)) ^ -1L) & 4294967295L)) ? 1 : 0;
                                            }
                                            while (false);
                                            if (_32_ == 0) {
                                                break label$39;
                                            }
                                            this._storeLong((_34_ + 8), (((this._loadLong((_34_ + 8))) * 10L) + ((long) ((this._loadInt((_34_ + 24))) + -48))));
                                            label$41:
                                            do {
                                                if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                                    break label$41;
                                                }
                                                this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                                this._storeInt((_34_ + 24), (this._loadInt(_32_)));
                                                continue label$38;
                                            }
                                            while (false);
                                            this._storeInt((_34_ + 24), (__shgetc((this._loadInt((_34_ + 52))))));
                                            continue label$38;
                                        }
                                    }
                                    while (false);
                                    if ((((this._loadInt((_34_ + 24))) + -48) & 4294967295L) <= (9 & 4294967295L)) {
                                        break label$25;
                                    }
                                    break label$24;
                                }
                                while (false);
                                this._storeLong((_34_ + 8), (this._loadLong((_34_ + 16))));
                                label$42:
                                while (true) {
                                    _32_ = 0;
                                    label$44:
                                    do {
                                        if (((this._loadInt(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24)))))) & 4294967295L) >= ((this._loadInt((_34_ + 48))) & 4294967295L)) {
                                            break label$44;
                                        }
                                        if (((this._loadLong((_34_ + 8))) & 4294967295L) > ((-1L / (this._loadLong((_34_ + 48)))) & 4294967295L)) {
                                            break label$44;
                                        }
                                        _32_ = ((((this._loadLong((_34_ + 48))) * (this._loadLong((_34_ + 8)))) & 4294967295L) <= (((this._loadLong(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24)))))) ^ -1L) & 4294967295L)) ? 1 : 0;
                                    }
                                    while (false);
                                    if (_32_ == 0) {
                                        break label$25;
                                    }
                                    this._storeLong((_34_ + 8), (((this._loadLong((_34_ + 8))) * (this._loadLong((_34_ + 48)))) + (this._loadLong(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24))))))));
                                    label$45:
                                    do {
                                        if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                            break label$45;
                                        }
                                        this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                        this._storeInt((_34_ + 24), (this._loadInt(_32_)));
                                        continue label$42;
                                    }
                                    while (false);
                                    this._storeInt((_34_ + 24), (__shgetc((this._loadInt((_34_ + 52))))));
                                    continue label$42;
                                }
                            }
                            while (false);
                            this._storeInt((_34_ + 4), (this._loadInt((((((this._loadInt((_34_ + 48))) * 23) >>> 5) & 7) + 10208))));
                            this._storeInt((_34_ + 16), 0);
                            label$47:
                            do {
                                label$46:
                                while (true) {
                                    _32_ = 0;
                                    label$48:
                                    do {
                                        if (((this._loadInt(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24)))))) & 4294967295L) >= ((this._loadInt((_34_ + 48))) & 4294967295L)) {
                                            break label$48;
                                        }
                                        _32_ = (((this._loadInt((_34_ + 16))) & 4294967295L) < (134217728 & 4294967295L)) ? 1 : 0;
                                    }
                                    while (false);
                                    if (_32_ == 0) {
                                        break label$47;
                                    }
                                    this._storeInt((_34_ + 16), (((this._loadInt((_34_ + 16))) << (this._loadInt((_34_ + 4)))) | (this._loadInt(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24))))))));
                                    label$49:
                                    do {
                                        if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                            break label$49;
                                        }
                                        this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                        this._storeInt((_34_ + 24), (this._loadInt(_32_)));
                                        continue label$46;
                                    }
                                    while (false);
                                    this._storeInt((_34_ + 24), (__shgetc((this._loadInt((_34_ + 52))))));
                                    continue label$46;
                                }
                            }
                            while (false);
                            this._storeLong((_34_ + 8), (this._loadLong((_34_ + 16))));
                            label$51:
                            do {
                                label$50:
                                while (true) {
                                    _32_ = 0;
                                    label$52:
                                    do {
                                        if (((this._loadInt(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24)))))) & 4294967295L) >= ((this._loadInt((_34_ + 48))) & 4294967295L)) {
                                            break label$52;
                                        }
                                        _32_ = (((this._loadLong((_34_ + 8))) & 4294967295L) <= ((-1L >>> (this._loadLong((_34_ + 4)))) & 4294967295L)) ? 1 : 0;
                                    }
                                    while (false);
                                    if (_32_ == 0) {
                                        break label$51;
                                    }
                                    this._storeLong((_34_ + 8), (((this._loadLong((_34_ + 8))) << (this._loadLong((_34_ + 4)))) | (this._loadLong(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24))))))));
                                    label$53:
                                    do {
                                        if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                            break label$53;
                                        }
                                        this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                        this._storeInt((_34_ + 24), (this._loadInt(_32_)));
                                        continue label$50;
                                    }
                                    while (false);
                                    this._storeInt((_34_ + 24), (__shgetc((this._loadInt((_34_ + 52))))));
                                    continue label$50;
                                }
                            }
                            while (false);
                        }
                        while (false);
                        if (((this._loadInt(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24)))))) & 4294967295L) >= ((this._loadInt((_34_ + 48))) & 4294967295L)) {
                            break label$24;
                        }
                        label$55:
                        do {
                            label$54:
                            while (true) {
                                if (((this._loadInt(((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 24)))))) & 4294967295L) >= ((this._loadInt((_34_ + 48))) & 4294967295L)) {
                                    break label$55;
                                }
                                label$56:
                                do {
                                    if (((this._loadInt(((_32_ = this._loadInt((_34_ + 52))) + 4))) & 4294967295L) >= ((this._loadInt((_32_ + 104))) & 4294967295L)) {
                                        break label$56;
                                    }
                                    this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((_32_ = this._loadInt((_32_ + 4))) + 1));
                                    this._storeInt((_34_ + 24), (this._loadInt(_32_)));
                                    continue label$54;
                                }
                                while (false);
                                this._storeInt((_34_ + 24), (__shgetc((this._loadInt((_34_ + 52))))));
                                continue label$54;
                            }
                        }
                        while (false);
                        this._storeInt((__errno_location()), 34);
                        this._storeLong((_34_ + 8), (this._loadLong((_34_ + 32))));
                        if (((this._loadInt((_34_ + 32))) & 1) == 0) {
                            break label$24;
                        }
                        this._storeInt((_34_ + 20), 0);
                    }
                    while (false);
                    label$57:
                    do {
                        if ((this._loadInt(((this._loadInt((_34_ + 52))) + 104))) == 0) {
                            break label$57;
                        }
                        this._storeInt(((_32_ = this._loadInt((_34_ + 52))) + 4), ((this._loadInt((_32_ + 4))) + -1));
                    }
                    while (false);
                    label$58:
                    do {
                        label$59:
                        do {
                            if (((this._loadLong((_34_ + 8))) & 4294967295L) < ((this._loadLong((_34_ + 32))) & 4294967295L)) {
                                break label$59;
                            }
                            label$60:
                            do {
                                if (((this._loadInt((_34_ + 32))) & 1) != 0) {
                                    break label$60;
                                }
                                if ((this._loadInt((_34_ + 20))) == 0) {
                                    break label$58;
                                }
                            }
                            while (false);
                            if (((this._loadLong((_34_ + 8))) & 4294967295L) <= ((this._loadLong((_34_ + 32))) & 4294967295L)) {
                                break label$59;
                            }
                            this._storeInt((__errno_location()), 34);
                            this._storeLong((_34_ + 56), (this._loadLong((_34_ + 32))));
                            break label$0;
                        }
                        while (false);
                        this._storeLong((_34_ + 56), (((this._loadLong((_34_ + 8))) ^ (_33_ = this._loadLong((_34_ + 20)))) - _33_));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((__errno_location()), 34);
                    this._storeLong((_34_ + 56), ((this._loadLong((_34_ + 32))) + -1L));
                    break label$0;
                }
                while (false);
                __shlim((this._loadInt((_34_ + 52))), 0L);
            }
            while (false);
            this._storeLong((_34_ + 56), 0L);
        }
        while (false);
        _33_ = this._loadLong((_34_ + 56));
        this._storeInt((0 + 4), (_34_ + 64));
        return _33_;
    }

    public final int __isspace$2e$98(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if ((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) == 32) {
                break label$0;
            }
            _31_ = ((((this._loadInt((_32_ + 12))) + -9) & 4294967295L) < (5 & 4294967295L)) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int isalnum(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if (((((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) | 32) + -97) & 4294967295L) < (26 & 4294967295L)) {
                break label$0;
            }
            _31_ = ((((this._loadInt((_32_ + 12))) + -48) & 4294967295L) < (10 & 4294967295L)) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int __isalnum_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = isalnum((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int isalpha(int _30_)
    {
        return ((((((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) | 32) + -97) & 4294967295L) < (26 & 4294967295L)) ? 1 : 0);
    }

    public final int __isalpha_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = isalpha((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int isascii(int _30_)
    {
        return ((((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) & -128) == 0) ? 1 : 0);
    }

    public final int isatty(int _30_)
    {
        int _31_ = 0;
        _30_ = this.__syscall3.invoke(54, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 21523, _31_);
        this._storeInt((0 + 4), (_31_ + 16));
        return ((_30_ == 0) ? 1 : 0);
    }

    public final int isblank(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if ((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) == 32) {
                break label$0;
            }
            _31_ = ((this._loadInt((_32_ + 12))) == 9) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int __isblank_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = isblank((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int iscntrl(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if (((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) & 4294967295L) < (32 & 4294967295L)) {
                break label$0;
            }
            _31_ = ((this._loadInt((_32_ + 12))) == 127) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int __iscntrl_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = iscntrl((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int isdigit(int _30_)
    {
        return (((((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + -48) & 4294967295L) < (10 & 4294967295L)) ? 1 : 0);
    }

    public final int __isdigit_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = isdigit((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int isgraph(int _30_)
    {
        return (((((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + -33) & 4294967295L) < (94 & 4294967295L)) ? 1 : 0);
    }

    public final int __isgraph_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = isgraph((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int islower(int _30_)
    {
        return (((((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + -97) & 4294967295L) < (26 & 4294967295L)) ? 1 : 0);
    }

    public final int __islower_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = islower((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int isprint(int _30_)
    {
        return (((((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + -32) & 4294967295L) < (95 & 4294967295L)) ? 1 : 0);
    }

    public final int __isprint_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = isprint((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int ispunct(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = 0;
        label$0:
        do {
            if ((((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) + -33) & 4294967295L) > (93 & 4294967295L)) {
                break label$0;
            }
            _32_ = ((isalnum((this._loadInt((_31_ + 12))))) == 0) ? 1 : 0;
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return _32_;
    }

    public final int __ispunct_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = ispunct((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int isspace(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if ((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) == 32) {
                break label$0;
            }
            _31_ = ((((this._loadInt((_32_ + 12))) + -9) & 4294967295L) < (5 & 4294967295L)) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int __isspace_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = isspace((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int isupper(int _30_)
    {
        return (((((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + -65) & 4294967295L) < (26 & 4294967295L)) ? 1 : 0);
    }

    public final int __isupper_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = isupper((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int isxdigit(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _31_ = 1;
        label$0:
        do {
            if ((((this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) + -48) & 4294967295L) < (10 & 4294967295L)) {
                break label$0;
            }
            _31_ = (((((this._loadInt((_32_ + 12))) | 32) + -97) & 4294967295L) < (6 & 4294967295L)) ? 1 : 0;
        }
        while (false);
        return _31_;
    }

    public final int __isxdigit_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = isxdigit((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final double j0(double _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 48), _30_);
        this._storeDouble((_31_ + 8), (this._loadDouble((_31_ + 48))));
        this._storeLong((_31_ + 20), (this._loadLong((_31_ + 12))));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 20))) & 2147483647))) & 4294967295L) < (2146435072 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_31_ + 56), (1.0 / ((_30_ = this._loadDouble((_31_ + 48))) * _30_)));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 48), (Math.abs((this._loadDouble((_31_ + 48))))));
            label$2:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1073741824 & 4294967295L)) {
                    break label$2;
                }
                this._storeDouble((_31_ + 56), (common((this._loadInt((_31_ + 20))), (this._loadDouble((_31_ + 48))), 0)));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1059061760 & 4294967295L)) {
                    break label$3;
                }
                this._storeDouble((_31_ + 32), ((_30_ = this._storeDouble((_31_ + 40), ((_30_ = this._loadDouble((_31_ + 48))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * -4.618326885321032E-9) + 1.8295404953270067E-6)) + -1.8997929423885472E-4)) + 0.015624999999999995)));
                _30_ = this._storeDouble((_31_ + 24), (((_30_ = this._loadDouble((_31_ + 40))) * ((_30_ * ((_30_ * ((_30_ * 1.1661400333379E-9) + 5.135465502073181E-7)) + 1.1692678466333745E-4)) + 0.015619102946489001)) + 1.0));
                this._storeDouble((_31_ + 56), ((((_32_ = (this._loadDouble((_31_ + 48))) / 2.0) + 1.0) * (1.0 - _32_)) + ((this._loadDouble((_31_ + 40))) * ((this._loadDouble((_31_ + 32))) / _30_))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (939524096 & 4294967295L)) {
                    break label$4;
                }
                this._storeDouble((_31_ + 48), (((_30_ = this._loadDouble((_31_ + 48))) * 0.25) * _30_));
            }
            while (false);
            this._storeDouble((_31_ + 56), (1.0 - (this._loadDouble((_31_ + 48)))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 56));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final double common(int _30_, double _31_, int _32_)
    {
        int _33_ = 0;
        double _34_ = 0.0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 60), _30_);
        this._storeDouble((_33_ + 48), _31_);
        this._storeInt((_33_ + 44), _32_);
        this._storeDouble((_33_ + 32), (sin((this._loadDouble((_33_ + 48))))));
        this._storeDouble((_33_ + 24), (cos((this._loadDouble((_33_ + 48))))));
        label$0:
        do {
            if ((this._loadInt((_33_ + 44))) == 0) {
                break label$0;
            }
            this._storeDouble((_33_ + 24), (-(this._loadDouble((_33_ + 24)))));
        }
        while (false);
        this._storeDouble((_33_ + 8), ((this._loadDouble((_33_ + 32))) + (this._loadDouble((_33_ + 24)))));
        label$1:
        do {
            if (((this._loadInt((_33_ + 60))) & 4294967295L) > (2145386495 & 4294967295L)) {
                break label$1;
            }
            this._storeDouble((_33_ + 16), ((this._loadDouble((_33_ + 32))) - (this._loadDouble((_33_ + 24)))));
            this._storeDouble(_33_, (-(cos(((_31_ = this._loadDouble((_33_ + 48))) + _31_)))));
            label$2:
            do {
                label$3:
                do {
                    if (((((_31_ = (this._loadDouble((_33_ + 32))) * (this._loadDouble((_33_ + 24)))) >= 0.0) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                        break label$3;
                    }
                    this._storeDouble((_33_ + 8), ((this._loadDouble(_33_)) / (this._loadDouble((_33_ + 16)))));
                    break label$2;
                }
                while (false);
                this._storeDouble((_33_ + 16), ((this._loadDouble(_33_)) / (this._loadDouble((_33_ + 8)))));
            }
            while (false);
            if (((this._loadInt((_33_ + 60))) & 4294967295L) > (1207959551 & 4294967295L)) {
                break label$1;
            }
            label$4:
            do {
                if ((this._loadInt((_33_ + 44))) == 0) {
                    break label$4;
                }
                this._storeDouble((_33_ + 16), (-(this._loadDouble((_33_ + 16)))));
            }
            while (false);
            this._storeDouble((_33_ + 8), (((pzero((this._loadDouble((_33_ + 48))))) * (this._loadDouble((_33_ + 8)))) - ((qzero((this._loadDouble((_33_ + 48))))) * (this._loadDouble((_33_ + 16))))));
        }
        while (false);
        _31_ = this._loadDouble((_33_ + 8));
        _34_ = this._loadDouble((_33_ + 48));
        this._storeInt((0 + 4), (_33_ + 64));
        return ((_31_ * 0.5641895835477563) / (Math.sqrt(_34_)));
    }

    public final double pzero(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 64) + 8), (this._storeDouble((_32_ + 56), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 20), ((this._storeInt((_32_ + 20), (this._loadInt((_32_ + 12))))) & 2147483647))) & 4294967295L) < (1075838976 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_32_ + 52), 10608);
                this._storeInt((_32_ + 48), 10656);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1074933387 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_32_ + 52), 10704);
                this._storeInt((_32_ + 48), 10752);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1074191213 & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((_32_ + 52), 10800);
                this._storeInt((_32_ + 48), 10848);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 52), 10896);
            this._storeInt((_32_ + 48), 10944);
        }
        while (false);
        _30_ = this._storeDouble((_32_ + 40), (1.0 / ((_30_ = this._loadDouble((_32_ + 56))) * _30_)));
        this._storeDouble((_32_ + 32), ((this._loadDouble((_31_ = this._loadInt((_32_ + 52))))) + (_30_ * ((this._loadDouble((_31_ + 8))) + (_30_ * ((this._loadDouble((_31_ + 16))) + (_30_ * ((this._loadDouble((_31_ + 24))) + (_30_ * ((this._loadDouble((_31_ + 32))) + (_30_ * (this._loadDouble((_31_ + 40))))))))))))));
        _30_ = this._storeDouble((_32_ + 24), (((_30_ = this._loadDouble((_32_ + 40))) * ((this._loadDouble((_31_ = this._loadInt((_32_ + 48))))) + (_30_ * ((this._loadDouble((_31_ + 8))) + (_30_ * ((this._loadDouble((_31_ + 16))) + (_30_ * ((this._loadDouble((_31_ + 24))) + (_30_ * (this._loadDouble((_31_ + 32)))))))))))) + 1.0));
        return (((this._loadDouble((_32_ + 32))) / _30_) + 1.0);
    }

    public final double qzero(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 64) + 8), (this._storeDouble((_32_ + 56), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 20), ((this._storeInt((_32_ + 20), (this._loadInt((_32_ + 12))))) & 2147483647))) & 4294967295L) < (1075838976 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_32_ + 52), 10224);
                this._storeInt((_32_ + 48), 10272);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1074933387 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_32_ + 52), 10320);
                this._storeInt((_32_ + 48), 10368);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1074191213 & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((_32_ + 52), 10416);
                this._storeInt((_32_ + 48), 10464);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 52), 10512);
            this._storeInt((_32_ + 48), 10560);
        }
        while (false);
        _30_ = this._storeDouble((_32_ + 24), (1.0 / ((_30_ = this._loadDouble((_32_ + 56))) * _30_)));
        this._storeDouble((_32_ + 32), ((this._loadDouble((_31_ = this._loadInt((_32_ + 52))))) + (_30_ * ((this._loadDouble((_31_ + 8))) + (_30_ * ((this._loadDouble((_31_ + 16))) + (_30_ * ((this._loadDouble((_31_ + 24))) + (_30_ * ((this._loadDouble((_31_ + 32))) + (_30_ * (this._loadDouble((_31_ + 40))))))))))))));
        _30_ = this._storeDouble((_32_ + 40), (((_30_ = this._loadDouble((_32_ + 24))) * ((this._loadDouble((_31_ = this._loadInt((_32_ + 48))))) + (_30_ * ((this._loadDouble((_31_ + 8))) + (_30_ * ((this._loadDouble((_31_ + 16))) + (_30_ * ((this._loadDouble((_31_ + 24))) + (_30_ * ((this._loadDouble((_31_ + 32))) + (_30_ * (this._loadDouble((_31_ + 40)))))))))))))) + 1.0));
        return ((((this._loadDouble((_32_ + 32))) / _30_) + -0.125) / (this._loadDouble((_32_ + 56))));
    }

    public final double y0(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 48), _30_);
        this._storeDouble((_31_ + 8), (this._loadDouble((_31_ + 48))));
        this._storeLong((_31_ + 20), (this._loadLong((_31_ + 12))));
        this._storeLong((_31_ + 16), (this._loadLong((_31_ + 8))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((this._loadInt((_31_ + 20))) << 1) | (this._loadInt((_31_ + 16)))) == 0) {
                        break label$2;
                    }
                    if (((this._loadInt((_31_ + 20))) >>> 31) == 0) {
                        break label$1;
                    }
                    this._storeLong((_31_ + 56), 9221120237041090560L);
                    break label$0;
                }
                while (false);
                this._storeLong((_31_ + 56), -4503599627370496L);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (2146435072 & 4294967295L)) {
                    break label$3;
                }
                this._storeDouble((_31_ + 56), (1.0 / (this._loadDouble((_31_ + 48)))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1073741824 & 4294967295L)) {
                    break label$4;
                }
                this._storeDouble((_31_ + 56), (common((this._loadInt((_31_ + 20))), (this._loadDouble((_31_ + 48))), 1)));
                break label$0;
            }
            while (false);
            label$5:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1044381696 & 4294967295L)) {
                    break label$5;
                }
                this._storeDouble((_31_ + 32), (((_30_ = this._storeDouble((_31_ + 40), ((_30_ = this._loadDouble((_31_ + 48))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -3.982051941321034E-11) + 1.9559013703502292E-8)) + -3.8140705372436416E-6)) + 3.4745343209368365E-4)) + -0.01381856719455969)) + 0.17666645250918112)) + -0.07380429510868723));
                _30_ = this._storeDouble((_31_ + 24), (((_30_ = this._loadDouble((_31_ + 40))) * ((_30_ * ((_30_ * ((_30_ * 4.4111031133267547E-10) + 2.591508518404578E-7)) + 7.600686273503533E-5)) + 0.01273048348341237)) + 1.0));
                this._storeDouble((_31_ + 56), (((this._loadDouble((_31_ + 32))) / _30_) + (((j0((this._loadDouble((_31_ + 48))))) * (log((this._loadDouble((_31_ + 48)))))) * 0.6366197723675814)));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 56), (((log((this._loadDouble((_31_ + 48))))) * 0.6366197723675814) + -0.07380429510868723));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 56));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final float j0f(float _30_)
    {
        int _31_ = 0;
        float _32_ = 0.0f;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeFloat(_31_, (this._loadFloat((_31_ + 24))));
        this._storeInt((_31_ + 8), (this._loadInt(_31_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) & 2147483647))) & 4294967295L) < (2139095040 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_31_ + 28), (1.0f / ((_30_ = this._loadFloat((_31_ + 24))) * _30_)));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 24), (Math.abs((this._loadFloat((_31_ + 24))))));
            label$2:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) < (1073741824 & 4294967295L)) {
                    break label$2;
                }
                this._storeFloat((_31_ + 28), (common$2e$102((this._loadInt((_31_ + 8))), (this._loadFloat((_31_ + 24))), 0)));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) < (973078528 & 4294967295L)) {
                    break label$3;
                }
                this._storeFloat((_31_ + 16), ((_30_ = this._storeFloat((_31_ + 20), ((_30_ = this._loadFloat((_31_ + 24))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * -4.618327E-9f) + 1.8295405E-6f)) + -1.899793E-4f)) + 0.015625f)));
                _30_ = this._storeFloat((_31_ + 12), (((_30_ = this._loadFloat((_31_ + 20))) * ((_30_ * ((_30_ * ((_30_ * 1.1661401E-9f) + 5.135465E-7f)) + 1.16926785E-4f)) + 0.015619103f)) + 1.0f));
                this._storeFloat((_31_ + 28), ((((_32_ = (this._loadFloat((_31_ + 24))) / 2.0f) + 1.0f) * (1.0f - _32_)) + ((this._loadFloat((_31_ + 20))) * ((this._loadFloat((_31_ + 16))) / _30_))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) < (562036736 & 4294967295L)) {
                    break label$4;
                }
                this._storeFloat((_31_ + 24), (((_30_ = this._loadFloat((_31_ + 24))) * 0.25f) * _30_));
            }
            while (false);
            this._storeFloat((_31_ + 28), (1.0f - (this._loadFloat((_31_ + 24)))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final float common$2e$102(int _30_, float _31_, int _32_)
    {
        int _33_ = 0;
        float _34_ = 0.0f;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeFloat((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        this._storeFloat((_33_ + 12), (sinf((this._loadFloat((_33_ + 24))))));
        this._storeFloat((_33_ + 8), (cosf((this._loadFloat((_33_ + 24))))));
        label$0:
        do {
            if ((this._loadInt((_33_ + 20))) == 0) {
                break label$0;
            }
            this._storeFloat((_33_ + 8), (-(this._loadFloat((_33_ + 8)))));
        }
        while (false);
        this._storeFloat(_33_, ((this._loadFloat((_33_ + 12))) + (this._loadFloat((_33_ + 8)))));
        label$1:
        do {
            if (((this._loadInt((_33_ + 28))) & 4294967295L) > (2130706431 & 4294967295L)) {
                break label$1;
            }
            this._storeFloat((_33_ + 4), ((this._loadFloat((_33_ + 12))) - (this._loadFloat((_33_ + 8)))));
            this._storeFloat((_33_ + 16), (-(cosf(((_31_ = this._loadFloat((_33_ + 24))) + _31_)))));
            label$2:
            do {
                label$3:
                do {
                    if (((((_31_ = (this._loadFloat((_33_ + 12))) * (this._loadFloat((_33_ + 8)))) >= 0.0f) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                        break label$3;
                    }
                    this._storeFloat(_33_, ((this._loadFloat((_33_ + 16))) / (this._loadFloat((_33_ + 4)))));
                    break label$2;
                }
                while (false);
                this._storeFloat((_33_ + 4), ((this._loadFloat((_33_ + 16))) / (this._loadFloat(_33_))));
            }
            while (false);
            if (((this._loadInt((_33_ + 28))) & 4294967295L) > (1484783615 & 4294967295L)) {
                break label$1;
            }
            label$4:
            do {
                if ((this._loadInt((_33_ + 20))) == 0) {
                    break label$4;
                }
                this._storeFloat((_33_ + 4), (-(this._loadFloat((_33_ + 4)))));
            }
            while (false);
            this._storeFloat(_33_, (((pzerof((this._loadFloat((_33_ + 24))))) * (this._loadFloat(_33_))) - ((qzerof((this._loadFloat((_33_ + 24))))) * (this._loadFloat((_33_ + 4))))));
        }
        while (false);
        _31_ = this._loadFloat(_33_);
        _34_ = this._loadFloat((_33_ + 24));
        this._storeInt((0 + 4), (_33_ + 32));
        return ((_31_ * 0.5641896f) / ((float) (Math.sqrt(_34_))));
    }

    public final float pzerof(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeFloat((_32_ = (this._loadInt((0 + 4))) - 32), (this._storeFloat((_32_ + 28), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 4), ((this._storeInt((_32_ + 4), (this._loadInt(_32_)))) & 2147483647))) & 4294967295L) < (1090519040 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_32_ + 24), 11248);
                this._storeInt((_32_ + 20), 11280);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 4))) & 4294967295L) < (1089936472 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_32_ + 24), 11312);
                this._storeInt((_32_ + 20), 11344);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_32_ + 4))) & 4294967295L) < (1077336936 & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((_32_ + 24), 11376);
                this._storeInt((_32_ + 20), 11408);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 24), 11440);
            this._storeInt((_32_ + 20), 11472);
        }
        while (false);
        _30_ = this._storeFloat((_32_ + 16), (1.0f / ((_30_ = this._loadFloat((_32_ + 28))) * _30_)));
        this._storeFloat((_32_ + 12), ((this._loadFloat((_31_ = this._loadInt((_32_ + 24))))) + (_30_ * ((this._loadFloat((_31_ + 4))) + (_30_ * ((this._loadFloat((_31_ + 8))) + (_30_ * ((this._loadFloat((_31_ + 12))) + (_30_ * ((this._loadFloat((_31_ + 16))) + (_30_ * (this._loadFloat((_31_ + 20))))))))))))));
        _30_ = this._storeFloat((_32_ + 8), (((_30_ = this._loadFloat((_32_ + 16))) * ((this._loadFloat((_31_ = this._loadInt((_32_ + 20))))) + (_30_ * ((this._loadFloat((_31_ + 4))) + (_30_ * ((this._loadFloat((_31_ + 8))) + (_30_ * ((this._loadFloat((_31_ + 12))) + (_30_ * (this._loadFloat((_31_ + 16)))))))))))) + 1.0f));
        return (((this._loadFloat((_32_ + 12))) / _30_) + 1.0f);
    }

    public final float qzerof(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeFloat((_32_ = (this._loadInt((0 + 4))) - 32), (this._storeFloat((_32_ + 28), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 4), ((this._storeInt((_32_ + 4), (this._loadInt(_32_)))) & 2147483647))) & 4294967295L) < (1090519040 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_32_ + 24), 10992);
                this._storeInt((_32_ + 20), 11024);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 4))) & 4294967295L) < (1089936472 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_32_ + 24), 11056);
                this._storeInt((_32_ + 20), 11088);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_32_ + 4))) & 4294967295L) < (1077336936 & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((_32_ + 24), 11120);
                this._storeInt((_32_ + 20), 11152);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 24), 11184);
            this._storeInt((_32_ + 20), 11216);
        }
        while (false);
        _30_ = this._storeFloat((_32_ + 8), (1.0f / ((_30_ = this._loadFloat((_32_ + 28))) * _30_)));
        this._storeFloat((_32_ + 12), ((this._loadFloat((_31_ = this._loadInt((_32_ + 24))))) + (_30_ * ((this._loadFloat((_31_ + 4))) + (_30_ * ((this._loadFloat((_31_ + 8))) + (_30_ * ((this._loadFloat((_31_ + 12))) + (_30_ * ((this._loadFloat((_31_ + 16))) + (_30_ * (this._loadFloat((_31_ + 20))))))))))))));
        _30_ = this._storeFloat((_32_ + 16), (((_30_ = this._loadFloat((_32_ + 8))) * ((this._loadFloat((_31_ = this._loadInt((_32_ + 20))))) + (_30_ * ((this._loadFloat((_31_ + 4))) + (_30_ * ((this._loadFloat((_31_ + 8))) + (_30_ * ((this._loadFloat((_31_ + 12))) + (_30_ * ((this._loadFloat((_31_ + 16))) + (_30_ * (this._loadFloat((_31_ + 20)))))))))))))) + 1.0f));
        return ((((this._loadFloat((_32_ + 12))) / _30_) + -0.125f) / (this._loadFloat((_32_ + 28))));
    }

    public final float y0f(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeFloat(_31_, (this._loadFloat((_31_ + 24))));
        this._storeInt((_31_ + 8), (this._loadInt(_31_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt((_31_ + 8))) & 2147483647) == 0) {
                        break label$2;
                    }
                    if (((this._loadInt((_31_ + 8))) >>> 31) == 0) {
                        break label$1;
                    }
                    this._storeInt((_31_ + 28), 2143289344);
                    break label$0;
                }
                while (false);
                this._storeInt((_31_ + 28), -8388608);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) < (2139095040 & 4294967295L)) {
                    break label$3;
                }
                this._storeFloat((_31_ + 28), (1.0f / (this._loadFloat((_31_ + 24)))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) < (1073741824 & 4294967295L)) {
                    break label$4;
                }
                this._storeFloat((_31_ + 28), (common$2e$102((this._loadInt((_31_ + 8))), (this._loadFloat((_31_ + 24))), 1)));
                break label$0;
            }
            while (false);
            label$5:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) < (956301312 & 4294967295L)) {
                    break label$5;
                }
                this._storeFloat((_31_ + 16), (((_30_ = this._storeFloat((_31_ + 20), ((_30_ = this._loadFloat((_31_ + 24))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -3.982052E-11f) + 1.9559014E-8f)) + -3.8140706E-6f)) + 3.4745343E-4f)) + -0.013818568f)) + 0.17666645f)) + -0.0738043f));
                _30_ = this._storeFloat((_31_ + 12), (((_30_ = this._loadFloat((_31_ + 20))) * ((_30_ * ((_30_ * ((_30_ * 4.4111031E-10f) + 2.5915085E-7f)) + 7.6006865E-5f)) + 0.012730484f)) + 1.0f));
                this._storeFloat((_31_ + 28), (((this._loadFloat((_31_ + 16))) / _30_) + (((j0f((this._loadFloat((_31_ + 24))))) * (logf((this._loadFloat((_31_ + 24)))))) * 0.63661975f)));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 28), (((logf((this._loadFloat((_31_ + 24))))) * 0.63661975f) + -0.0738043f));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final double j1(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 48), _30_);
        this._storeDouble((_31_ + 8), (this._loadDouble((_31_ + 48))));
        this._storeLong((_31_ + 20), (this._loadLong((_31_ + 12))));
        this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 20))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 20))) & 2147483647))) & 4294967295L) < (2146435072 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_31_ + 56), (1.0 / ((_30_ = this._loadDouble((_31_ + 48))) * _30_)));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1073741824 & 4294967295L)) {
                    break label$2;
                }
                this._storeDouble((_31_ + 56), (common$2e$119((this._loadInt((_31_ + 20))), (Math.abs((this._loadDouble((_31_ + 48))))), 0, (this._loadInt((_31_ + 16))))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if (((this._loadInt((_31_ + 20))) & 4294967295L) < (939524096 & 4294967295L)) {
                        break label$4;
                    }
                    this._storeDouble((_31_ + 32), ((_30_ = this._storeDouble((_31_ + 40), ((_30_ = this._loadDouble((_31_ + 48))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * 4.9672799960958445E-8) + -1.599556310840356E-5)) + 0.001407056669551897)) + -0.0625)));
                    _30_ = this._storeDouble((_31_ + 24), (((_30_ = this._loadDouble((_31_ + 40))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 1.2354227442613791E-11) + 5.0463625707621704E-9)) + 1.1771846404262368E-6)) + 1.8594678558863092E-4)) + 0.019153759953836346)) + 1.0));
                    this._storeDouble((_31_ + 40), ((this._loadDouble((_31_ + 32))) / _30_));
                    break label$3;
                }
                while (false);
                this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 48))));
            }
            while (false);
            this._storeDouble((_31_ + 56), (((this._loadDouble((_31_ + 40))) + 0.5) * (this._loadDouble((_31_ + 48)))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 56));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final double common$2e$119(int _30_, double _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        double _35_ = 0.0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 60), _30_);
        this._storeDouble((_34_ + 48), _31_);
        this._storeInt((_34_ + 44), _32_);
        this._storeInt((_34_ + 40), _33_);
        this._storeDouble((_34_ + 24), (sin((this._loadDouble((_34_ + 48))))));
        label$0:
        do {
            if ((this._loadInt((_34_ + 44))) == 0) {
                break label$0;
            }
            this._storeDouble((_34_ + 24), (-(this._loadDouble((_34_ + 24)))));
        }
        while (false);
        _31_ = this._storeDouble((_34_ + 16), (cos((this._loadDouble((_34_ + 48))))));
        this._storeDouble(_34_, ((this._loadDouble((_34_ + 24))) - _31_));
        label$1:
        do {
            if (((this._loadInt((_34_ + 60))) & 4294967295L) > (2145386495 & 4294967295L)) {
                break label$1;
            }
            this._storeDouble((_34_ + 8), ((-(this._loadDouble((_34_ + 24)))) - (this._loadDouble((_34_ + 16)))));
            this._storeDouble((_34_ + 32), (cos(((_31_ = this._loadDouble((_34_ + 48))) + _31_))));
            label$2:
            do {
                label$3:
                do {
                    if (((((_31_ = (this._loadDouble((_34_ + 24))) * (this._loadDouble((_34_ + 16)))) <= 0.0) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                        break label$3;
                    }
                    this._storeDouble(_34_, ((this._loadDouble((_34_ + 32))) / (this._loadDouble((_34_ + 8)))));
                    break label$2;
                }
                while (false);
                this._storeDouble((_34_ + 8), ((this._loadDouble((_34_ + 32))) / (this._loadDouble(_34_))));
            }
            while (false);
            if (((this._loadInt((_34_ + 60))) & 4294967295L) > (1207959551 & 4294967295L)) {
                break label$1;
            }
            label$4:
            do {
                if ((this._loadInt((_34_ + 44))) == 0) {
                    break label$4;
                }
                this._storeDouble((_34_ + 8), (-(this._loadDouble((_34_ + 8)))));
            }
            while (false);
            this._storeDouble(_34_, (((pone((this._loadDouble((_34_ + 48))))) * (this._loadDouble(_34_))) - ((qone((this._loadDouble((_34_ + 48))))) * (this._loadDouble((_34_ + 8))))));
        }
        while (false);
        label$5:
        do {
            if ((this._loadInt((_34_ + 40))) == 0) {
                break label$5;
            }
            this._storeDouble(_34_, (-(this._loadDouble(_34_))));
        }
        while (false);
        _31_ = this._loadDouble(_34_);
        _35_ = this._loadDouble((_34_ + 48));
        this._storeInt((0 + 4), (_34_ + 64));
        return ((_31_ * 0.5641895835477563) / (Math.sqrt(_35_)));
    }

    public final double pone(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 64) + 8), (this._storeDouble((_32_ + 56), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 20), ((this._storeInt((_32_ + 20), (this._loadInt((_32_ + 12))))) & 2147483647))) & 4294967295L) < (1075838976 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_32_ + 52), 11888);
                this._storeInt((_32_ + 48), 11936);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1074933387 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_32_ + 52), 11984);
                this._storeInt((_32_ + 48), 12032);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1074191213 & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((_32_ + 52), 12080);
                this._storeInt((_32_ + 48), 12128);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 52), 12176);
            this._storeInt((_32_ + 48), 12224);
        }
        while (false);
        _30_ = this._storeDouble((_32_ + 40), (1.0 / ((_30_ = this._loadDouble((_32_ + 56))) * _30_)));
        this._storeDouble((_32_ + 32), ((this._loadDouble((_31_ = this._loadInt((_32_ + 52))))) + (_30_ * ((this._loadDouble((_31_ + 8))) + (_30_ * ((this._loadDouble((_31_ + 16))) + (_30_ * ((this._loadDouble((_31_ + 24))) + (_30_ * ((this._loadDouble((_31_ + 32))) + (_30_ * (this._loadDouble((_31_ + 40))))))))))))));
        _30_ = this._storeDouble((_32_ + 24), (((_30_ = this._loadDouble((_32_ + 40))) * ((this._loadDouble((_31_ = this._loadInt((_32_ + 48))))) + (_30_ * ((this._loadDouble((_31_ + 8))) + (_30_ * ((this._loadDouble((_31_ + 16))) + (_30_ * ((this._loadDouble((_31_ + 24))) + (_30_ * (this._loadDouble((_31_ + 32)))))))))))) + 1.0));
        return (((this._loadDouble((_32_ + 32))) / _30_) + 1.0);
    }

    public final double qone(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 64) + 8), (this._storeDouble((_32_ + 56), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 20), ((this._storeInt((_32_ + 20), (this._loadInt((_32_ + 12))))) & 2147483647))) & 4294967295L) < (1075838976 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_32_ + 52), 11504);
                this._storeInt((_32_ + 48), 11552);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1074933387 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_32_ + 52), 11600);
                this._storeInt((_32_ + 48), 11648);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1074191213 & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((_32_ + 52), 11696);
                this._storeInt((_32_ + 48), 11744);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 52), 11792);
            this._storeInt((_32_ + 48), 11840);
        }
        while (false);
        _30_ = this._storeDouble((_32_ + 24), (1.0 / ((_30_ = this._loadDouble((_32_ + 56))) * _30_)));
        this._storeDouble((_32_ + 32), ((this._loadDouble((_31_ = this._loadInt((_32_ + 52))))) + (_30_ * ((this._loadDouble((_31_ + 8))) + (_30_ * ((this._loadDouble((_31_ + 16))) + (_30_ * ((this._loadDouble((_31_ + 24))) + (_30_ * ((this._loadDouble((_31_ + 32))) + (_30_ * (this._loadDouble((_31_ + 40))))))))))))));
        _30_ = this._storeDouble((_32_ + 40), (((_30_ = this._loadDouble((_32_ + 24))) * ((this._loadDouble((_31_ = this._loadInt((_32_ + 48))))) + (_30_ * ((this._loadDouble((_31_ + 8))) + (_30_ * ((this._loadDouble((_31_ + 16))) + (_30_ * ((this._loadDouble((_31_ + 24))) + (_30_ * ((this._loadDouble((_31_ + 32))) + (_30_ * (this._loadDouble((_31_ + 40)))))))))))))) + 1.0));
        return ((((this._loadDouble((_32_ + 32))) / _30_) + 0.375) / (this._loadDouble((_32_ + 56))));
    }

    public final double y1(double _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 48), _30_);
        this._storeDouble((_31_ + 8), (this._loadDouble((_31_ + 48))));
        this._storeLong((_31_ + 20), (this._loadLong((_31_ + 12))));
        this._storeLong((_31_ + 16), (this._loadLong((_31_ + 8))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((this._loadInt((_31_ + 20))) << 1) | (this._loadInt((_31_ + 16)))) == 0) {
                        break label$2;
                    }
                    if (((this._loadInt((_31_ + 20))) >>> 31) == 0) {
                        break label$1;
                    }
                    this._storeLong((_31_ + 56), 9221120237041090560L);
                    break label$0;
                }
                while (false);
                this._storeLong((_31_ + 56), -4503599627370496L);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (2146435072 & 4294967295L)) {
                    break label$3;
                }
                this._storeDouble((_31_ + 56), (1.0 / (this._loadDouble((_31_ + 48)))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1073741824 & 4294967295L)) {
                    break label$4;
                }
                this._storeDouble((_31_ + 56), (common$2e$119((this._loadInt((_31_ + 20))), (this._loadDouble((_31_ + 48))), 1, 0)));
                break label$0;
            }
            while (false);
            label$5:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) > (1016070143 & 4294967295L)) {
                    break label$5;
                }
                this._storeDouble((_31_ + 56), (-0.6366197723675814 / (this._loadDouble((_31_ + 48)))));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 32), ((this._loadDouble((0 + 12272))) + ((_30_ = this._storeDouble((_31_ + 40), ((_30_ = this._loadDouble((_31_ + 48))) * _30_))) * ((this._loadDouble((0 + 12280))) + (_30_ * ((this._loadDouble((0 + 12288))) + (_30_ * ((this._loadDouble((0 + 12296))) + (_30_ * (this._loadDouble((0 + 12304))))))))))));
            _30_ = this._storeDouble((_31_ + 24), (((_30_ = this._loadDouble((_31_ + 40))) * ((this._loadDouble((0 + 12320))) + (_30_ * ((this._loadDouble((0 + 12328))) + (_30_ * ((this._loadDouble((0 + 12336))) + (_30_ * ((this._loadDouble((0 + 12344))) + (_30_ * (this._loadDouble((0 + 12352)))))))))))) + 1.0));
            this._storeDouble((_31_ + 56), (((_32_ = this._loadDouble((_31_ + 48))) * ((this._loadDouble((_31_ + 32))) / _30_)) + ((((j1(_32_)) * (log((this._loadDouble((_31_ + 48)))))) - (1.0 / (this._loadDouble((_31_ + 48))))) * 0.6366197723675814)));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 56));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final float j1f(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeFloat(_31_, (this._loadFloat((_31_ + 24))));
        this._storeInt((_31_ + 8), (this._loadInt(_31_)));
        this._storeInt((_31_ + 4), ((this._loadInt((_31_ + 8))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) & 2147483647))) & 4294967295L) < (2139095040 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_31_ + 28), (1.0f / ((_30_ = this._loadFloat((_31_ + 24))) * _30_)));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) < (1073741824 & 4294967295L)) {
                    break label$2;
                }
                this._storeFloat((_31_ + 28), (common$2e$120((this._loadInt((_31_ + 8))), (Math.abs((this._loadFloat((_31_ + 24))))), 0, (this._loadInt((_31_ + 4))))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if (((this._loadInt((_31_ + 8))) & 4294967295L) < (838860800 & 4294967295L)) {
                        break label$4;
                    }
                    this._storeFloat((_31_ + 16), ((_30_ = this._storeFloat((_31_ + 20), ((_30_ = this._loadFloat((_31_ + 24))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * 4.96728E-8f) + -1.5995563E-5f)) + 0.0014070567f)) + -0.0625f)));
                    _30_ = this._storeFloat((_31_ + 12), (((_30_ = this._loadFloat((_31_ + 20))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 1.2354227E-11f) + 5.0463624E-9f)) + 1.1771847E-6f)) + 1.8594679E-4f)) + 0.01915376f)) + 1.0f));
                    this._storeFloat((_31_ + 20), (((this._loadFloat((_31_ + 16))) / _30_) + 0.5f));
                    break label$3;
                }
                while (false);
                this._storeFloat((_31_ + 20), ((this._loadFloat((_31_ + 24))) + 0.5f));
            }
            while (false);
            this._storeFloat((_31_ + 28), ((this._loadFloat((_31_ + 20))) * (this._loadFloat((_31_ + 24)))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final float common$2e$120(int _30_, float _31_, int _32_, int _33_)
    {
        double _34_ = 0.0;
        int _35_ = 0;
        this._storeInt(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 60), _30_);
        this._storeFloat((_35_ + 56), _31_);
        this._storeInt((_35_ + 52), _32_);
        this._storeInt((_35_ + 48), _33_);
        this._storeDouble((_35_ + 32), ((double) (sinf((this._loadFloat((_35_ + 56)))))));
        label$0:
        do {
            if ((this._loadInt((_35_ + 52))) == 0) {
                break label$0;
            }
            this._storeDouble((_35_ + 32), (-(this._loadDouble((_35_ + 32)))));
        }
        while (false);
        _34_ = this._storeDouble((_35_ + 24), ((double) (cosf((this._loadFloat((_35_ + 56)))))));
        this._storeDouble((_35_ + 8), ((this._loadDouble((_35_ + 32))) - _34_));
        label$1:
        do {
            if (((this._loadInt((_35_ + 60))) & 4294967295L) > (2130706431 & 4294967295L)) {
                break label$1;
            }
            this._storeDouble((_35_ + 16), ((-(this._loadDouble((_35_ + 32)))) - (this._loadDouble((_35_ + 24)))));
            this._storeDouble((_35_ + 40), ((double) (cosf(((_31_ = this._loadFloat((_35_ + 56))) + _31_)))));
            label$2:
            do {
                label$3:
                do {
                    if (((((_34_ = (this._loadDouble((_35_ + 32))) * (this._loadDouble((_35_ + 24)))) <= 0.0) ? 1 : 0) | ((_34_ != _34_) ? 1 : 0)) != 0) {
                        break label$3;
                    }
                    this._storeDouble((_35_ + 8), ((this._loadDouble((_35_ + 40))) / (this._loadDouble((_35_ + 16)))));
                    break label$2;
                }
                while (false);
                this._storeDouble((_35_ + 16), ((this._loadDouble((_35_ + 40))) / (this._loadDouble((_35_ + 8)))));
            }
            while (false);
            if (((this._loadInt((_35_ + 60))) & 4294967295L) > (1484783615 & 4294967295L)) {
                break label$1;
            }
            label$4:
            do {
                if ((this._loadInt((_35_ + 52))) == 0) {
                    break label$4;
                }
                this._storeDouble((_35_ + 16), (-(this._loadDouble((_35_ + 16)))));
            }
            while (false);
            this._storeDouble((_35_ + 8), ((((double) (ponef((this._loadFloat((_35_ + 56)))))) * (this._loadDouble((_35_ + 8)))) - (((double) (qonef((this._loadFloat((_35_ + 56)))))) * (this._loadDouble((_35_ + 16))))));
        }
        while (false);
        label$5:
        do {
            if ((this._loadInt((_35_ + 48))) == 0) {
                break label$5;
            }
            this._storeDouble((_35_ + 8), (-(this._loadDouble((_35_ + 8)))));
        }
        while (false);
        _34_ = this._loadDouble((_35_ + 8));
        _31_ = this._loadFloat((_35_ + 56));
        this._storeInt((0 + 4), (_35_ + 64));
        return ((float) ((_34_ * 0.564189612865448) / ((double) ((float) (Math.sqrt(_31_))))));
    }

    public final float ponef(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeFloat((_32_ = (this._loadInt((0 + 4))) - 32), (this._storeFloat((_32_ + 28), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 4), ((this._storeInt((_32_ + 4), (this._loadInt(_32_)))) & 2147483647))) & 4294967295L) < (1090519040 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_32_ + 24), 12624);
                this._storeInt((_32_ + 20), 12656);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 4))) & 4294967295L) < (1089936472 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_32_ + 24), 12688);
                this._storeInt((_32_ + 20), 12720);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_32_ + 4))) & 4294967295L) < (1077336936 & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((_32_ + 24), 12752);
                this._storeInt((_32_ + 20), 12784);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 24), 12816);
            this._storeInt((_32_ + 20), 12848);
        }
        while (false);
        _30_ = this._storeFloat((_32_ + 16), (1.0f / ((_30_ = this._loadFloat((_32_ + 28))) * _30_)));
        this._storeFloat((_32_ + 12), ((this._loadFloat((_31_ = this._loadInt((_32_ + 24))))) + (_30_ * ((this._loadFloat((_31_ + 4))) + (_30_ * ((this._loadFloat((_31_ + 8))) + (_30_ * ((this._loadFloat((_31_ + 12))) + (_30_ * ((this._loadFloat((_31_ + 16))) + (_30_ * (this._loadFloat((_31_ + 20))))))))))))));
        _30_ = this._storeFloat((_32_ + 8), (((_30_ = this._loadFloat((_32_ + 16))) * ((this._loadFloat((_31_ = this._loadInt((_32_ + 20))))) + (_30_ * ((this._loadFloat((_31_ + 4))) + (_30_ * ((this._loadFloat((_31_ + 8))) + (_30_ * ((this._loadFloat((_31_ + 12))) + (_30_ * (this._loadFloat((_31_ + 16)))))))))))) + 1.0f));
        return (((this._loadFloat((_32_ + 12))) / _30_) + 1.0f);
    }

    public final float qonef(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeFloat((_32_ = (this._loadInt((0 + 4))) - 32), (this._storeFloat((_32_ + 28), _30_)));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 4), ((this._storeInt((_32_ + 4), (this._loadInt(_32_)))) & 2147483647))) & 4294967295L) < (1075838976 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_32_ + 24), 12368);
                this._storeInt((_32_ + 20), 12400);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 4))) & 4294967295L) < (1089936472 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_32_ + 24), 12432);
                this._storeInt((_32_ + 20), 12464);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_32_ + 4))) & 4294967295L) < (1077336936 & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((_32_ + 24), 12496);
                this._storeInt((_32_ + 20), 12528);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 24), 12560);
            this._storeInt((_32_ + 20), 12592);
        }
        while (false);
        _30_ = this._storeFloat((_32_ + 8), (1.0f / ((_30_ = this._loadFloat((_32_ + 28))) * _30_)));
        this._storeFloat((_32_ + 12), ((this._loadFloat((_31_ = this._loadInt((_32_ + 24))))) + (_30_ * ((this._loadFloat((_31_ + 4))) + (_30_ * ((this._loadFloat((_31_ + 8))) + (_30_ * ((this._loadFloat((_31_ + 12))) + (_30_ * ((this._loadFloat((_31_ + 16))) + (_30_ * (this._loadFloat((_31_ + 20))))))))))))));
        _30_ = this._storeFloat((_32_ + 16), (((_30_ = this._loadFloat((_32_ + 8))) * ((this._loadFloat((_31_ = this._loadInt((_32_ + 20))))) + (_30_ * ((this._loadFloat((_31_ + 4))) + (_30_ * ((this._loadFloat((_31_ + 8))) + (_30_ * ((this._loadFloat((_31_ + 12))) + (_30_ * ((this._loadFloat((_31_ + 16))) + (_30_ * (this._loadFloat((_31_ + 20)))))))))))))) + 1.0f));
        return ((((this._loadFloat((_32_ + 12))) / _30_) + 0.375f) / (this._loadFloat((_32_ + 28))));
    }

    public final float y1f(float _30_)
    {
        int _31_ = 0;
        float _32_ = 0.0f;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeFloat(_31_, (this._loadFloat((_31_ + 24))));
        this._storeInt((_31_ + 8), (this._loadInt(_31_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt((_31_ + 8))) & 2147483647) == 0) {
                        break label$2;
                    }
                    if (((this._loadInt((_31_ + 8))) >>> 31) == 0) {
                        break label$1;
                    }
                    this._storeInt((_31_ + 28), 2143289344);
                    break label$0;
                }
                while (false);
                this._storeInt((_31_ + 28), -8388608);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) < (2139095040 & 4294967295L)) {
                    break label$3;
                }
                this._storeFloat((_31_ + 28), (1.0f / (this._loadFloat((_31_ + 24)))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) < (1073741824 & 4294967295L)) {
                    break label$4;
                }
                this._storeFloat((_31_ + 28), (common$2e$120((this._loadInt((_31_ + 8))), (this._loadFloat((_31_ + 24))), 1, 0)));
                break label$0;
            }
            while (false);
            label$5:
            do {
                if (((this._loadInt((_31_ + 8))) & 4294967295L) > (838860799 & 4294967295L)) {
                    break label$5;
                }
                this._storeFloat((_31_ + 28), (-0.63661975f / (this._loadFloat((_31_ + 24)))));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 16), ((this._loadFloat((0 + 12880))) + ((_30_ = this._storeFloat((_31_ + 20), ((_30_ = this._loadFloat((_31_ + 24))) * _30_))) * ((this._loadFloat((0 + 12884))) + (_30_ * ((this._loadFloat((0 + 12888))) + (_30_ * ((this._loadFloat((0 + 12892))) + (_30_ * (this._loadFloat((0 + 12896))))))))))));
            _30_ = this._storeFloat((_31_ + 12), (((_30_ = this._loadFloat((_31_ + 20))) * ((this._loadFloat((0 + 12912))) + (_30_ * ((this._loadFloat((0 + 12916))) + (_30_ * ((this._loadFloat((0 + 12920))) + (_30_ * ((this._loadFloat((0 + 12924))) + (_30_ * (this._loadFloat((0 + 12928)))))))))))) + 1.0f));
            this._storeFloat((_31_ + 28), (((_32_ = this._loadFloat((_31_ + 24))) * ((this._loadFloat((_31_ + 16))) / _30_)) + ((((j1f(_32_)) * (logf((this._loadFloat((_31_ + 24)))))) - (1.0f / (this._loadFloat((_31_ + 24))))) * 0.63661975f)));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final double jn(int _30_, double _31_)
    {
        long _32_ = 0L;
        int _33_ = 0;
        double _34_ = 0.0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 160))) + 148), _30_);
        this._storeDouble((_33_ + 80), (this._storeDouble((_33_ + 136), _31_)));
        this._storeLong((_33_ + 132), (this._loadLong((_33_ + 84))));
        this._storeLong((_33_ + 128), (this._loadLong((_33_ + 80))));
        this._storeInt((_33_ + 116), ((this._loadInt((_33_ + 132))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if ((((this._storeInt((_33_ + 132), ((this._loadInt((_33_ + 132))) & 2147483647))) | (((_30_ = this._loadInt((_33_ + 128))) | (0 - _30_)) >>> 31)) & 4294967295L) < (2146435073 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_33_ + 152), (this._loadDouble((_33_ + 136))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        if ((this._loadInt((_33_ + 148))) == 0) {
                            break label$4;
                        }
                        if ((this._loadInt((_33_ + 148))) <= -1) {
                            break label$3;
                        }
                        this._storeInt((_33_ + 124), ((this._loadInt((_33_ + 148))) + -1));
                        break label$2;
                    }
                    while (false);
                    this._storeDouble((_33_ + 152), (j0((this._loadDouble((_33_ + 136))))));
                    break label$0;
                }
                while (false);
                this._storeInt((_33_ + 124), ((this._loadInt((_33_ + 148))) ^ -1));
                this._storeDouble((_33_ + 136), (-(this._loadDouble((_33_ + 136)))));
                this._storeInt((_33_ + 116), ((this._loadInt((_33_ + 116))) ^ 1));
            }
            while (false);
            label$5:
            do {
                label$6:
                do {
                    label$7:
                    do {
                        if ((this._loadInt((_33_ + 124))) == 0) {
                            break label$7;
                        }
                        this._storeInt((_33_ + 116), ((this._loadInt((_33_ + 116))) & (this._loadInt((_33_ + 148)))));
                        this._storeDouble((_33_ + 136), (Math.abs((this._loadDouble((_33_ + 136))))));
                        label$8:
                        do {
                            if (((this._loadInt((_33_ + 132))) | (this._loadInt((_33_ + 128)))) == 0) {
                                break label$8;
                            }
                            if ((this._loadInt((_33_ + 132))) != 2146435072) {
                                break label$6;
                            }
                        }
                        while (false);
                        this._storeLong((_33_ + 96), 0L);
                        break label$5;
                    }
                    while (false);
                    this._storeDouble((_33_ + 152), (j1((this._loadDouble((_33_ + 136))))));
                    break label$0;
                }
                while (false);
                label$9:
                do {
                    label$10:
                    do {
                        label$11:
                        do {
                            label$12:
                            do {
                                label$13:
                                do {
                                    label$14:
                                    do {
                                        label$15:
                                        do {
                                            label$16:
                                            do {
                                                label$17:
                                                do {
                                                    label$18:
                                                    do {
                                                        if (((((_31_ = (double) (this._loadInt((_33_ + 124)))) >= (_34_ = this._loadDouble((_33_ + 136)))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_34_ != _34_) ? 1 : 0))) != 0) {
                                                            break label$18;
                                                        }
                                                        if (((this._loadInt((_33_ + 132))) & 4294967295L) < (1389363200 & 4294967295L)) {
                                                            break label$17;
                                                        }
                                                        if ((_30_ = (this._loadInt((_33_ + 124))) & 3) == 2) {
                                                            break label$12;
                                                        }
                                                        if (_30_ == 1) {
                                                            break label$11;
                                                        }
                                                        if (_30_ != 0) {
                                                            break label$10;
                                                        }
                                                        _34_ = cos((_31_ = this._loadDouble((_33_ + 136))));
                                                        this._storeDouble((_33_ + 88), ((sin(_31_)) - _34_));
                                                        break label$9;
                                                    }
                                                    while (false);
                                                    if (((this._loadInt((_33_ + 132))) & 4294967295L) > (1041235967 & 4294967295L)) {
                                                        break label$16;
                                                    }
                                                    if ((this._loadInt((_33_ + 124))) < 33) {
                                                        break label$15;
                                                    }
                                                    this._storeLong((_33_ + 96), 0L);
                                                    break label$5;
                                                }
                                                while (false);
                                                this._storeDouble((_33_ + 104), (j0((this._loadDouble((_33_ + 136))))));
                                                this._storeDouble((_33_ + 96), (j1((this._loadDouble((_33_ + 136))))));
                                                this._storeInt((_33_ + 120), 0);
                                                label$19:
                                                while (true) {
                                                    if ((this._loadInt((_33_ + 120))) >= (this._loadInt((_33_ + 124)))) {
                                                        break label$5;
                                                    }
                                                    this._storeInt((_33_ + 120), ((this._loadInt((_33_ + 120))) + 1));
                                                    this._storeDouble((_33_ + 88), (this._loadDouble((_33_ + 96))));
                                                    this._storeDouble((_33_ + 96), (((this._loadDouble((_33_ + 96))) * (((_31_ = (double) (this._loadInt((_33_ + 120)))) + _31_) / (this._loadDouble((_33_ + 136))))) - (this._loadDouble((_33_ + 104)))));
                                                    this._storeDouble((_33_ + 104), (this._loadDouble((_33_ + 88))));
                                                    continue label$19;
                                                }
                                            }
                                            while (false);
                                            this._storeDouble((_33_ + 48), (((_31_ = this._storeDouble((_33_ + 16), (((double) (this._loadInt((_33_ + 124)))) + 1.0))) + _31_) / (this._loadDouble((_33_ + 136)))));
                                            this._storeDouble((_33_ + 32), ((this._storeDouble((_33_ + 40), (2.0 / (this._loadDouble((_33_ + 136)))))) + (this._loadDouble((_33_ + 48)))));
                                            this._storeDouble((_33_ + 64), (this._loadDouble((_33_ + 48))));
                                            this._storeDouble((_33_ + 56), (((this._loadDouble((_33_ + 48))) * (this._loadDouble((_33_ + 32)))) - 1.0));
                                            _30_ = this._storeInt((_33_ + 12), 1);
                                            label$22:
                                            do {
                                                label$21:
                                                while (true) {
                                                    if (((((_31_ = this._loadDouble((_33_ + 56))) >= 1.0E9) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                                                        break label$22;
                                                    }
                                                    this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + _30_));
                                                    this._storeDouble((_33_ + 24), (((this._storeDouble((_33_ + 32), ((this._loadDouble((_33_ + 32))) + (this._loadDouble((_33_ + 40)))))) * (this._loadDouble((_33_ + 56)))) - (this._loadDouble((_33_ + 64)))));
                                                    this._storeDouble((_33_ + 64), (this._loadDouble((_33_ + 56))));
                                                    this._storeDouble((_33_ + 56), (this._loadDouble((_33_ + 24))));
                                                    continue label$21;
                                                }
                                            }
                                            while (false);
                                            this._storeLong((_33_ + 72), 0L);
                                            this._storeInt((_33_ + 120), (this._loadInt((_33_ + 12))));
                                            label$24:
                                            do {
                                                label$23:
                                                while (true) {
                                                    if ((this._loadInt((_33_ + 120))) < 0) {
                                                        break label$24;
                                                    }
                                                    this._storeDouble((_33_ + 72), (1.0 / ((((_31_ = ((double) (this._loadInt((_33_ + 120)))) + (this._loadDouble((_33_ + 16)))) + _31_) / (this._loadDouble((_33_ + 136)))) - (this._loadDouble((_33_ + 72))))));
                                                    this._storeInt((_33_ + 120), ((this._loadInt((_33_ + 120))) + -1));
                                                    continue label$23;
                                                }
                                            }
                                            while (false);
                                            this._storeDouble((_33_ + 104), (this._loadDouble((_33_ + 72))));
                                            _32_ = this._storeLong((_33_ + 96), 4607182418800017408L);
                                            if (((((_31_ = this._storeDouble((_33_ + 24), ((this._loadDouble((_33_ + 16))) * (log((Math.abs((this._loadDouble((_33_ + 48)))))))))) >= 709.782712893384) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                                                break label$14;
                                            }
                                            this._storeInt((_33_ + 120), (this._loadInt((_33_ + 124))));
                                            label$25:
                                            while (true) {
                                                if ((this._loadInt((_33_ + 120))) < 1) {
                                                    break label$13;
                                                }
                                                this._storeDouble((_33_ + 88), (this._loadDouble((_33_ + 96))));
                                                this._storeDouble((_33_ + 96), ((((this._loadDouble((_33_ + 96))) * ((_31_ = (double) (this._loadInt((_33_ + 120)))) + _31_)) / (this._loadDouble((_33_ + 136)))) - (this._loadDouble((_33_ + 104)))));
                                                this._storeDouble((_33_ + 104), (this._loadDouble((_33_ + 88))));
                                                this._storeInt((_33_ + 120), ((this._loadInt((_33_ + 120))) + -1));
                                                continue label$25;
                                            }
                                        }
                                        while (false);
                                        this._storeDouble((_33_ + 96), (this._storeDouble((_33_ + 88), ((this._loadDouble((_33_ + 136))) * 0.5))));
                                        this._storeLong((_33_ + 104), 4607182418800017408L);
                                        this._storeInt((_33_ + 120), 2);
                                        label$28:
                                        do {
                                            label$27:
                                            while (true) {
                                                if ((this._loadInt((_33_ + 120))) > ((this._loadInt((_33_ + 124))) + 1)) {
                                                    break label$28;
                                                }
                                                this._storeDouble((_33_ + 104), ((this._loadDouble((_33_ + 104))) * ((double) (this._loadInt((_33_ + 120))))));
                                                this._storeDouble((_33_ + 96), ((this._loadDouble((_33_ + 96))) * (this._loadDouble((_33_ + 88)))));
                                                this._storeInt((_33_ + 120), ((this._loadInt((_33_ + 120))) + 1));
                                                continue label$27;
                                            }
                                        }
                                        while (false);
                                        this._storeDouble((_33_ + 96), ((this._loadDouble((_33_ + 96))) / (this._loadDouble((_33_ + 104)))));
                                        break label$5;
                                    }
                                    while (false);
                                    this._storeInt((_33_ + 120), (this._loadInt((_33_ + 124))));
                                    label$30:
                                    do {
                                        label$29:
                                        while (true) {
                                            if ((this._loadInt((_33_ + 120))) < 1) {
                                                break label$30;
                                            }
                                            this._storeDouble((_33_ + 88), (this._loadDouble((_33_ + 96))));
                                            this._storeDouble((_33_ + 96), ((((this._loadDouble((_33_ + 96))) * ((_31_ = (double) (this._loadInt((_33_ + 120)))) + _31_)) / (this._loadDouble((_33_ + 136)))) - (this._loadDouble((_33_ + 104)))));
                                            this._storeDouble((_33_ + 104), (this._loadDouble((_33_ + 88))));
                                            label$31:
                                            do {
                                                if (((((_31_ = this._loadDouble((_33_ + 96))) <= 3.273390607896142E150) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                                                    break label$31;
                                                }
                                                this._storeDouble((_33_ + 104), ((this._loadDouble((_33_ + 104))) / (this._loadDouble((_33_ + 96)))));
                                                this._storeDouble((_33_ + 72), ((this._loadDouble((_33_ + 72))) / (this._loadDouble((_33_ + 96)))));
                                                this._storeLong((_33_ + 96), _32_);
                                            }
                                            while (false);
                                            this._storeInt((_33_ + 120), ((this._loadInt((_33_ + 120))) + -1));
                                            continue label$29;
                                        }
                                    }
                                    while (false);
                                }
                                while (false);
                                this._storeDouble((_33_ + 32), (j0((this._loadDouble((_33_ + 136))))));
                                _34_ = this._storeDouble((_33_ + 48), (j1((this._loadDouble((_33_ + 136))))));
                                label$32:
                                do {
                                    if (((((_31_ = Math.abs((this._loadDouble((_33_ + 32))))) < (_34_ = Math.abs(_34_))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_34_ != _34_) ? 1 : 0))) != 0) {
                                        break label$32;
                                    }
                                    this._storeDouble((_33_ + 96), (((this._loadDouble((_33_ + 72))) * (this._loadDouble((_33_ + 32)))) / (this._loadDouble((_33_ + 96)))));
                                    break label$5;
                                }
                                while (false);
                                this._storeDouble((_33_ + 96), (((this._loadDouble((_33_ + 72))) * (this._loadDouble((_33_ + 48)))) / (this._loadDouble((_33_ + 104)))));
                                break label$5;
                            }
                            while (false);
                            _34_ = sin((_31_ = this._loadDouble((_33_ + 136))));
                            this._storeDouble((_33_ + 88), ((cos(_31_)) - _34_));
                            break label$9;
                        }
                        while (false);
                        _34_ = sin((_31_ = this._loadDouble((_33_ + 136))));
                        this._storeDouble((_33_ + 88), ((-(cos(_31_))) - _34_));
                        break label$9;
                    }
                    while (false);
                    this._storeDouble((_33_ + 88), ((sin((_31_ = this._loadDouble((_33_ + 136))))) + (cos(_31_))));
                }
                while (false);
                this._storeDouble((_33_ + 96), (((this._loadDouble((_33_ + 88))) * 0.5641895835477563) / (Math.sqrt((this._loadDouble((_33_ + 136)))))));
            }
            while (false);
            label$33:
            do {
                label$34:
                do {
                    if ((this._loadInt((_33_ + 116))) == 0) {
                        break label$34;
                    }
                    _31_ = -(this._loadDouble((_33_ + 96)));
                    break label$33;
                }
                while (false);
                _31_ = this._loadDouble((_33_ + 96));
            }
            while (false);
            this._storeDouble((_33_ + 152), _31_);
        }
        while (false);
        _31_ = this._loadDouble((_33_ + 152));
        this._storeInt((0 + 4), (_33_ + 160));
        return _31_;
    }

    public final double yn(int _30_, double _31_)
    {
        int _32_ = 0;
        double _33_ = 0.0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 96))) + 84), _30_);
        this._storeDouble((_32_ + 16), (this._storeDouble((_32_ + 72), _31_)));
        this._storeLong((_32_ + 68), (this._loadLong((_32_ + 20))));
        this._storeLong((_32_ + 64), (this._loadLong((_32_ + 16))));
        this._storeInt((_32_ + 52), ((this._loadInt((_32_ + 68))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if ((((this._storeInt((_32_ + 68), ((this._loadInt((_32_ + 68))) & 2147483647))) | (((_30_ = this._loadInt((_32_ + 64))) | (0 - _30_)) >>> 31)) & 4294967295L) < (2146435073 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_32_ + 88), (this._loadDouble((_32_ + 72))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((this._loadInt((_32_ + 52))) == 0) {
                    break label$2;
                }
                if (((this._loadInt((_32_ + 68))) | (this._loadInt((_32_ + 64)))) == 0) {
                    break label$2;
                }
                this._storeLong((_32_ + 88), 9221120237041090560L);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if ((this._loadInt((_32_ + 68))) != 2146435072) {
                    break label$3;
                }
                this._storeLong((_32_ + 88), 0L);
                break label$0;
            }
            while (false);
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        if ((this._loadInt((_32_ + 84))) == 0) {
                            break label$6;
                        }
                        if ((this._loadInt((_32_ + 84))) <= -1) {
                            break label$5;
                        }
                        this._storeInt((_32_ + 56), ((this._loadInt((_32_ + 84))) + -1));
                        this._storeInt((_32_ + 52), 0);
                        break label$4;
                    }
                    while (false);
                    this._storeDouble((_32_ + 88), (y0((this._loadDouble((_32_ + 72))))));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 56), ((this._loadInt((_32_ + 84))) ^ -1));
                this._storeInt((_32_ + 52), ((this._loadInt((_32_ + 84))) & 1));
            }
            while (false);
            label$7:
            do {
                label$8:
                do {
                    label$9:
                    do {
                        label$10:
                        do {
                            label$11:
                            do {
                                label$12:
                                do {
                                    label$13:
                                    do {
                                        label$14:
                                        do {
                                            if ((this._loadInt((_32_ + 56))) == 0) {
                                                break label$14;
                                            }
                                            if (((this._loadInt((_32_ + 68))) & 4294967295L) < (1389363200 & 4294967295L)) {
                                                break label$13;
                                            }
                                            if ((_30_ = (this._loadInt((_32_ + 56))) & 3) == 2) {
                                                break label$11;
                                            }
                                            if (_30_ == 1) {
                                                break label$10;
                                            }
                                            if (_30_ != 0) {
                                                break label$9;
                                            }
                                            _33_ = cos((_31_ = this._loadDouble((_32_ + 72))));
                                            this._storeDouble((_32_ + 24), ((-(sin(_31_))) - _33_));
                                            break label$8;
                                        }
                                        while (false);
                                        if ((this._loadInt((_32_ + 52))) == 0) {
                                            break label$12;
                                        }
                                        this._storeDouble((_32_ + 88), (-(y1((this._loadDouble((_32_ + 72)))))));
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeDouble((_32_ + 40), (y0((this._loadDouble((_32_ + 72))))));
                                    this._storeDouble((_32_ + 8), (this._storeDouble((_32_ + 32), (y1((this._loadDouble((_32_ + 72))))))));
                                    this._storeLong((_32_ + 60), (this._loadLong((_32_ + 12))));
                                    this._storeInt((_32_ + 48), 0);
                                    label$15:
                                    while (true) {
                                        _30_ = 0;
                                        label$17:
                                        do {
                                            if ((this._loadInt((_32_ + 48))) >= (this._loadInt((_32_ + 56)))) {
                                                break label$17;
                                            }
                                            _30_ = ((this._loadInt((_32_ + 60))) != -1048576) ? 1 : 0;
                                        }
                                        while (false);
                                        if (_30_ == 0) {
                                            break label$7;
                                        }
                                        this._storeInt((_32_ + 48), ((this._loadInt((_32_ + 48))) + 1));
                                        this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 32))));
                                        this._storeDouble(_32_, (this._storeDouble((_32_ + 32), (((((_31_ = (double) (this._loadInt((_32_ + 48)))) + _31_) / (this._loadDouble((_32_ + 72)))) * (this._loadDouble((_32_ + 32)))) - (this._loadDouble((_32_ + 40)))))));
                                        this._storeLong((_32_ + 60), (this._loadLong((_32_ + 4))));
                                        this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 24))));
                                        continue label$15;
                                    }
                                }
                                while (false);
                                this._storeDouble((_32_ + 88), (y1((this._loadDouble((_32_ + 72))))));
                                break label$0;
                            }
                            while (false);
                            this._storeDouble((_32_ + 24), ((cos((_31_ = this._loadDouble((_32_ + 72))))) + (sin(_31_))));
                            break label$8;
                        }
                        while (false);
                        _33_ = sin((_31_ = this._loadDouble((_32_ + 72))));
                        this._storeDouble((_32_ + 24), ((cos(_31_)) - _33_));
                        break label$8;
                    }
                    while (false);
                    _33_ = cos((_31_ = this._loadDouble((_32_ + 72))));
                    this._storeDouble((_32_ + 24), ((sin(_31_)) - _33_));
                }
                while (false);
                this._storeDouble((_32_ + 32), (((this._loadDouble((_32_ + 24))) * 0.5641895835477563) / (Math.sqrt((this._loadDouble((_32_ + 72)))))));
            }
            while (false);
            label$18:
            do {
                label$19:
                do {
                    if ((this._loadInt((_32_ + 52))) == 0) {
                        break label$19;
                    }
                    _31_ = -(this._loadDouble((_32_ + 32)));
                    break label$18;
                }
                while (false);
                _31_ = this._loadDouble((_32_ + 32));
            }
            while (false);
            this._storeDouble((_32_ + 88), _31_);
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 88));
        this._storeInt((0 + 4), (_32_ + 96));
        return _31_;
    }

    public final float jnf(int _30_, float _31_)
    {
        int _32_ = 0;
        float _33_ = 0.0f;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 96))) + 88), _30_);
        this._storeFloat((_32_ + 48), (this._storeFloat((_32_ + 84), _31_)));
        this._storeInt((_32_ + 72), ((this._storeInt((_32_ + 80), (this._loadInt((_32_ + 48))))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 80), ((this._loadInt((_32_ + 80))) & 2147483647))) & 4294967295L) < (2139095041 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_32_ + 92), (this._loadFloat((_32_ + 84))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        if ((this._loadInt((_32_ + 88))) == 0) {
                            break label$4;
                        }
                        if ((this._loadInt((_32_ + 88))) <= -1) {
                            break label$3;
                        }
                        this._storeInt((_32_ + 76), ((this._loadInt((_32_ + 88))) + -1));
                        break label$2;
                    }
                    while (false);
                    this._storeFloat((_32_ + 92), (j0f((this._loadFloat((_32_ + 84))))));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 76), ((this._loadInt((_32_ + 88))) ^ -1));
                this._storeFloat((_32_ + 84), (-(this._loadFloat((_32_ + 84)))));
                this._storeInt((_32_ + 72), ((this._loadInt((_32_ + 72))) ^ 1));
            }
            while (false);
            label$5:
            do {
                label$6:
                do {
                    label$7:
                    do {
                        if ((this._loadInt((_32_ + 76))) == 0) {
                            break label$7;
                        }
                        this._storeInt((_32_ + 72), ((this._loadInt((_32_ + 72))) & (this._loadInt((_32_ + 88)))));
                        this._storeFloat((_32_ + 84), (Math.abs((this._loadFloat((_32_ + 84))))));
                        label$8:
                        do {
                            if ((this._loadInt((_32_ + 80))) == 0) {
                                break label$8;
                            }
                            if ((this._loadInt((_32_ + 80))) != 2139095040) {
                                break label$6;
                            }
                        }
                        while (false);
                        this._storeInt((_32_ + 60), 0);
                        break label$5;
                    }
                    while (false);
                    this._storeFloat((_32_ + 92), (j1f((this._loadFloat((_32_ + 84))))));
                    break label$0;
                }
                while (false);
                label$9:
                do {
                    if (((((_31_ = (float) (this._loadInt((_32_ + 76)))) >= (_33_ = this._loadFloat((_32_ + 84)))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_33_ != _33_) ? 1 : 0))) != 0) {
                        break label$9;
                    }
                    this._storeFloat((_32_ + 64), (j0f((this._loadFloat((_32_ + 84))))));
                    this._storeFloat((_32_ + 60), (j1f((this._loadFloat((_32_ + 84))))));
                    this._storeInt((_32_ + 68), 0);
                    label$10:
                    while (true) {
                        if ((this._loadInt((_32_ + 68))) >= (this._loadInt((_32_ + 76)))) {
                            break label$5;
                        }
                        this._storeInt((_32_ + 68), ((this._loadInt((_32_ + 68))) + 1));
                        this._storeFloat((_32_ + 56), (this._loadFloat((_32_ + 60))));
                        this._storeFloat((_32_ + 60), (((this._loadFloat((_32_ + 60))) * (((_31_ = (float) (this._loadInt((_32_ + 68)))) + _31_) / (this._loadFloat((_32_ + 84))))) - (this._loadFloat((_32_ + 64)))));
                        this._storeFloat((_32_ + 64), (this._loadFloat((_32_ + 56))));
                        continue label$10;
                    }
                }
                while (false);
                label$12:
                do {
                    if (((this._loadInt((_32_ + 80))) & 4294967295L) > (897581055 & 4294967295L)) {
                        break label$12;
                    }
                    label$13:
                    do {
                        if ((this._loadInt((_32_ + 76))) < 9) {
                            break label$13;
                        }
                        this._storeInt((_32_ + 76), 8);
                    }
                    while (false);
                    this._storeFloat((_32_ + 60), (this._storeFloat((_32_ + 56), ((this._loadFloat((_32_ + 84))) * 0.5f))));
                    this._storeInt((_32_ + 64), 1065353216);
                    this._storeInt((_32_ + 68), 2);
                    label$15:
                    do {
                        label$14:
                        while (true) {
                            if ((this._loadInt((_32_ + 68))) > ((this._loadInt((_32_ + 76))) + 1)) {
                                break label$15;
                            }
                            this._storeFloat((_32_ + 64), ((this._loadFloat((_32_ + 64))) * ((float) (this._loadInt((_32_ + 68))))));
                            this._storeFloat((_32_ + 60), ((this._loadFloat((_32_ + 60))) * (this._loadFloat((_32_ + 56)))));
                            this._storeInt((_32_ + 68), ((this._loadInt((_32_ + 68))) + 1));
                            continue label$14;
                        }
                    }
                    while (false);
                    this._storeFloat((_32_ + 60), ((this._loadFloat((_32_ + 60))) / (this._loadFloat((_32_ + 64)))));
                    break label$5;
                }
                while (false);
                this._storeFloat((_32_ + 32), (((_31_ = this._storeFloat((_32_ + 16), (((float) (this._loadInt((_32_ + 76)))) + 1.0f))) + _31_) / (this._loadFloat((_32_ + 84)))));
                this._storeFloat((_32_ + 24), ((this._storeFloat((_32_ + 28), (2.0f / (this._loadFloat((_32_ + 84)))))) + (this._loadFloat((_32_ + 32)))));
                this._storeFloat((_32_ + 40), (this._loadFloat((_32_ + 32))));
                this._storeFloat((_32_ + 36), (((this._loadFloat((_32_ + 32))) * (this._loadFloat((_32_ + 24)))) - 1.0f));
                _30_ = this._storeInt((_32_ + 12), 1);
                label$17:
                do {
                    label$16:
                    while (true) {
                        if (((((_31_ = this._loadFloat((_32_ + 36))) >= 10000.0f) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                            break label$17;
                        }
                        this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 12))) + _30_));
                        this._storeFloat((_32_ + 20), (((this._storeFloat((_32_ + 24), ((this._loadFloat((_32_ + 24))) + (this._loadFloat((_32_ + 28)))))) * (this._loadFloat((_32_ + 36)))) - (this._loadFloat((_32_ + 40)))));
                        this._storeFloat((_32_ + 40), (this._loadFloat((_32_ + 36))));
                        this._storeFloat((_32_ + 36), (this._loadFloat((_32_ + 20))));
                        continue label$16;
                    }
                }
                while (false);
                _30_ = this._storeInt((_32_ + 44), 0);
                this._storeInt((_32_ + 68), (this._loadInt((_32_ + 12))));
                label$19:
                do {
                    label$18:
                    while (true) {
                        if ((this._loadInt((_32_ + 68))) < _30_) {
                            break label$19;
                        }
                        this._storeFloat((_32_ + 44), (1.0f / ((((_31_ = ((float) (this._loadInt((_32_ + 68)))) + (this._loadFloat((_32_ + 16)))) + _31_) / (this._loadFloat((_32_ + 84)))) - (this._loadFloat((_32_ + 44))))));
                        this._storeInt((_32_ + 68), ((this._loadInt((_32_ + 68))) + -1));
                        continue label$18;
                    }
                }
                while (false);
                this._storeFloat((_32_ + 64), (this._loadFloat((_32_ + 44))));
                _30_ = this._storeInt((_32_ + 60), 1065353216);
                label$20:
                do {
                    label$21:
                    do {
                        if (((((_31_ = this._storeFloat((_32_ + 20), ((this._loadFloat((_32_ + 16))) * (logf((Math.abs((this._loadFloat((_32_ + 32)))))))))) >= 88.72168f) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                            break label$21;
                        }
                        this._storeInt((_32_ + 68), (this._loadInt((_32_ + 76))));
                        label$22:
                        while (true) {
                            if ((this._loadInt((_32_ + 68))) < 1) {
                                break label$20;
                            }
                            this._storeFloat((_32_ + 56), (this._loadFloat((_32_ + 60))));
                            this._storeFloat((_32_ + 60), (((((_31_ = (float) (this._loadInt((_32_ + 68)))) + _31_) * (this._loadFloat((_32_ + 60)))) / (this._loadFloat((_32_ + 84)))) - (this._loadFloat((_32_ + 64)))));
                            this._storeFloat((_32_ + 64), (this._loadFloat((_32_ + 56))));
                            this._storeInt((_32_ + 68), ((this._loadInt((_32_ + 68))) + -1));
                            continue label$22;
                        }
                    }
                    while (false);
                    this._storeInt((_32_ + 68), (this._loadInt((_32_ + 76))));
                    label$25:
                    do {
                        label$24:
                        while (true) {
                            if ((this._loadInt((_32_ + 68))) < 1) {
                                break label$25;
                            }
                            this._storeFloat((_32_ + 56), (this._loadFloat((_32_ + 60))));
                            this._storeFloat((_32_ + 60), (((((_31_ = (float) (this._loadInt((_32_ + 68)))) + _31_) * (this._loadFloat((_32_ + 60)))) / (this._loadFloat((_32_ + 84)))) - (this._loadFloat((_32_ + 64)))));
                            this._storeFloat((_32_ + 64), (this._loadFloat((_32_ + 56))));
                            label$26:
                            do {
                                if (((((_31_ = this._loadFloat((_32_ + 60))) <= 1.1529215E18f) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                                    break label$26;
                                }
                                this._storeFloat((_32_ + 64), ((this._loadFloat((_32_ + 64))) / (this._loadFloat((_32_ + 60)))));
                                this._storeFloat((_32_ + 44), ((this._loadFloat((_32_ + 44))) / (this._loadFloat((_32_ + 60)))));
                                this._storeInt((_32_ + 60), _30_);
                            }
                            while (false);
                            this._storeInt((_32_ + 68), ((this._loadInt((_32_ + 68))) + -1));
                            continue label$24;
                        }
                    }
                    while (false);
                }
                while (false);
                this._storeFloat((_32_ + 24), (j0f((this._loadFloat((_32_ + 84))))));
                _33_ = this._storeFloat((_32_ + 32), (j1f((this._loadFloat((_32_ + 84))))));
                label$27:
                do {
                    if (((((_31_ = Math.abs((this._loadFloat((_32_ + 24))))) < (_33_ = Math.abs(_33_))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_33_ != _33_) ? 1 : 0))) != 0) {
                        break label$27;
                    }
                    this._storeFloat((_32_ + 60), (((this._loadFloat((_32_ + 44))) * (this._loadFloat((_32_ + 24)))) / (this._loadFloat((_32_ + 60)))));
                    break label$5;
                }
                while (false);
                this._storeFloat((_32_ + 60), (((this._loadFloat((_32_ + 44))) * (this._loadFloat((_32_ + 32)))) / (this._loadFloat((_32_ + 64)))));
            }
            while (false);
            label$28:
            do {
                label$29:
                do {
                    if ((this._loadInt((_32_ + 72))) == 0) {
                        break label$29;
                    }
                    _31_ = -(this._loadFloat((_32_ + 60)));
                    break label$28;
                }
                while (false);
                _31_ = this._loadFloat((_32_ + 60));
            }
            while (false);
            this._storeFloat((_32_ + 92), _31_);
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 92));
        this._storeInt((0 + 4), (_32_ + 96));
        return _31_;
    }

    public final float ynf(int _30_, float _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 56), _30_);
        this._storeFloat((_32_ + 52), _31_);
        this._storeFloat((_32_ + 16), (this._loadFloat((_32_ + 52))));
        this._storeInt((_32_ + 48), (this._loadInt((_32_ + 16))));
        this._storeInt((_32_ + 36), ((this._loadInt((_32_ + 48))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 48), ((this._loadInt((_32_ + 48))) & 2147483647))) & 4294967295L) < (2139095041 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_32_ + 60), (this._loadFloat((_32_ + 52))));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((this._loadInt((_32_ + 36))) == 0) {
                    break label$2;
                }
                if ((this._loadInt((_32_ + 48))) == 0) {
                    break label$2;
                }
                this._storeInt((_32_ + 60), 2143289344);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if ((this._loadInt((_32_ + 48))) != 2139095040) {
                    break label$3;
                }
                this._storeInt((_32_ + 60), 0);
                break label$0;
            }
            while (false);
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        if ((this._loadInt((_32_ + 56))) == 0) {
                            break label$6;
                        }
                        if ((this._loadInt((_32_ + 56))) <= -1) {
                            break label$5;
                        }
                        this._storeInt((_32_ + 40), ((this._loadInt((_32_ + 56))) + -1));
                        this._storeInt((_32_ + 36), 0);
                        break label$4;
                    }
                    while (false);
                    this._storeFloat((_32_ + 60), (y0f((this._loadFloat((_32_ + 52))))));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 40), ((this._loadInt((_32_ + 56))) ^ -1));
                this._storeInt((_32_ + 36), ((this._loadInt((_32_ + 56))) & 1));
            }
            while (false);
            label$7:
            do {
                label$8:
                do {
                    label$9:
                    do {
                        label$10:
                        do {
                            if ((this._loadInt((_32_ + 40))) == 0) {
                                break label$10;
                            }
                            this._storeFloat((_32_ + 28), (y0f((this._loadFloat((_32_ + 52))))));
                            this._storeFloat((_32_ + 24), (y1f((this._loadFloat((_32_ + 52))))));
                            this._storeFloat((_32_ + 8), (this._loadFloat((_32_ + 24))));
                            this._storeInt((_32_ + 44), (this._loadInt((_32_ + 8))));
                            this._storeInt((_32_ + 32), 0);
                            label$12:
                            do {
                                label$11:
                                while (true) {
                                    _30_ = 0;
                                    label$13:
                                    do {
                                        if ((this._loadInt((_32_ + 32))) >= (this._loadInt((_32_ + 40)))) {
                                            break label$13;
                                        }
                                        _30_ = ((this._loadInt((_32_ + 44))) != -8388608) ? 1 : 0;
                                    }
                                    while (false);
                                    if (_30_ == 0) {
                                        break label$12;
                                    }
                                    this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 32))) + 1));
                                    this._storeFloat((_32_ + 20), (this._loadFloat((_32_ + 24))));
                                    this._storeFloat((_32_ + 24), (((((_31_ = (float) (this._loadInt((_32_ + 32)))) + _31_) / (this._loadFloat((_32_ + 52)))) * (this._loadFloat((_32_ + 24)))) - (this._loadFloat((_32_ + 28)))));
                                    this._storeFloat(_32_, (this._loadFloat((_32_ + 24))));
                                    this._storeInt((_32_ + 44), (this._loadInt(_32_)));
                                    this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 20))));
                                    continue label$11;
                                }
                            }
                            while (false);
                            if ((this._loadInt((_32_ + 36))) == 0) {
                                break label$9;
                            }
                            _31_ = -(this._loadFloat((_32_ + 24)));
                            break label$8;
                        }
                        while (false);
                        if ((this._loadInt((_32_ + 36))) == 0) {
                            break label$7;
                        }
                        this._storeFloat((_32_ + 60), (-(y1f((this._loadFloat((_32_ + 52)))))));
                        break label$0;
                    }
                    while (false);
                    _31_ = this._loadFloat((_32_ + 24));
                }
                while (false);
                this._storeFloat((_32_ + 60), _31_);
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 60), (y1f((this._loadFloat((_32_ + 52))))));
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 60));
        this._storeInt((0 + 4), (_32_ + 64));
        return _31_;
    }

    public final int labs(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._storeInt(((_31_ = (this._loadInt((0 + 4))) - 16) + 12), _30_)) < 1) {
                break label$0;
            }
            return (this._loadInt((_31_ + 12)));
        }
        while (false);
        return (0 - (this._loadInt((_31_ + 12))));
    }

    public final int lchown(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __syscall_ret((this.__syscall3.invoke(16, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_)));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final void lcong48(int _30_)
    {
        int _31_ = 0;
        memcpy(4220, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 14);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final double ldexp(double _30_, int _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_32_ + 4), _31_);
        _30_ = scalbn((this._loadDouble((_32_ + 8))), _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return _30_;
    }

    public final float ldexpf(float _30_, int _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _30_ = scalbnf((this._loadFloat((_32_ + 12))), _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return _30_;
    }

    public final void ldexpl(int _30_, long _31_, long _32_, int _33_)
    {
        int _34_ = 0;
        this._storeLong(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_34_ + 40), _32_);
        this._storeInt((_34_ + 28), _33_);
        scalbnl(_34_, (this._loadLong((_34_ + 32))), _32_, _33_);
        _32_ = this._loadLong(_34_);
        this._storeLong((_30_ + 8), (this._loadLong((_34_ + 8))));
        this._storeLong(_30_, _32_);
        this._storeInt((0 + 4), (_34_ + 48));
        return;
    }

    public final void ldiv(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 16) + 12), _31_);
        this._storeInt((_33_ + 8), _32_);
        this._storeInt(_30_, ((_33_ = this._loadInt((_33_ + 12))) / _32_));
        this._storeInt((_30_ + 4), (_33_ % _32_));
        return;
    }

    public final double lgamma(double _30_)
    {
        int _31_ = 0;
        _30_ = __lgamma_r((this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)), 14764);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double __lgamma_r(double _30_, int _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 144))) + 128), _30_);
        this._storeInt((_32_ + 124), _31_);
        this._storeDouble((_32_ + 112), (this._loadDouble((_32_ + 128))));
        this._storeInt((this._loadInt((_32_ + 124))), 1);
        this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 112))) >>> 63L));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 20), ((int) ((this._loadLong((_32_ + 116))) & 2147483647L)))) & 4294967295L) < (2146435072 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_32_ + 136), ((_30_ = this._loadDouble((_32_ + 128))) * _30_));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) > (999292927 & 4294967295L)) {
                    break label$2;
                }
                label$3:
                do {
                    if ((this._loadInt((_32_ + 16))) == 0) {
                        break label$3;
                    }
                    this._storeDouble((_32_ + 128), (-(this._loadDouble((_32_ + 128)))));
                    this._storeInt((this._loadInt((_32_ + 124))), -1);
                }
                while (false);
                this._storeDouble((_32_ + 136), (-(log((this._loadDouble((_32_ + 128)))))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if ((this._loadInt((_32_ + 16))) == 0) {
                    break label$4;
                }
                label$5:
                do {
                    if ((this._storeDouble((_32_ + 104), (sin_pi((this._storeDouble((_32_ + 128), (-(this._loadDouble((_32_ + 128)))))))))) != 0.0) {
                        break label$5;
                    }
                    this._storeDouble((_32_ + 136), (1.0 / ((_30_ = this._loadDouble((_32_ + 128))) - _30_)));
                    break label$0;
                }
                while (false);
                label$6:
                do {
                    label$7:
                    do {
                        if (((((_30_ = this._loadDouble((_32_ + 104))) <= 0.0) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                            break label$7;
                        }
                        this._storeInt((this._loadInt((_32_ + 124))), -1);
                        break label$6;
                    }
                    while (false);
                    this._storeDouble((_32_ + 104), (-(this._loadDouble((_32_ + 104)))));
                }
                while (false);
                this._storeDouble((_32_ + 80), (log((3.141592653589793 / ((this._loadDouble((_32_ + 104))) * (this._loadDouble((_32_ + 128))))))));
            }
            while (false);
            label$8:
            do {
                label$9:
                do {
                    label$10:
                    do {
                        label$11:
                        do {
                            label$12:
                            do {
                                label$13:
                                do {
                                    label$14:
                                    do {
                                        label$15:
                                        do {
                                            label$16:
                                            do {
                                                label$17:
                                                do {
                                                    label$18:
                                                    do {
                                                        label$19:
                                                        do {
                                                            if ((this._loadInt((_32_ + 20))) == 1072693248) {
                                                                break label$19;
                                                            }
                                                            if ((this._loadInt((_32_ + 20))) != 1073741824) {
                                                                break label$18;
                                                            }
                                                        }
                                                        while (false);
                                                        if ((this._loadInt((_32_ + 112))) == 0) {
                                                            break label$17;
                                                        }
                                                    }
                                                    while (false);
                                                    label$20:
                                                    do {
                                                        if (((this._loadInt((_32_ + 20))) & 4294967295L) > (1073741823 & 4294967295L)) {
                                                            break label$20;
                                                        }
                                                        if (((this._loadInt((_32_ + 20))) & 4294967295L) > (1072483532 & 4294967295L)) {
                                                            break label$16;
                                                        }
                                                        this._storeDouble((_32_ + 32), (-(log((this._loadDouble((_32_ + 128)))))));
                                                        if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1072130372 & 4294967295L)) {
                                                            break label$14;
                                                        }
                                                        this._storeDouble((_32_ + 96), (1.0 - (this._loadDouble((_32_ + 128)))));
                                                        this._storeInt((_32_ + 12), 0);
                                                        break label$9;
                                                    }
                                                    while (false);
                                                    if (((this._loadInt((_32_ + 20))) & 4294967295L) > (1075838975 & 4294967295L)) {
                                                        break label$15;
                                                    }
                                                    _31_ = this._storeInt((_32_ + 12), (_truncateDoubleToSignedInteger((this._loadDouble((_32_ + 128))))));
                                                    this._storeDouble((_32_ + 72), ((_30_ = this._storeDouble((_32_ + 96), ((this._loadDouble((_32_ + 128))) - ((double) _31_)))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 3.194753265841009E-5) + 0.0018402845140733772)) + 0.02664227030336386)) + 0.14635047265246445)) + 0.325778796408931)) + 0.21498241596060885)) + -0.07721566490153287)));
                                                    _30_ = this._storeDouble((_32_ + 40), (((_30_ = this._loadDouble((_32_ + 96))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 7.326684307446256E-6) + 7.779424963818936E-4)) + 0.01864591917156529)) + 0.17193386563280308)) + 0.7219355475671381)) + 1.3920053346762105)) + 1.0));
                                                    this._storeDouble((_32_ + 32), (((this._loadDouble((_32_ + 96))) * 0.5) + ((this._loadDouble((_32_ + 72))) / _30_)));
                                                    this._storeLong((_32_ + 88), 4607182418800017408L);
                                                    if (((_31_ = (this._loadInt((_32_ + 12))) + -3) & 4294967295L) > (4 & 4294967295L)) {
                                                        break label$8;
                                                    }
                                                    label$21:
                                                    do {
                                                        label$22:
                                                        do {
                                                            label$23:
                                                            do {
                                                                label$24:
                                                                do {
                                                                    label$25:
                                                                    do {
                                                                        switch (_31_) {
                                                                            case 0: {
                                                                                break label$21;
                                                                            }
                                                                            case 1: {
                                                                                break label$22;
                                                                            }
                                                                            case 2: {
                                                                                break label$23;
                                                                            }
                                                                            case 3: {
                                                                                break label$24;
                                                                            }
                                                                            case 4: {
                                                                                break label$25;
                                                                            }
                                                                            default: {
                                                                                break label$21;
                                                                            }
                                                                        }
                                                                    }
                                                                    while (false);
                                                                    this._storeDouble((_32_ + 88), ((this._loadDouble((_32_ + 88))) * ((this._loadDouble((_32_ + 96))) + 6.0)));
                                                                }
                                                                while (false);
                                                                this._storeDouble((_32_ + 88), ((this._loadDouble((_32_ + 88))) * ((this._loadDouble((_32_ + 96))) + 5.0)));
                                                            }
                                                            while (false);
                                                            this._storeDouble((_32_ + 88), ((this._loadDouble((_32_ + 88))) * ((this._loadDouble((_32_ + 96))) + 4.0)));
                                                        }
                                                        while (false);
                                                        this._storeDouble((_32_ + 88), ((this._loadDouble((_32_ + 88))) * ((this._loadDouble((_32_ + 96))) + 3.0)));
                                                    }
                                                    while (false);
                                                    _30_ = this._storeDouble((_32_ + 88), ((this._loadDouble((_32_ + 88))) * ((this._loadDouble((_32_ + 96))) + 2.0)));
                                                    this._storeDouble((_32_ + 32), ((this._loadDouble((_32_ + 32))) + (log(_30_))));
                                                    break label$8;
                                                }
                                                while (false);
                                                this._storeLong((_32_ + 32), 0L);
                                                break label$8;
                                            }
                                            while (false);
                                            this._storeLong((_32_ + 32), 0L);
                                            if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1073460419 & 4294967295L)) {
                                                break label$13;
                                            }
                                            this._storeDouble((_32_ + 96), (2.0 - (this._loadDouble((_32_ + 128)))));
                                            this._storeInt((_32_ + 12), 0);
                                            break label$9;
                                        }
                                        while (false);
                                        if (((this._loadInt((_32_ + 20))) & 4294967295L) > (1133510655 & 4294967295L)) {
                                            break label$12;
                                        }
                                        this._storeDouble((_32_ + 104), (log((this._loadDouble((_32_ + 128))))));
                                        _30_ = this._storeDouble((_32_ + 96), ((_30_ = this._storeDouble((_32_ + 88), (1.0 / (this._loadDouble((_32_ + 128)))))) * _30_));
                                        this._storeDouble((_32_ + 32), ((this._storeDouble((_32_ + 24), (((this._loadDouble((_32_ + 88))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -0.0016309293409657527) + 8.363399189962821E-4)) + -5.9518755745034E-4)) + 7.936505586430196E-4)) + -0.0027777777772877554)) + 0.08333333333333297)) + 0.4189385332046727))) + (((this._loadDouble((_32_ + 128))) + -0.5) * ((this._loadDouble((_32_ + 104))) - 1.0))));
                                        break label$8;
                                    }
                                    while (false);
                                    if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1070442081 & 4294967295L)) {
                                        break label$11;
                                    }
                                    this._storeDouble((_32_ + 96), ((this._loadDouble((_32_ + 128))) + -0.46163214496836225));
                                    this._storeInt((_32_ + 12), 1);
                                    break label$9;
                                }
                                while (false);
                                if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1072936132 & 4294967295L)) {
                                    break label$10;
                                }
                                this._storeDouble((_32_ + 96), ((this._loadDouble((_32_ + 128))) + -1.4616321449683622));
                                this._storeInt((_32_ + 12), 1);
                                break label$9;
                            }
                            while (false);
                            this._storeDouble((_32_ + 32), ((_30_ = this._loadDouble((_32_ + 128))) * ((log(_30_)) + -1.0)));
                            break label$8;
                        }
                        while (false);
                        this._storeDouble((_32_ + 96), (this._loadDouble((_32_ + 128))));
                        this._storeInt((_32_ + 12), 2);
                        break label$9;
                    }
                    while (false);
                    this._storeDouble((_32_ + 96), ((this._loadDouble((_32_ + 128))) + -1.0));
                    this._storeInt((_32_ + 12), 2);
                }
                while (false);
                label$26:
                do {
                    label$27:
                    do {
                        if ((_31_ = this._loadInt((_32_ + 12))) == 2) {
                            break label$27;
                        }
                        if (_31_ == 1) {
                            break label$26;
                        }
                        if (_31_ != 0) {
                            break label$8;
                        }
                        this._storeDouble((_32_ + 64), (((_30_ = this._storeDouble((_32_ + 88), ((_30_ = this._loadDouble((_32_ + 96))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 2.5214456545125733E-5) + 2.2086279071390839E-4)) + 0.0011927076318336207)) + 0.007385550860814029)) + 0.06735230105312927)) + 0.07721566490153287));
                        _30_ = this._storeDouble((_32_ + 72), ((this._storeDouble((_32_ + 56), ((_30_ = this._loadDouble((_32_ + 88))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 4.4864094961891516E-5) + 1.0801156724758394E-4)) + 5.100697921535113E-4)) + 0.0028905138367341563)) + 0.020580808432516733)) + 0.3224670334241136)))) + ((this._loadDouble((_32_ + 96))) * (this._loadDouble((_32_ + 64))))));
                        this._storeDouble((_32_ + 32), ((this._loadDouble((_32_ + 32))) + (_30_ + ((this._loadDouble((_32_ + 96))) * -0.5))));
                        break label$8;
                    }
                    while (false);
                    this._storeDouble((_32_ + 64), ((_30_ = this._loadDouble((_32_ + 96))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 0.013381091853678766) + 0.22896372806469245)) + 0.9777175279633727)) + 1.4549225013723477)) + 0.6328270640250934)) + -0.07721566490153287)));
                    _30_ = this._storeDouble((_32_ + 56), (((_30_ = this._loadDouble((_32_ + 96))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 0.003217092422824239) + 0.10422264559336913)) + 0.7692851504566728)) + 2.128489763798934)) + 2.4559779371304113)) + 1.0));
                    this._storeDouble((_32_ + 32), ((this._loadDouble((_32_ + 32))) + (((this._loadDouble((_32_ + 96))) * -0.5) + ((this._loadDouble((_32_ + 64))) / _30_))));
                    break label$8;
                }
                while (false);
                this._storeDouble((_32_ + 64), (((_30_ = this._storeDouble((_32_ + 24), ((this._storeDouble((_32_ + 88), ((_30_ = this._loadDouble((_32_ + 96))) * _30_))) * (this._loadDouble((_32_ + 96)))))) * ((_30_ * ((_30_ * ((_30_ * 3.1563207090362595E-4) + -0.0014034646998923284)) + 0.006100538702462913)) + -0.032788541075985965)) + 0.48383612272381005));
                this._storeDouble((_32_ + 56), (((_30_ = this._loadDouble((_32_ + 24))) * ((_30_ * ((_30_ * ((_30_ * -3.1275416837512086E-4) + 8.81081882437654E-4)) + -0.0036845201678113826)) + 0.01797067508118204)) + -0.1475877229945939));
                _30_ = this._storeDouble((_32_ + 48), (((_30_ = this._loadDouble((_32_ + 24))) * ((_30_ * ((_30_ * ((_30_ * 3.355291926355191E-4) + -5.385953053567405E-4)) + 0.0022596478090061247)) + -0.010314224129834144)) + 0.06462494023913339));
                _30_ = this._storeDouble((_32_ + 72), (((this._loadDouble((_32_ + 88))) * (this._loadDouble((_32_ + 64)))) - (-3.638676997039505E-18 - ((this._loadDouble((_32_ + 24))) * ((this._loadDouble((_32_ + 56))) + (_30_ * (this._loadDouble((_32_ + 96)))))))));
                this._storeDouble((_32_ + 32), ((this._loadDouble((_32_ + 32))) + (_30_ + -0.12148629053584961)));
            }
            while (false);
            label$28:
            do {
                if ((this._loadInt((_32_ + 16))) == 0) {
                    break label$28;
                }
                this._storeDouble((_32_ + 32), ((this._loadDouble((_32_ + 80))) - (this._loadDouble((_32_ + 32)))));
            }
            while (false);
            this._storeDouble((_32_ + 136), (this._loadDouble((_32_ + 32))));
        }
        while (false);
        _30_ = this._loadDouble((_32_ + 136));
        this._storeInt((0 + 4), (_32_ + 144));
        return _30_;
    }

    public final double sin_pi(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 12), (((this._storeInt((_31_ + 12), (_truncateDoubleToSignedInteger(((this._storeDouble((_31_ + 16), ((_30_ = (_30_ = (this._storeDouble((_31_ + 16), _30_)) * 0.5) - (Math.floor(_30_))) + _30_))) * 4.0))))) + 1) / 2));
        this._storeDouble((_31_ + 16), ((this._storeDouble((_31_ + 16), ((this._loadDouble((_31_ + 16))) + ((double) (((float) _32_) * -0.5f))))) * 3.141592653589793));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((_32_ = this._loadInt((_31_ + 12))) == 1) {
                            break label$3;
                        }
                        if (_32_ == 2) {
                            break label$2;
                        }
                        if (_32_ != 3) {
                            break label$1;
                        }
                        this._storeDouble((_31_ + 24), (-(__cos((this._loadDouble((_31_ + 16))), 0.0))));
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_31_ + 24), (__cos((this._loadDouble((_31_ + 16))), 0.0)));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 24), (__sin((-(this._loadDouble((_31_ + 16)))), 0.0, 0)));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 24), (__sin((this._loadDouble((_31_ + 16))), 0.0, 0)));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 24));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final float lgammaf(float _30_)
    {
        int _31_ = 0;
        _30_ = __lgammaf_r((this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 14764);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final float __lgammaf_r(float _30_, int _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 72), _30_);
        this._storeInt((_32_ + 68), _31_);
        this._storeFloat((_32_ + 64), (this._loadFloat((_32_ + 72))));
        this._storeInt((this._loadInt((_32_ + 68))), 1);
        this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 64))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 64))) & 2147483647))) & 4294967295L) < (2139095040 & 4294967295L)) {
                    break label$1;
                }
                this._storeFloat((_32_ + 76), ((_30_ = this._loadFloat((_32_ + 72))) * _30_));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 16))) & 4294967295L) > (889192447 & 4294967295L)) {
                    break label$2;
                }
                label$3:
                do {
                    if ((this._loadInt((_32_ + 8))) == 0) {
                        break label$3;
                    }
                    this._storeInt((this._loadInt((_32_ + 68))), -1);
                    this._storeFloat((_32_ + 72), (-(this._loadFloat((_32_ + 72)))));
                }
                while (false);
                this._storeFloat((_32_ + 76), (-(logf((this._loadFloat((_32_ + 72)))))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if ((this._loadInt((_32_ + 8))) == 0) {
                    break label$4;
                }
                label$5:
                do {
                    if ((this._storeFloat((_32_ + 60), (sin_pi$2e$143((this._storeFloat((_32_ + 72), (-(this._loadFloat((_32_ + 72)))))))))) != 0.0f) {
                        break label$5;
                    }
                    this._storeFloat((_32_ + 76), (1.0f / ((_30_ = this._loadFloat((_32_ + 72))) - _30_)));
                    break label$0;
                }
                while (false);
                label$6:
                do {
                    label$7:
                    do {
                        if (((((_30_ = this._loadFloat((_32_ + 60))) <= 0.0f) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                            break label$7;
                        }
                        this._storeInt((this._loadInt((_32_ + 68))), -1);
                        break label$6;
                    }
                    while (false);
                    this._storeFloat((_32_ + 60), (-(this._loadFloat((_32_ + 60)))));
                }
                while (false);
                this._storeFloat((_32_ + 48), (logf((3.1415927f / ((this._loadFloat((_32_ + 60))) * (this._loadFloat((_32_ + 72))))))));
            }
            while (false);
            label$8:
            do {
                label$9:
                do {
                    label$10:
                    do {
                        if ((this._loadInt((_32_ + 16))) == 1065353216) {
                            break label$10;
                        }
                        if ((this._loadInt((_32_ + 16))) != 1073741824) {
                            break label$9;
                        }
                    }
                    while (false);
                    this._storeInt((_32_ + 24), 0);
                    break label$8;
                }
                while (false);
                label$11:
                do {
                    label$12:
                    do {
                        label$13:
                        do {
                            label$14:
                            do {
                                label$15:
                                do {
                                    label$16:
                                    do {
                                        label$17:
                                        do {
                                            label$18:
                                            do {
                                                label$19:
                                                do {
                                                    if (((this._loadInt((_32_ + 16))) & 4294967295L) > (1073741823 & 4294967295L)) {
                                                        break label$19;
                                                    }
                                                    if (((this._loadInt((_32_ + 16))) & 4294967295L) > (1063675494 & 4294967295L)) {
                                                        break label$18;
                                                    }
                                                    this._storeFloat((_32_ + 24), (-(logf((this._loadFloat((_32_ + 72)))))));
                                                    if (((this._loadInt((_32_ + 16))) & 4294967295L) < (1060850208 & 4294967295L)) {
                                                        break label$16;
                                                    }
                                                    this._storeFloat((_32_ + 56), (1.0f - (this._loadFloat((_32_ + 72)))));
                                                    this._storeInt((_32_ + 12), 0);
                                                    break label$11;
                                                }
                                                while (false);
                                                if (((this._loadInt((_32_ + 16))) & 4294967295L) > (1090519039 & 4294967295L)) {
                                                    break label$17;
                                                }
                                                _31_ = this._storeInt((_32_ + 12), (_truncateFloatToSignedInteger((this._loadFloat((_32_ + 72))))));
                                                this._storeFloat((_32_ + 44), ((_30_ = this._storeFloat((_32_ + 56), ((this._loadFloat((_32_ + 72))) - ((float) _31_)))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 3.1947533E-5f) + 0.0018402846f)) + 0.02664227f)) + 0.14635047f)) + 0.32577878f)) + 0.21498242f)) + -0.077215664f)));
                                                _30_ = this._storeFloat((_32_ + 28), (((_30_ = this._loadFloat((_32_ + 56))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 7.326684E-6f) + 7.779425E-4f)) + 0.01864592f)) + 0.17193386f)) + 0.7219356f)) + 1.3920053f)) + 1.0f));
                                                this._storeFloat((_32_ + 24), (((this._loadFloat((_32_ + 56))) * 0.5f) + ((this._loadFloat((_32_ + 44))) / _30_)));
                                                this._storeInt((_32_ + 52), 1065353216);
                                                if (((_31_ = (this._loadInt((_32_ + 12))) + -3) & 4294967295L) > (4 & 4294967295L)) {
                                                    break label$8;
                                                }
                                                label$20:
                                                do {
                                                    label$21:
                                                    do {
                                                        label$22:
                                                        do {
                                                            label$23:
                                                            do {
                                                                label$24:
                                                                do {
                                                                    switch (_31_) {
                                                                        case 0: {
                                                                            break label$20;
                                                                        }
                                                                        case 1: {
                                                                            break label$21;
                                                                        }
                                                                        case 2: {
                                                                            break label$22;
                                                                        }
                                                                        case 3: {
                                                                            break label$23;
                                                                        }
                                                                        case 4: {
                                                                            break label$24;
                                                                        }
                                                                        default: {
                                                                            break label$20;
                                                                        }
                                                                    }
                                                                }
                                                                while (false);
                                                                this._storeFloat((_32_ + 52), ((this._loadFloat((_32_ + 52))) * ((this._loadFloat((_32_ + 56))) + 6.0f)));
                                                            }
                                                            while (false);
                                                            this._storeFloat((_32_ + 52), ((this._loadFloat((_32_ + 52))) * ((this._loadFloat((_32_ + 56))) + 5.0f)));
                                                        }
                                                        while (false);
                                                        this._storeFloat((_32_ + 52), ((this._loadFloat((_32_ + 52))) * ((this._loadFloat((_32_ + 56))) + 4.0f)));
                                                    }
                                                    while (false);
                                                    this._storeFloat((_32_ + 52), ((this._loadFloat((_32_ + 52))) * ((this._loadFloat((_32_ + 56))) + 3.0f)));
                                                }
                                                while (false);
                                                _30_ = this._storeFloat((_32_ + 52), ((this._loadFloat((_32_ + 52))) * ((this._loadFloat((_32_ + 56))) + 2.0f)));
                                                this._storeFloat((_32_ + 24), ((this._loadFloat((_32_ + 24))) + (logf(_30_))));
                                                break label$8;
                                            }
                                            while (false);
                                            _31_ = this._storeInt((_32_ + 24), 0);
                                            if (((this._loadInt((_32_ + 16))) & 4294967295L) < (1071490584 & 4294967295L)) {
                                                break label$15;
                                            }
                                            this._storeFloat((_32_ + 56), (2.0f - (this._loadFloat((_32_ + 72)))));
                                            this._storeInt((_32_ + 12), _31_);
                                            break label$11;
                                        }
                                        while (false);
                                        if (((this._loadInt((_32_ + 16))) & 4294967295L) > (1551892479 & 4294967295L)) {
                                            break label$14;
                                        }
                                        this._storeFloat((_32_ + 60), (logf((this._loadFloat((_32_ + 72))))));
                                        _30_ = this._storeFloat((_32_ + 56), ((_30_ = this._storeFloat((_32_ + 52), (1.0f / (this._loadFloat((_32_ + 72)))))) * _30_));
                                        this._storeFloat((_32_ + 24), ((this._storeFloat((_32_ + 20), (((this._loadFloat((_32_ + 52))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * -0.0016309293f) + 8.363399E-4f)) + -5.9518754E-4f)) + 7.936506E-4f)) + -0.0027777778f)) + 0.083333336f)) + 0.41893855f))) + (((this._loadFloat((_32_ + 72))) + -0.5f) * ((this._loadFloat((_32_ + 60))) - 1.0f))));
                                        break label$8;
                                    }
                                    while (false);
                                    if (((this._loadInt((_32_ + 16))) & 4294967295L) < (1047343880 & 4294967295L)) {
                                        break label$13;
                                    }
                                    this._storeFloat((_32_ + 56), ((this._loadFloat((_32_ + 72))) + -0.46163213f));
                                    this._storeInt((_32_ + 12), 1);
                                    break label$11;
                                }
                                while (false);
                                if (((this._loadInt((_32_ + 16))) & 4294967295L) < (1067296288 & 4294967295L)) {
                                    break label$12;
                                }
                                this._storeFloat((_32_ + 56), ((this._loadFloat((_32_ + 72))) + -1.4616321f));
                                this._storeInt((_32_ + 12), 1);
                                break label$11;
                            }
                            while (false);
                            this._storeFloat((_32_ + 24), ((_30_ = this._loadFloat((_32_ + 72))) * ((logf(_30_)) + -1.0f)));
                            break label$8;
                        }
                        while (false);
                        this._storeFloat((_32_ + 56), (this._loadFloat((_32_ + 72))));
                        this._storeInt((_32_ + 12), 2);
                        break label$11;
                    }
                    while (false);
                    this._storeFloat((_32_ + 56), ((this._loadFloat((_32_ + 72))) + -1.0f));
                    this._storeInt((_32_ + 12), 2);
                }
                while (false);
                label$25:
                do {
                    label$26:
                    do {
                        if ((_31_ = this._loadInt((_32_ + 12))) == 2) {
                            break label$26;
                        }
                        if (_31_ == 1) {
                            break label$25;
                        }
                        if (_31_ != 0) {
                            break label$8;
                        }
                        this._storeFloat((_32_ + 40), (((_30_ = this._storeFloat((_32_ + 52), ((_30_ = this._loadFloat((_32_ + 56))) * _30_))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 2.5214456E-5f) + 2.2086278E-4f)) + 0.0011927077f)) + 0.007385551f)) + 0.0673523f)) + 0.077215664f));
                        _30_ = this._storeFloat((_32_ + 44), ((this._storeFloat((_32_ + 36), ((_30_ = this._loadFloat((_32_ + 52))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 4.4864097E-5f) + 1.0801157E-4f)) + 5.100698E-4f)) + 0.0028905137f)) + 0.020580808f)) + 0.32246703f)))) + ((this._loadFloat((_32_ + 56))) * (this._loadFloat((_32_ + 40))))));
                        this._storeFloat((_32_ + 24), ((this._loadFloat((_32_ + 24))) + (_30_ + ((this._loadFloat((_32_ + 56))) * -0.5f))));
                        break label$8;
                    }
                    while (false);
                    this._storeFloat((_32_ + 40), ((_30_ = this._loadFloat((_32_ + 56))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 0.013381092f) + 0.22896373f)) + 0.9777175f)) + 1.4549226f)) + 0.63282704f)) + -0.077215664f)));
                    _30_ = this._storeFloat((_32_ + 36), (((_30_ = this._loadFloat((_32_ + 56))) * ((_30_ * ((_30_ * ((_30_ * ((_30_ * 0.0032170925f) + 0.10422265f)) + 0.76928514f)) + 2.1284897f)) + 2.455978f)) + 1.0f));
                    this._storeFloat((_32_ + 24), ((this._loadFloat((_32_ + 24))) + (((this._loadFloat((_32_ + 56))) * -0.5f) + ((this._loadFloat((_32_ + 40))) / _30_))));
                    break label$8;
                }
                while (false);
                this._storeFloat((_32_ + 40), (((_30_ = this._storeFloat((_32_ + 20), ((this._storeFloat((_32_ + 52), ((_30_ = this._loadFloat((_32_ + 56))) * _30_))) * (this._loadFloat((_32_ + 56)))))) * ((_30_ * ((_30_ * ((_30_ * 3.1563206E-4f) + -0.0014034647f)) + 0.0061005387f)) + -0.03278854f)) + 0.4838361f));
                this._storeFloat((_32_ + 36), (((_30_ = this._loadFloat((_32_ + 20))) * ((_30_ * ((_30_ * ((_30_ * -3.1275416E-4f) + 8.8108185E-4f)) + -0.0036845203f)) + 0.017970676f)) + -0.14758772f));
                _30_ = this._storeFloat((_32_ + 32), (((_30_ = this._loadFloat((_32_ + 20))) * ((_30_ * ((_30_ * ((_30_ * 3.3552918E-4f) + -5.385953E-4f)) + 0.0022596477f)) + -0.010314224f)) + 0.06462494f));
                _30_ = this._storeFloat((_32_ + 44), (((this._loadFloat((_32_ + 52))) * (this._loadFloat((_32_ + 40)))) - (6.6971007E-9f - ((this._loadFloat((_32_ + 20))) * ((this._loadFloat((_32_ + 36))) + (_30_ * (this._loadFloat((_32_ + 56)))))))));
                this._storeFloat((_32_ + 24), ((this._loadFloat((_32_ + 24))) + (_30_ + -0.121486284f)));
            }
            while (false);
            label$27:
            do {
                if ((this._loadInt((_32_ + 8))) == 0) {
                    break label$27;
                }
                this._storeFloat((_32_ + 24), ((this._loadFloat((_32_ + 48))) - (this._loadFloat((_32_ + 24)))));
            }
            while (false);
            this._storeFloat((_32_ + 76), (this._loadFloat((_32_ + 24))));
        }
        while (false);
        _30_ = this._loadFloat((_32_ + 76));
        this._storeInt((0 + 4), (_32_ + 80));
        return _30_;
    }

    public final float sin_pi$2e$143(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 12), (((this._storeInt((_31_ + 12), (_truncateFloatToSignedInteger(((this._storeFloat((_31_ + 24), ((_30_ = (_30_ = (this._storeFloat((_31_ + 24), _30_)) * 0.5f) - ((float) (Math.floor(_30_)))) + _30_))) * 4.0f))))) + 1) / 2));
        this._storeDouble((_31_ + 16), ((this._storeDouble((_31_ + 16), ((double) ((this._loadFloat((_31_ + 24))) - (((float) _32_) * 0.5f))))) * 3.141592653589793));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((_32_ = this._loadInt((_31_ + 12))) == 1) {
                            break label$3;
                        }
                        if (_32_ == 2) {
                            break label$2;
                        }
                        if (_32_ != 3) {
                            break label$1;
                        }
                        this._storeFloat((_31_ + 28), (-(__cosdf((this._loadDouble((_31_ + 16)))))));
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((_31_ + 28), (__cosdf((this._loadDouble((_31_ + 16))))));
                    break label$0;
                }
                while (false);
                this._storeFloat((_31_ + 28), (__sindf((-(this._loadDouble((_31_ + 16)))))));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 28), (__sindf((this._loadDouble((_31_ + 16))))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final void __lgammal_r(int _30_, long _31_, long _32_, int _33_)
    {
        int _34_ = 0;
        this._storeLong(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeInt((_34_ + 28), _33_);
        this._storeLong((_34_ + 40), _32_);
        this.__extenddftf2.invoke((_34_ + 8), (__lgamma_r((this.__trunctfdf2.invoke((this._loadLong((_34_ + 32))), _32_)), _33_)));
        this._storeLong((_30_ + 8), (this._loadLong(((_34_ + 8) + 8))));
        this._storeLong(_30_, (this._loadLong((_34_ + 8))));
        this._storeInt((0 + 4), (_34_ + 48));
        return;
    }

    public final void lgammal(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this._storeLong(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _32_);
        __lgammal_r(_33_, (this._storeLong((_33_ + 16), _31_)), _32_, 14764);
        _31_ = this._loadLong(_33_);
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, _31_);
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int link(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __syscall_ret((this.__syscall2.invoke(9, (this._loadInt((_32_ + 12))), _31_)));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int linkat(int _30_, int _31_, int _32_, int _33_, int _34_)
    {
        int _35_ = 0;
        this._storeInt(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_35_ + 24), _31_);
        this._storeInt((_35_ + 20), _32_);
        this._storeInt((_35_ + 16), _33_);
        this._storeInt((_35_ + 12), _34_);
        _34_ = __syscall_ret((this.__syscall5.invoke(303, (this._loadInt((_35_ + 28))), (this._loadInt((_35_ + 24))), (this._loadInt((_35_ + 20))), (this._loadInt((_35_ + 16))), _34_)));
        this._storeInt((0 + 4), (_35_ + 32));
        return _34_;
    }

    public final int __simple_malloc(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        _30_ = this._storeInt((_31_ + 20), 1);
        label$0:
        do {
            if ((this._loadInt((_31_ + 24))) != 0) {
                break label$0;
            }
            this._storeInt((_31_ + 24), ((this._loadInt((_31_ + 24))) + _30_));
        }
        while (false);
        label$2:
        do {
            label$1:
            while (true) {
                _30_ = 0;
                label$3:
                do {
                    if (((this._loadInt((_31_ + 20))) & 4294967295L) >= ((this._loadInt((_31_ + 24))) & 4294967295L)) {
                        break label$3;
                    }
                    _30_ = (((this._loadInt((_31_ + 20))) & 4294967295L) < (16 & 4294967295L)) ? 1 : 0;
                }
                while (false);
                if (_30_ == 0) {
                    break label$2;
                }
                this._storeInt((_31_ + 20), ((_30_ = this._loadInt((_31_ + 20))) + _30_));
                continue label$1;
            }
        }
        while (false);
        this.__lock.invoke(13012);
        this._storeInt((_31_ + 16), ((0 - (this._loadInt((0 + 13020)))) & ((this._loadInt((_31_ + 20))) + -1)));
        label$4:
        do {
            if (((this._loadInt((_31_ + 24))) & 4294967295L) > (-2147483633 & 4294967295L)) {
                break label$4;
            }
            this._storeInt((_31_ + 24), ((this._loadInt((_31_ + 24))) + (this._loadInt((_31_ + 16)))));
        }
        while (false);
        label$5:
        do {
            label$6:
            do {
                label$7:
                do {
                    if (((this._loadInt((_31_ + 24))) & 4294967295L) <= (((this._loadInt((0 + 13024))) - (this._loadInt((0 + 13020)))) & 4294967295L)) {
                        break label$7;
                    }
                    this._storeInt((_31_ + 8), (this._loadInt((_31_ + 24))));
                    if ((this._storeInt((_31_ + 4), (__expand_heap((_31_ + 8))))) == 0) {
                        break label$6;
                    }
                    label$8:
                    do {
                        if ((this._loadInt((_31_ + 4))) == (this._loadInt((0 + 13024)))) {
                            break label$8;
                        }
                        this._storeInt((0 + 13020), (this._loadInt((_31_ + 4))));
                        this._storeInt((_31_ + 24), ((this._loadInt((_31_ + 24))) - (this._loadInt((_31_ + 16)))));
                        this._storeInt((_31_ + 16), 0);
                    }
                    while (false);
                    this._storeInt((0 + 13024), ((this._loadInt((_31_ + 4))) + (this._loadInt((_31_ + 8)))));
                }
                while (false);
                this._storeInt((_31_ + 12), ((_30_ = this._loadInt((0 + 13020))) + (this._loadInt((_31_ + 16)))));
                this._storeInt((0 + 13020), (_30_ + (this._loadInt((_31_ + 24)))));
                this.__unlock.invoke(13012);
                this._storeInt((_31_ + 28), (this._loadInt((_31_ + 12))));
                break label$5;
            }
            while (false);
            this.__unlock.invoke(13012);
            this._storeInt((_31_ + 28), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final long llabs(long _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._storeLong(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), _30_)) < 1L) {
                break label$0;
            }
            return (this._loadLong((_31_ + 8)));
        }
        while (false);
        return (0L - (this._loadLong((_31_ + 8))));
    }

    public final void lldiv(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this._storeLong(((_33_ = (this._loadInt((0 + 4))) - 16) + 8), _31_);
        this._storeLong(_33_, _32_);
        this._storeLong(_30_, ((_31_ = this._loadLong((_33_ + 8))) / _32_));
        this._storeLong((_30_ + 8), (_31_ % _32_));
        return;
    }

    public final long llrint(double _30_)
    {
        return (_truncateDoubleToSignedLong((Math.round((this._storeDouble((((this._loadInt((0 + 4))) - 16) + 8), _30_))))));
    }

    public final long llrintf(float _30_)
    {
        return (_truncateFloatToSignedLong((Math.round((this._storeFloat((((this._loadInt((0 + 4))) - 16) + 12), _30_))))));
    }

    public final long llrintl(long _30_, long _31_)
    {
        int _32_ = 0;
        _31_ = llrint((this.__trunctfdf2.invoke((this._storeLong((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), _30_)), (this._storeLong((_32_ + 8), _31_)))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final long llround(double _30_)
    {
        int _31_ = 0;
        _30_ = round((this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)));
        this._storeInt((0 + 4), (_31_ + 16));
        return (_truncateDoubleToSignedLong(_30_));
    }

    public final long llroundf(float _30_)
    {
        int _31_ = 0;
        _30_ = roundf((this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)));
        this._storeInt((0 + 4), (_31_ + 16));
        return (_truncateFloatToSignedLong(_30_));
    }

    public final long llroundl(long _30_, long _31_)
    {
        int _32_ = 0;
        roundl((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), _30_, _31_);
        this._storeLong((_32_ + 24), _31_);
        this._storeLong((_32_ + 16), _30_);
        _30_ = this.__fixtfdi.invoke((this._loadLong(_32_)), (this._loadLong((_32_ + 8))));
        this._storeInt((0 + 4), (_32_ + 32));
        return _30_;
    }

    public final double log(double _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        int _33_ = 0;
        this._storeDouble(((_33_ = (this._loadInt((0 + 4))) - 112) + 88), (this._storeDouble((_33_ + 96), _30_)));
        this._storeLong((_33_ + 12), (this._loadLong((_33_ + 92))));
        this._storeInt((_33_ + 8), 0);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt((_33_ + 12))) & 4294967295L) < (1048576 & 4294967295L)) {
                        break label$2;
                    }
                    if (((this._loadInt((_33_ + 12))) >>> 31) == 0) {
                        break label$1;
                    }
                }
                while (false);
                label$3:
                do {
                    label$4:
                    do {
                        if (((this._loadLong((_33_ + 88))) << 1L) == 0L) {
                            break label$4;
                        }
                        if (((this._loadInt((_33_ + 12))) >>> 31) == 0) {
                            break label$3;
                        }
                        this._storeDouble((_33_ + 104), (((_30_ = this._loadDouble((_33_ + 96))) - _30_) / 0.0));
                        return (this._loadDouble((_33_ + 104)));
                    }
                    while (false);
                    this._storeDouble((_33_ + 104), (-1.0 / ((_30_ = this._loadDouble((_33_ + 96))) * _30_)));
                    return (this._loadDouble((_33_ + 104)));
                }
                while (false);
                this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + -54));
                this._storeDouble((_33_ + 88), (this._storeDouble((_33_ + 96), ((this._loadDouble((_33_ + 96))) * 1.8014398509481984E16))));
                this._storeLong((_33_ + 12), (this._loadLong((_33_ + 92))));
                break label$0;
            }
            while (false);
            label$5:
            do {
                if (((this._loadInt((_33_ + 12))) & 4294967295L) < (2146435072 & 4294967295L)) {
                    break label$5;
                }
                this._storeDouble((_33_ + 104), (this._loadDouble((_33_ + 96))));
                return (this._loadDouble((_33_ + 104)));
            }
            while (false);
            if ((this._loadInt((_33_ + 12))) != 1072693248) {
                break label$0;
            }
            if (((this._loadLong((_33_ + 88))) << 32L) != 0L) {
                break label$0;
            }
            this._storeLong((_33_ + 104), 0L);
            return (this._loadDouble((_33_ + 104)));
        }
        while (false);
        _31_ = this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 614242));
        this._storeInt((_33_ + 8), (((this._loadInt((_33_ + 8))) + (_31_ >>> 20)) + -1023));
        this._storeInt((_33_ + 12), (((this._loadInt((_33_ + 12))) & 1048575) + 1072079006));
        this._storeLong((_33_ + 92), (this._loadLong((_33_ + 12))));
        this._storeDouble((_33_ + 80), (((_30_ = this._storeDouble((_33_ + 72), ((this._storeDouble((_33_ + 96), (this._loadDouble((_33_ + 88))))) + -1.0))) * 0.5) * _30_));
        this._storeDouble((_33_ + 32), ((_30_ = this._storeDouble((_33_ + 40), ((_30_ = this._storeDouble((_33_ + 56), ((_30_ = this._storeDouble((_33_ + 64), ((_30_ = this._loadDouble((_33_ + 72))) / (_30_ + 2.0)))) * _30_))) * _30_))) * ((_30_ * ((_30_ * 0.15313837699209373) + 0.22222198432149784)) + 0.3999999999940942)));
        this._storeDouble((_33_ + 48), ((this._storeDouble((_33_ + 24), ((this._loadDouble((_33_ + 56))) * (((_30_ = this._loadDouble((_33_ + 40))) * ((_30_ * ((_30_ * 0.14798198605116586) + 0.1818357216161805)) + 0.2857142874366239)) + 0.6666666666666735)))) + (this._loadDouble((_33_ + 32)))));
        _30_ = this._storeDouble((_33_ + 16), ((double) (this._loadInt((_33_ + 8)))));
        this._storeDouble((_33_ + 104), ((((((this._loadDouble((_33_ + 64))) * ((_32_ = this._loadDouble((_33_ + 80))) + (this._loadDouble((_33_ + 48))))) + (_30_ * 1.9082149292705877E-10)) - _32_) + (this._loadDouble((_33_ + 72)))) + (_30_ * 0.6931471803691238)));
        return (this._loadDouble((_33_ + 104)));
    }

    public final double log10(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 144))) + 120), (this._storeDouble((_32_ + 128), _30_)));
        this._storeLong((_32_ + 4), (this._loadLong((_32_ + 124))));
        this._storeInt(_32_, 0);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._loadInt((_32_ + 4))) & 4294967295L) < (1048576 & 4294967295L)) {
                            break label$3;
                        }
                        if (((this._loadInt((_32_ + 4))) >>> 31) == 0) {
                            break label$2;
                        }
                    }
                    while (false);
                    label$4:
                    do {
                        label$5:
                        do {
                            if (((this._loadLong((_32_ + 120))) << 1L) == 0L) {
                                break label$5;
                            }
                            if (((this._loadInt((_32_ + 4))) >>> 31) == 0) {
                                break label$4;
                            }
                            this._storeDouble((_32_ + 136), (((_30_ = this._loadDouble((_32_ + 128))) - _30_) / 0.0));
                            break label$0;
                        }
                        while (false);
                        this._storeDouble((_32_ + 136), (-1.0 / ((_30_ = this._loadDouble((_32_ + 128))) * _30_)));
                        break label$0;
                    }
                    while (false);
                    this._storeInt(_32_, ((this._loadInt(_32_)) + -54));
                    this._storeDouble((_32_ + 120), (this._storeDouble((_32_ + 128), ((this._loadDouble((_32_ + 128))) * 1.8014398509481984E16))));
                    this._storeLong((_32_ + 4), (this._loadLong((_32_ + 124))));
                    break label$1;
                }
                while (false);
                label$6:
                do {
                    if (((this._loadInt((_32_ + 4))) & 4294967295L) < (2146435072 & 4294967295L)) {
                        break label$6;
                    }
                    this._storeDouble((_32_ + 136), (this._loadDouble((_32_ + 128))));
                    break label$0;
                }
                while (false);
                if ((this._loadInt((_32_ + 4))) != 1072693248) {
                    break label$1;
                }
                if (((this._loadLong((_32_ + 120))) << 32L) != 0L) {
                    break label$1;
                }
                this._storeLong((_32_ + 136), 0L);
                break label$0;
            }
            while (false);
            _31_ = this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) + 614242));
            this._storeInt(_32_, (((this._loadInt(_32_)) + (_31_ >>> 20)) + -1023));
            this._storeInt((_32_ + 4), (((this._loadInt((_32_ + 4))) & 1048575) + 1072079006));
            this._storeLong((_32_ + 124), (this._loadLong((_32_ + 4))));
            this._storeDouble((_32_ + 112), (((_30_ = this._storeDouble((_32_ + 104), ((this._storeDouble((_32_ + 128), (this._loadDouble((_32_ + 120))))) + -1.0))) * 0.5) * _30_));
            this._storeDouble((_32_ + 64), ((_30_ = this._storeDouble((_32_ + 72), ((_30_ = this._storeDouble((_32_ + 88), ((_30_ = this._storeDouble((_32_ + 96), ((_30_ = this._loadDouble((_32_ + 104))) / (_30_ + 2.0)))) * _30_))) * _30_))) * ((_30_ * ((_30_ * 0.15313837699209373) + 0.22222198432149784)) + 0.3999999999940942)));
            this._storeDouble((_32_ + 80), ((this._storeDouble((_32_ + 56), ((this._loadDouble((_32_ + 88))) * (((_30_ = this._loadDouble((_32_ + 72))) * ((_30_ * ((_30_ * 0.14798198605116586) + 0.1818357216161805)) + 0.2857142874366239)) + 0.6666666666666735)))) + (this._loadDouble((_32_ + 64)))));
            this._storeDouble((_32_ + 120), (this._storeDouble((_32_ + 32), ((this._loadDouble((_32_ + 104))) - (this._loadDouble((_32_ + 112)))))));
            this._storeLong((_32_ + 120), ((this._loadLong((_32_ + 120))) & -4294967296L));
            _30_ = this._storeDouble((_32_ + 32), (this._loadDouble((_32_ + 120))));
            this._storeDouble((_32_ + 24), ((((this._loadDouble((_32_ + 104))) - _30_) - (_30_ = this._loadDouble((_32_ + 112)))) + ((this._loadDouble((_32_ + 96))) * (_30_ + (this._loadDouble((_32_ + 80)))))));
            this._storeDouble((_32_ + 16), ((this._loadDouble((_32_ + 32))) * 0.4342944818781689));
            this._storeDouble((_32_ + 40), ((this._storeDouble((_32_ + 48), ((double) (this._loadInt(_32_))))) * 0.30102999566361177));
            this._storeDouble((_32_ + 8), ((((this._loadDouble((_32_ + 48))) * 3.694239077158931E-13) + (((_30_ = this._loadDouble((_32_ + 24))) + (this._loadDouble((_32_ + 32)))) * 2.5082946711645275E-11)) + (_30_ * 0.4342944818781689)));
            _30_ = this._storeDouble((_32_ + 72), ((this._loadDouble((_32_ + 40))) + (this._loadDouble((_32_ + 16)))));
            this._storeDouble((_32_ + 8), ((this._loadDouble((_32_ + 8))) + (((this._loadDouble((_32_ + 40))) - _30_) + (this._loadDouble((_32_ + 16))))));
            this._storeDouble((_32_ + 136), ((this._storeDouble((_32_ + 16), (this._loadDouble((_32_ + 72))))) + (this._loadDouble((_32_ + 8)))));
        }
        while (false);
        _30_ = this._loadDouble((_32_ + 136));
        this._storeInt((0 + 4), (_32_ + 144));
        return _30_;
    }

    public final float log10f(float _30_)
    {
        int _31_ = 0;
        float _32_ = 0.0f;
        float _33_ = 0.0f;
        int _34_ = 0;
        this._storeFloat(((_34_ = (this._loadInt((0 + 4))) - 80) + 64), (this._storeFloat((_34_ + 72), _30_)));
        this._storeInt((_34_ + 16), (this._loadInt((_34_ + 64))));
        this._storeInt((_34_ + 12), 0);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            if (((this._loadInt((_34_ + 16))) & 4294967295L) < (8388608 & 4294967295L)) {
                                break label$4;
                            }
                            if (((this._loadInt((_34_ + 16))) >>> 31) == 0) {
                                break label$3;
                            }
                        }
                        while (false);
                        label$5:
                        do {
                            if (((this._loadInt((_34_ + 16))) << 1) == 0) {
                                break label$5;
                            }
                            if (((this._loadInt((_34_ + 16))) >>> 31) == 0) {
                                break label$2;
                            }
                            this._storeFloat((_34_ + 76), (((_30_ = this._loadFloat((_34_ + 72))) - _30_) / 0.0f));
                            return (this._loadFloat((_34_ + 76)));
                        }
                        while (false);
                        this._storeFloat((_34_ + 76), (-1.0f / ((_30_ = this._loadFloat((_34_ + 72))) * _30_)));
                        return (this._loadFloat((_34_ + 76)));
                    }
                    while (false);
                    if (((this._loadInt((_34_ + 16))) & 4294967295L) < (2139095040 & 4294967295L)) {
                        break label$1;
                    }
                    this._storeFloat((_34_ + 76), (this._loadFloat((_34_ + 72))));
                    return (this._loadFloat((_34_ + 76)));
                }
                while (false);
                this._storeInt((_34_ + 12), ((this._loadInt((_34_ + 12))) + -25));
                this._storeFloat((_34_ + 64), (this._storeFloat((_34_ + 72), ((this._loadFloat((_34_ + 72))) * 3.3554432E7f))));
                this._storeInt((_34_ + 16), (this._loadInt((_34_ + 64))));
                break label$0;
            }
            while (false);
            if ((this._loadInt((_34_ + 16))) != 1065353216) {
                break label$0;
            }
            this._storeInt((_34_ + 76), 0);
            return (this._loadFloat((_34_ + 76)));
        }
        while (false);
        _31_ = this._storeInt((_34_ + 16), ((this._loadInt((_34_ + 16))) + 4913933));
        this._storeInt((_34_ + 12), (((this._loadInt((_34_ + 12))) + (_31_ >>> 23)) + -127));
        this._storeInt((_34_ + 64), (this._storeInt((_34_ + 16), (((this._loadInt((_34_ + 16))) & 8388607) + 1060439283))));
        this._storeFloat((_34_ + 36), ((_30_ = this._storeFloat((_34_ + 40), ((_30_ = this._storeFloat((_34_ + 48), ((_30_ = this._storeFloat((_34_ + 52), ((_30_ = this._storeFloat((_34_ + 56), ((this._storeFloat((_34_ + 72), (this._loadFloat((_34_ + 64))))) + -1.0f))) / (_30_ + 2.0f)))) * _30_))) * _30_))) * ((_30_ * 0.24279079f) + 0.40000972f)));
        this._storeFloat((_34_ + 44), ((this._storeFloat((_34_ + 32), ((this._loadFloat((_34_ + 48))) * (((this._loadFloat((_34_ + 40))) * 0.28498787f) + 0.6666666f)))) + (this._loadFloat((_34_ + 36)))));
        _30_ = this._storeFloat((_34_ + 60), (((_30_ = this._loadFloat((_34_ + 56))) * 0.5f) * _30_));
        this._storeFloat((_34_ + 64), (this._storeFloat((_34_ + 24), ((this._loadFloat((_34_ + 56))) - _30_))));
        this._storeInt((_34_ + 64), ((this._loadInt((_34_ + 64))) & -4096));
        _30_ = this._storeFloat((_34_ + 24), (this._loadFloat((_34_ + 64))));
        this._storeFloat((_34_ + 20), ((((this._loadFloat((_34_ + 56))) - _30_) - (_30_ = this._loadFloat((_34_ + 60)))) + ((this._loadFloat((_34_ + 52))) * (_30_ + (this._loadFloat((_34_ + 44)))))));
        this._storeFloat((_34_ + 76), ((((((_30_ = this._storeFloat((_34_ + 28), ((float) (this._loadInt((_34_ + 12)))))) * 7.903415E-7f) + (((_33_ = this._loadFloat((_34_ + 20))) + (_32_ = this._loadFloat((_34_ + 24)))) * -3.168997E-5f)) + (_33_ * 0.43432617f)) + (_32_ * 0.43432617f)) + (_30_ * 0.3010292f)));
        return (this._loadFloat((_34_ + 76)));
    }

    public final void log10l(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (log10((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double log1p(double _30_)
    {
        double _31_ = 0.0;
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 128) + 104), (this._storeDouble((_32_ + 112), _30_)));
        this._storeLong((_32_ + 20), (this._loadLong((_32_ + 108))));
        this._storeInt((_32_ + 12), 1);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1071284858 & 4294967295L)) {
                                                break label$8;
                                            }
                                            if (((this._loadInt((_32_ + 20))) >>> 31) == 0) {
                                                break label$7;
                                            }
                                        }
                                        while (false);
                                        label$9:
                                        do {
                                            if (((this._loadInt((_32_ + 20))) & 4294967295L) < (-1074790400 & 4294967295L)) {
                                                break label$9;
                                            }
                                            if ((this._loadDouble((_32_ + 112))) != -1.0) {
                                                break label$5;
                                            }
                                            this._storeDouble((_32_ + 120), ((this._loadDouble((_32_ + 112))) / 0.0));
                                            return (this._loadDouble((_32_ + 120)));
                                        }
                                        while (false);
                                        label$10:
                                        do {
                                            if ((((this._loadInt((_32_ + 20))) << 1) & 4294967295L) > (2034237439 & 4294967295L)) {
                                                break label$10;
                                            }
                                            label$11:
                                            do {
                                                if (((this._loadInt((_32_ + 22))) & 32752) != 0) {
                                                    break label$11;
                                                }
                                                this._storeFloat((_32_ + 8), ((float) (this._loadDouble((_32_ + 112)))));
                                            }
                                            while (false);
                                            this._storeDouble((_32_ + 120), (this._loadDouble((_32_ + 112))));
                                            return (this._loadDouble((_32_ + 120)));
                                        }
                                        while (false);
                                        if (((this._loadInt((_32_ + 20))) & 4294967295L) > (-1076707644 & 4294967295L)) {
                                            break label$6;
                                        }
                                        this._storeInt((_32_ + 12), 0);
                                        this._storeLong((_32_ + 80), 0L);
                                        this._storeDouble((_32_ + 88), (this._loadDouble((_32_ + 112))));
                                        break label$6;
                                    }
                                    while (false);
                                    if (((this._loadInt((_32_ + 20))) & 4294967295L) < (2146435072 & 4294967295L)) {
                                        break label$6;
                                    }
                                    this._storeDouble((_32_ + 120), (this._loadDouble((_32_ + 112))));
                                    return (this._loadDouble((_32_ + 120)));
                                }
                                while (false);
                                if ((this._loadInt((_32_ + 12))) == 0) {
                                    break label$0;
                                }
                                this._storeDouble((_32_ + 104), ((this._loadDouble((_32_ + 112))) + 1.0));
                                if ((this._storeInt((_32_ + 12), (((this._storeInt((_32_ + 16), ((this._storeInt((_32_ + 16), (this._loadInt((_32_ + 108))))) + 614242))) >>> 20) + -1023))) > 53) {
                                    break label$4;
                                }
                                if ((this._loadInt((_32_ + 12))) < 2) {
                                    break label$3;
                                }
                                _30_ = 1.0 - ((this._loadDouble((_32_ + 104))) - (this._loadDouble((_32_ + 112))));
                                break label$2;
                            }
                            while (false);
                            this._storeDouble((_32_ + 120), (((_30_ = this._loadDouble((_32_ + 112))) - _30_) / 0.0));
                            return (this._loadDouble((_32_ + 120)));
                        }
                        while (false);
                        this._storeLong((_32_ + 80), 0L);
                        break label$1;
                    }
                    while (false);
                    _30_ = (this._loadDouble((_32_ + 112))) - ((this._loadDouble((_32_ + 104))) + -1.0);
                }
                while (false);
                this._storeDouble((_32_ + 80), ((this._storeDouble((_32_ + 80), _30_)) / (this._loadDouble((_32_ + 104)))));
            }
            while (false);
            this._storeInt((_32_ + 16), (((this._loadInt((_32_ + 16))) & 1048575) + 1072079006));
            this._storeLong((_32_ + 108), (this._loadLong((_32_ + 16))));
            this._storeDouble((_32_ + 88), ((this._loadDouble((_32_ + 104))) + -1.0));
        }
        while (false);
        this._storeDouble((_32_ + 96), (((_30_ = this._loadDouble((_32_ + 88))) * 0.5) * _30_));
        this._storeDouble((_32_ + 40), ((_30_ = this._storeDouble((_32_ + 48), ((_30_ = this._storeDouble((_32_ + 64), ((_30_ = this._storeDouble((_32_ + 72), ((_30_ = this._loadDouble((_32_ + 88))) / (_30_ + 2.0)))) * _30_))) * _30_))) * ((_30_ * ((_30_ * 0.15313837699209373) + 0.22222198432149784)) + 0.3999999999940942)));
        this._storeDouble((_32_ + 56), ((this._storeDouble((_32_ + 32), ((this._loadDouble((_32_ + 64))) * (((_30_ = this._loadDouble((_32_ + 48))) * ((_30_ * ((_30_ * 0.14798198605116586) + 0.1818357216161805)) + 0.2857142874366239)) + 0.6666666666666735)))) + (this._loadDouble((_32_ + 40)))));
        _30_ = this._storeDouble((_32_ + 24), ((double) (this._loadInt((_32_ + 12)))));
        this._storeDouble((_32_ + 120), ((((((this._loadDouble((_32_ + 72))) * ((_31_ = this._loadDouble((_32_ + 96))) + (this._loadDouble((_32_ + 56))))) + ((_30_ * 1.9082149292705877E-10) + (this._loadDouble((_32_ + 80))))) - _31_) + (this._loadDouble((_32_ + 88)))) + (_30_ * 0.6931471803691238)));
        return (this._loadDouble((_32_ + 120)));
    }

    public final float log1pf(float _30_)
    {
        float _31_ = 0.0f;
        int _32_ = 0;
        this._storeFloat(((_32_ = (this._loadInt((0 + 4))) - 80) + 64), (this._storeFloat((_32_ + 72), _30_)));
        this._storeInt((_32_ + 20), (this._loadInt((_32_ + 64))));
        this._storeInt((_32_ + 12), 1);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            if (((this._loadInt((_32_ + 20))) & 4294967295L) < (1054086096 & 4294967295L)) {
                                                break label$8;
                                            }
                                            if (((this._loadInt((_32_ + 20))) >>> 31) == 0) {
                                                break label$7;
                                            }
                                        }
                                        while (false);
                                        label$9:
                                        do {
                                            if (((this._loadInt((_32_ + 20))) & 4294967295L) < (-1082130432 & 4294967295L)) {
                                                break label$9;
                                            }
                                            if ((this._loadFloat((_32_ + 72))) != -1.0f) {
                                                break label$5;
                                            }
                                            this._storeFloat((_32_ + 76), ((this._loadFloat((_32_ + 72))) / 0.0f));
                                            return (this._loadFloat((_32_ + 76)));
                                        }
                                        while (false);
                                        label$10:
                                        do {
                                            if ((((this._loadInt((_32_ + 20))) << 1) & 4294967295L) > (1728053247 & 4294967295L)) {
                                                break label$10;
                                            }
                                            label$11:
                                            do {
                                                if (((this._loadInt((_32_ + 22))) & 32640) != 0) {
                                                    break label$11;
                                                }
                                                this._storeFloat((_32_ + 8), ((_30_ = this._loadFloat((_32_ + 72))) * _30_));
                                            }
                                            while (false);
                                            this._storeFloat((_32_ + 76), (this._loadFloat((_32_ + 72))));
                                            return (this._loadFloat((_32_ + 76)));
                                        }
                                        while (false);
                                        if (((this._loadInt((_32_ + 20))) & 4294967295L) > (-1097468391 & 4294967295L)) {
                                            break label$6;
                                        }
                                        this._storeInt((_32_ + 52), (this._storeInt((_32_ + 12), 0)));
                                        this._storeFloat((_32_ + 56), (this._loadFloat((_32_ + 72))));
                                        break label$6;
                                    }
                                    while (false);
                                    if (((this._loadInt((_32_ + 20))) & 4294967295L) < (2139095040 & 4294967295L)) {
                                        break label$6;
                                    }
                                    this._storeFloat((_32_ + 76), (this._loadFloat((_32_ + 72))));
                                    return (this._loadFloat((_32_ + 76)));
                                }
                                while (false);
                                if ((this._loadInt((_32_ + 12))) == 0) {
                                    break label$0;
                                }
                                this._storeFloat((_32_ + 64), ((this._loadFloat((_32_ + 72))) + 1.0f));
                                if ((this._storeInt((_32_ + 12), (((this._storeInt((_32_ + 16), ((this._storeInt((_32_ + 16), (this._loadInt((_32_ + 64))))) + 4913933))) >>> 23) + -127))) > 24) {
                                    break label$4;
                                }
                                if ((this._loadInt((_32_ + 12))) < 2) {
                                    break label$3;
                                }
                                _30_ = 1.0f - ((this._loadFloat((_32_ + 64))) - (this._loadFloat((_32_ + 72))));
                                break label$2;
                            }
                            while (false);
                            this._storeFloat((_32_ + 76), (((_30_ = this._loadFloat((_32_ + 72))) - _30_) / 0.0f));
                            return (this._loadFloat((_32_ + 76)));
                        }
                        while (false);
                        this._storeInt((_32_ + 52), 0);
                        break label$1;
                    }
                    while (false);
                    _30_ = (this._loadFloat((_32_ + 72))) - ((this._loadFloat((_32_ + 64))) + -1.0f);
                }
                while (false);
                this._storeFloat((_32_ + 52), ((this._storeFloat((_32_ + 52), _30_)) / (this._loadFloat((_32_ + 64)))));
            }
            while (false);
            this._storeInt((_32_ + 64), (this._storeInt((_32_ + 16), (((this._loadInt((_32_ + 16))) & 8388607) + 1060439283))));
            this._storeFloat((_32_ + 56), ((this._loadFloat((_32_ + 64))) + -1.0f));
        }
        while (false);
        this._storeFloat((_32_ + 32), ((_30_ = this._storeFloat((_32_ + 36), ((_30_ = this._storeFloat((_32_ + 44), ((_30_ = this._storeFloat((_32_ + 48), ((_30_ = this._loadFloat((_32_ + 56))) / (_30_ + 2.0f)))) * _30_))) * _30_))) * ((_30_ * 0.24279079f) + 0.40000972f)));
        this._storeFloat((_32_ + 40), ((this._storeFloat((_32_ + 28), ((this._loadFloat((_32_ + 44))) * (((this._loadFloat((_32_ + 36))) * 0.28498787f) + 0.6666666f)))) + (this._loadFloat((_32_ + 32)))));
        this._storeFloat((_32_ + 60), (((_30_ = this._loadFloat((_32_ + 56))) * 0.5f) * _30_));
        _30_ = this._storeFloat((_32_ + 24), ((float) (this._loadInt((_32_ + 12)))));
        this._storeFloat((_32_ + 76), ((((((this._loadFloat((_32_ + 48))) * ((_31_ = this._loadFloat((_32_ + 60))) + (this._loadFloat((_32_ + 40))))) + ((_30_ * 9.058001E-6f) + (this._loadFloat((_32_ + 52))))) - _31_) + (this._loadFloat((_32_ + 56)))) + (_30_ * 0.6931381f)));
        return (this._loadFloat((_32_ + 76)));
    }

    public final void log1pl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (log1p((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double log2(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 144))) + 120), (this._storeDouble((_32_ + 128), _30_)));
        this._storeLong((_32_ + 12), (this._loadLong((_32_ + 124))));
        this._storeInt((_32_ + 8), 0);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._loadInt((_32_ + 12))) & 4294967295L) < (1048576 & 4294967295L)) {
                            break label$3;
                        }
                        if (((this._loadInt((_32_ + 12))) >>> 31) == 0) {
                            break label$2;
                        }
                    }
                    while (false);
                    label$4:
                    do {
                        label$5:
                        do {
                            if (((this._loadLong((_32_ + 120))) << 1L) == 0L) {
                                break label$5;
                            }
                            if (((this._loadInt((_32_ + 12))) >>> 31) == 0) {
                                break label$4;
                            }
                            this._storeDouble((_32_ + 136), (((_30_ = this._loadDouble((_32_ + 128))) - _30_) / 0.0));
                            break label$0;
                        }
                        while (false);
                        this._storeDouble((_32_ + 136), (-1.0 / ((_30_ = this._loadDouble((_32_ + 128))) * _30_)));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 8))) + -54));
                    this._storeDouble((_32_ + 120), (this._storeDouble((_32_ + 128), ((this._loadDouble((_32_ + 128))) * 1.8014398509481984E16))));
                    this._storeLong((_32_ + 12), (this._loadLong((_32_ + 124))));
                    break label$1;
                }
                while (false);
                label$6:
                do {
                    if (((this._loadInt((_32_ + 12))) & 4294967295L) < (2146435072 & 4294967295L)) {
                        break label$6;
                    }
                    this._storeDouble((_32_ + 136), (this._loadDouble((_32_ + 128))));
                    break label$0;
                }
                while (false);
                if ((this._loadInt((_32_ + 12))) != 1072693248) {
                    break label$1;
                }
                if (((this._loadLong((_32_ + 120))) << 32L) != 0L) {
                    break label$1;
                }
                this._storeLong((_32_ + 136), 0L);
                break label$0;
            }
            while (false);
            _31_ = this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 12))) + 614242));
            this._storeInt((_32_ + 8), (((this._loadInt((_32_ + 8))) + (_31_ >>> 20)) + -1023));
            this._storeInt((_32_ + 12), (((this._loadInt((_32_ + 12))) & 1048575) + 1072079006));
            this._storeLong((_32_ + 124), (this._loadLong((_32_ + 12))));
            this._storeDouble((_32_ + 112), (((_30_ = this._storeDouble((_32_ + 104), ((this._storeDouble((_32_ + 128), (this._loadDouble((_32_ + 120))))) + -1.0))) * 0.5) * _30_));
            this._storeDouble((_32_ + 64), ((_30_ = this._storeDouble((_32_ + 72), ((_30_ = this._storeDouble((_32_ + 88), ((_30_ = this._storeDouble((_32_ + 96), ((_30_ = this._loadDouble((_32_ + 104))) / (_30_ + 2.0)))) * _30_))) * _30_))) * ((_30_ * ((_30_ * 0.15313837699209373) + 0.22222198432149784)) + 0.3999999999940942)));
            this._storeDouble((_32_ + 80), ((this._storeDouble((_32_ + 56), ((this._loadDouble((_32_ + 88))) * (((_30_ = this._loadDouble((_32_ + 72))) * ((_30_ * ((_30_ * 0.14798198605116586) + 0.1818357216161805)) + 0.2857142874366239)) + 0.6666666666666735)))) + (this._loadDouble((_32_ + 64)))));
            this._storeDouble((_32_ + 120), (this._storeDouble((_32_ + 40), ((this._loadDouble((_32_ + 104))) - (this._loadDouble((_32_ + 112)))))));
            this._storeLong((_32_ + 120), ((this._loadLong((_32_ + 120))) & -4294967296L));
            _30_ = this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 120))));
            this._storeDouble((_32_ + 32), ((((this._loadDouble((_32_ + 104))) - _30_) - (_30_ = this._loadDouble((_32_ + 112)))) + ((this._loadDouble((_32_ + 96))) * (_30_ + (this._loadDouble((_32_ + 80)))))));
            this._storeDouble((_32_ + 24), ((this._loadDouble((_32_ + 40))) * 1.4426950407214463));
            this._storeDouble((_32_ + 16), ((((_30_ = this._loadDouble((_32_ + 32))) + (this._loadDouble((_32_ + 40)))) * 1.6751713164886512E-10) + (_30_ * 1.4426950407214463)));
            _30_ = this._storeDouble((_32_ + 72), ((this._storeDouble((_32_ + 48), ((double) (this._loadInt((_32_ + 8)))))) + (this._loadDouble((_32_ + 24)))));
            this._storeDouble((_32_ + 16), ((this._loadDouble((_32_ + 16))) + (((this._loadDouble((_32_ + 48))) - _30_) + (this._loadDouble((_32_ + 24))))));
            this._storeDouble((_32_ + 136), ((this._storeDouble((_32_ + 24), (this._loadDouble((_32_ + 72))))) + (this._loadDouble((_32_ + 16)))));
        }
        while (false);
        _30_ = this._loadDouble((_32_ + 136));
        this._storeInt((0 + 4), (_32_ + 144));
        return _30_;
    }

    public final float log2f(float _30_)
    {
        int _31_ = 0;
        float _32_ = 0.0f;
        int _33_ = 0;
        this._storeFloat(((_33_ = (this._loadInt((0 + 4))) - 64) + 48), (this._storeFloat((_33_ + 56), _30_)));
        this._storeInt((_33_ + 4), (this._loadInt((_33_ + 48))));
        this._storeInt(_33_, 0);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            if (((this._loadInt((_33_ + 4))) & 4294967295L) < (8388608 & 4294967295L)) {
                                break label$4;
                            }
                            if (((this._loadInt((_33_ + 4))) >>> 31) == 0) {
                                break label$3;
                            }
                        }
                        while (false);
                        label$5:
                        do {
                            if (((this._loadInt((_33_ + 4))) << 1) == 0) {
                                break label$5;
                            }
                            if (((this._loadInt((_33_ + 4))) >>> 31) == 0) {
                                break label$2;
                            }
                            this._storeFloat((_33_ + 60), (((_30_ = this._loadFloat((_33_ + 56))) - _30_) / 0.0f));
                            return (this._loadFloat((_33_ + 60)));
                        }
                        while (false);
                        this._storeFloat((_33_ + 60), (-1.0f / ((_30_ = this._loadFloat((_33_ + 56))) * _30_)));
                        return (this._loadFloat((_33_ + 60)));
                    }
                    while (false);
                    if (((this._loadInt((_33_ + 4))) & 4294967295L) < (2139095040 & 4294967295L)) {
                        break label$1;
                    }
                    this._storeFloat((_33_ + 60), (this._loadFloat((_33_ + 56))));
                    return (this._loadFloat((_33_ + 60)));
                }
                while (false);
                this._storeInt(_33_, ((this._loadInt(_33_)) + -25));
                this._storeFloat((_33_ + 48), (this._storeFloat((_33_ + 56), ((this._loadFloat((_33_ + 56))) * 3.3554432E7f))));
                this._storeInt((_33_ + 4), (this._loadInt((_33_ + 48))));
                break label$0;
            }
            while (false);
            if ((this._loadInt((_33_ + 4))) != 1065353216) {
                break label$0;
            }
            this._storeInt((_33_ + 60), 0);
            return (this._loadFloat((_33_ + 60)));
        }
        while (false);
        _31_ = this._storeInt((_33_ + 4), ((this._loadInt((_33_ + 4))) + 4913933));
        this._storeInt(_33_, (((this._loadInt(_33_)) + (_31_ >>> 23)) + -127));
        this._storeInt((_33_ + 48), (this._storeInt((_33_ + 4), (((this._loadInt((_33_ + 4))) & 8388607) + 1060439283))));
        this._storeFloat((_33_ + 20), ((_30_ = this._storeFloat((_33_ + 24), ((_30_ = this._storeFloat((_33_ + 32), ((_30_ = this._storeFloat((_33_ + 36), ((_30_ = this._storeFloat((_33_ + 40), ((this._storeFloat((_33_ + 56), (this._loadFloat((_33_ + 48))))) + -1.0f))) / (_30_ + 2.0f)))) * _30_))) * _30_))) * ((_30_ * 0.24279079f) + 0.40000972f)));
        this._storeFloat((_33_ + 28), ((this._storeFloat((_33_ + 16), ((this._loadFloat((_33_ + 32))) * (((this._loadFloat((_33_ + 24))) * 0.28498787f) + 0.6666666f)))) + (this._loadFloat((_33_ + 20)))));
        _30_ = this._storeFloat((_33_ + 44), (((_30_ = this._loadFloat((_33_ + 40))) * 0.5f) * _30_));
        this._storeFloat((_33_ + 48), (this._storeFloat((_33_ + 12), ((this._loadFloat((_33_ + 40))) - _30_))));
        this._storeInt((_33_ + 48), ((this._loadInt((_33_ + 48))) & -4096));
        _30_ = this._storeFloat((_33_ + 12), (this._loadFloat((_33_ + 48))));
        this._storeFloat((_33_ + 60), ((((((_30_ = this._storeFloat((_33_ + 8), ((((this._loadFloat((_33_ + 40))) - _30_) - (_30_ = this._loadFloat((_33_ + 44)))) + ((this._loadFloat((_33_ + 36))) * (_30_ + (this._loadFloat((_33_ + 28)))))))) + (_32_ = this._loadFloat((_33_ + 12)))) * -1.7605285E-4f) + (_30_ * 1.4428711f)) + (_32_ * 1.4428711f)) + ((float) (this._loadInt(_33_)))));
        return (this._loadFloat((_33_ + 60)));
    }

    public final void log2l(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (log2((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double logb(double _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((__DOUBLE_BITS$2e$155((this._storeDouble((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), _30_)))) & 9223372036854775807L) & 4294967295L) >= (9218868437227405312L & 4294967295L)) {
                        break label$2;
                    }
                    if ((this._loadDouble(_31_)) != 0.0) {
                        break label$1;
                    }
                    this._storeDouble((_31_ + 8), (-1.0 / ((_30_ = this._loadDouble(_31_)) * _30_)));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 8), ((_30_ = this._loadDouble(_31_)) * _30_));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 8), ((double) (ilogb((this._loadDouble(_31_))))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 8));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __FLOAT_BITS$2e$154(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$155(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float logbf(float _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((__FLOAT_BITS$2e$156((this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)))) & 2147483647) & 4294967295L) >= (2139095040 & 4294967295L)) {
                        break label$2;
                    }
                    if ((this._loadFloat((_31_ + 8))) != 0.0f) {
                        break label$1;
                    }
                    this._storeFloat((_31_ + 12), (-1.0f / ((_30_ = this._loadFloat((_31_ + 8))) * _30_)));
                    break label$0;
                }
                while (false);
                this._storeFloat((_31_ + 12), ((_30_ = this._loadFloat((_31_ + 8))) * _30_));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 12), ((float) (ilogbf((this._loadFloat((_31_ + 8)))))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __FLOAT_BITS$2e$156(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$157(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void logbl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this._storeLong(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 96))) + 72), _32_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((__fpclassifyl((this._storeLong((_33_ + 64), _31_)), _32_)) <= 1) {
                        break label$2;
                    }
                    if ((this.__netf2.invoke((this._loadLong((_33_ + 64))), (this._loadLong((_33_ + 72))), 0L, 0L)) != 0) {
                        break label$1;
                    }
                    this.__multf3.invoke((_33_ + 16), (_31_ = this._loadLong((_33_ + 64))), (_32_ = this._loadLong((_33_ + 72))), _31_, _32_);
                    this.__divtf3.invoke(_33_, 0L, -4611967493404098560L, (this._loadLong((_33_ + 16))), (this._loadLong(((_33_ + 16) + 8))));
                    this._storeLong((_33_ + 88), (this._loadLong((_33_ + 8))));
                    this._storeLong((_33_ + 80), (this._loadLong(_33_)));
                    break label$0;
                }
                while (false);
                this.__multf3.invoke((_33_ + 48), (_31_ = this._loadLong((_33_ + 64))), (_32_ = this._loadLong((_33_ + 72))), _31_, _32_);
                this._storeLong((_33_ + 88), (this._loadLong((_33_ + 56))));
                this._storeLong((_33_ + 80), (this._loadLong((_33_ + 48))));
                break label$0;
            }
            while (false);
            this.__floatsitf.invoke((_33_ + 32), (ilogbl((this._loadLong((_33_ + 64))), (this._loadLong((_33_ + 72))))));
            this._storeLong((_33_ + 88), (this._loadLong((_33_ + 40))));
            this._storeLong((_33_ + 80), (this._loadLong((_33_ + 32))));
        }
        while (false);
        this._storeLong(_30_, (this._loadLong((_33_ + 80))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 88))));
        this._storeInt((0 + 4), (_33_ + 96));
        return;
    }

    public final int __FLOAT_BITS$2e$158(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$159(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float logf(float _30_)
    {
        int _31_ = 0;
        float _32_ = 0.0f;
        int _33_ = 0;
        this._storeFloat(((_33_ = (this._loadInt((0 + 4))) - 64) + 48), (this._storeFloat((_33_ + 56), _30_)));
        this._storeInt((_33_ + 8), (this._loadInt((_33_ + 48))));
        this._storeInt((_33_ + 4), 0);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            if (((this._loadInt((_33_ + 8))) & 4294967295L) < (8388608 & 4294967295L)) {
                                break label$4;
                            }
                            if (((this._loadInt((_33_ + 8))) >>> 31) == 0) {
                                break label$3;
                            }
                        }
                        while (false);
                        label$5:
                        do {
                            if (((this._loadInt((_33_ + 8))) << 1) == 0) {
                                break label$5;
                            }
                            if (((this._loadInt((_33_ + 8))) >>> 31) == 0) {
                                break label$2;
                            }
                            this._storeFloat((_33_ + 60), (((_30_ = this._loadFloat((_33_ + 56))) - _30_) / 0.0f));
                            return (this._loadFloat((_33_ + 60)));
                        }
                        while (false);
                        this._storeFloat((_33_ + 60), (-1.0f / ((_30_ = this._loadFloat((_33_ + 56))) * _30_)));
                        return (this._loadFloat((_33_ + 60)));
                    }
                    while (false);
                    if (((this._loadInt((_33_ + 8))) & 4294967295L) < (2139095040 & 4294967295L)) {
                        break label$1;
                    }
                    this._storeFloat((_33_ + 60), (this._loadFloat((_33_ + 56))));
                    return (this._loadFloat((_33_ + 60)));
                }
                while (false);
                this._storeInt((_33_ + 4), ((this._loadInt((_33_ + 4))) + -25));
                this._storeFloat((_33_ + 48), (this._storeFloat((_33_ + 56), ((this._loadFloat((_33_ + 56))) * 3.3554432E7f))));
                this._storeInt((_33_ + 8), (this._loadInt((_33_ + 48))));
                break label$0;
            }
            while (false);
            if ((this._loadInt((_33_ + 8))) != 1065353216) {
                break label$0;
            }
            this._storeInt((_33_ + 60), 0);
            return (this._loadFloat((_33_ + 60)));
        }
        while (false);
        _31_ = this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 4913933));
        this._storeInt((_33_ + 4), (((this._loadInt((_33_ + 4))) + (_31_ >>> 23)) + -127));
        this._storeInt((_33_ + 48), (this._storeInt((_33_ + 8), (((this._loadInt((_33_ + 8))) & 8388607) + 1060439283))));
        this._storeFloat((_33_ + 20), ((_30_ = this._storeFloat((_33_ + 24), ((_30_ = this._storeFloat((_33_ + 32), ((_30_ = this._storeFloat((_33_ + 36), ((_30_ = this._storeFloat((_33_ + 40), ((this._storeFloat((_33_ + 56), (this._loadFloat((_33_ + 48))))) + -1.0f))) / (_30_ + 2.0f)))) * _30_))) * _30_))) * ((_30_ * 0.24279079f) + 0.40000972f)));
        this._storeFloat((_33_ + 28), ((this._storeFloat((_33_ + 16), ((this._loadFloat((_33_ + 32))) * (((this._loadFloat((_33_ + 24))) * 0.28498787f) + 0.6666666f)))) + (this._loadFloat((_33_ + 20)))));
        this._storeFloat((_33_ + 44), (((_30_ = this._loadFloat((_33_ + 40))) * 0.5f) * _30_));
        _30_ = this._storeFloat((_33_ + 12), ((float) (this._loadInt((_33_ + 4)))));
        this._storeFloat((_33_ + 60), ((((((this._loadFloat((_33_ + 36))) * ((_32_ = this._loadFloat((_33_ + 44))) + (this._loadFloat((_33_ + 28))))) + (_30_ * 9.058001E-6f)) - _32_) + (this._loadFloat((_33_ + 40)))) + (_30_ * 0.6931381f)));
        return (this._loadFloat((_33_ + 60)));
    }

    public final void logl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (log((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int nrand48(int _30_)
    {
        int _31_ = 0;
        long _32_ = 0L;
        _32_ = __rand48_step((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 4226);
        this._storeInt((0 + 4), (_31_ + 16));
        return ((int) (_32_ >>> 17L));
    }

    public final int lrand48()
    {
        return (nrand48(4220));
    }

    public final int lrint(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_31_ + 4), (this.fetestexcept.invoke(32)));
        this._storeDouble((_31_ + 8), (Math.round((this._loadDouble((_31_ + 8))))));
        label$0:
        do {
            if ((this._loadInt((_31_ + 4))) != 0) {
                break label$0;
            }
            label$1:
            do {
                if ((this._loadDouble((_31_ + 8))) > 2.147483647E9) {
                    break label$1;
                }
                if (((((_30_ = this._loadDouble((_31_ + 8))) >= -2.147483648E9) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$0;
                }
            }
            while (false);
            this.feclearexcept.invoke(32);
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 8));
        this._storeInt((0 + 4), (_31_ + 16));
        return (_truncateDoubleToSignedInteger(_30_));
    }

    public final int lrintf(float _30_)
    {
        return (_truncateFloatToSignedInteger((Math.round((this._storeFloat((((this._loadInt((0 + 4))) - 16) + 12), _30_))))));
    }

    public final int lrintl(long _30_, long _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        _33_ = lrint((this.__trunctfdf2.invoke((this._storeLong((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), _30_)), (this._storeLong((_32_ + 8), _31_)))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _33_;
    }

    public final int lround(double _30_)
    {
        int _31_ = 0;
        _30_ = round((this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)));
        this._storeInt((0 + 4), (_31_ + 16));
        return (_truncateDoubleToSignedInteger(_30_));
    }

    public final int lroundf(float _30_)
    {
        int _31_ = 0;
        _30_ = roundf((this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)));
        this._storeInt((0 + 4), (_31_ + 16));
        return (_truncateFloatToSignedInteger(_30_));
    }

    public final int lroundl(long _30_, long _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        roundl((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), _30_, _31_);
        this._storeLong((_32_ + 24), _31_);
        this._storeLong((_32_ + 16), _30_);
        _33_ = this.__fixtfsi.invoke((this._loadLong(_32_)), (this._loadLong((_32_ + 8))));
        this._storeInt((0 + 4), (_32_ + 32));
        return _33_;
    }

    public final long lseek(int _30_, long _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeLong((_33_ + 16), _31_);
        this._storeInt((_33_ + 12), _32_);
        _31_ = -1L;
        label$0:
        do {
            if ((__syscall_ret((this.__syscall5.invoke(140, (this._loadInt((_33_ + 28))), ((int) ((_34_ = this._loadLong((_33_ + 16))) >>> 32L)), ((int) _34_), _33_, _32_)))) != 0) {
                break label$0;
            }
            _31_ = this._loadLong(_33_);
        }
        while (false);
        this._storeInt((0 + 4), (_33_ + 32));
        return _31_;
    }

    public final int malloc(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        long _33_ = 0L;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            if ((adjust_size((_32_ + 40))) <= -1) {
                                break label$4;
                            }
                            if (((this._loadInt((_32_ + 40))) & 4294967295L) < (114689 & 4294967295L)) {
                                break label$3;
                            }
                            if ((this._storeInt((_32_ + 20), (this.__mmap.invoke(0, (this._storeInt((_32_ + 24), (((this._loadInt((_32_ + 40))) + 4103) & -4096))), 3, 34, -1, 0L)))) == -1) {
                                break label$2;
                            }
                            _31_ = this._storeInt((_32_ + 36), ((_30_ = this._loadInt((_32_ + 20))) + 8));
                            this._storeInt((_30_ + 12), ((this._loadInt((_32_ + 24))) + -8));
                            this._storeInt(_31_, 8);
                            this._storeInt((_32_ + 44), (_30_ + 16));
                            break label$0;
                        }
                        while (false);
                        this._storeInt((_32_ + 44), 0);
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_32_ + 32), (bin_index_up((this._loadInt((_32_ + 40))))));
                    label$5:
                    do {
                        label$6:
                        do {
                            label$8:
                            do {
                                label$7:
                                while (true) {
                                    _33_ = this._loadLong((_32_ + 32));
                                    if ((this._storeLong((_32_ + 8), ((this._loadLong((0 + 13028))) & (0L - (1L << _33_))))) == 0L) {
                                        break label$6;
                                    }
                                    lock_bin((this._storeInt((_32_ + 28), (first_set((this._loadLong((_32_ + 8))))))));
                                    if ((this._storeInt((_32_ + 36), (this._loadInt((((this._loadInt((_32_ + 28))) << 4) + 13044))))) != (((this._loadInt((_32_ + 28))) << 4) + 13036)) {
                                        break label$8;
                                    }
                                    unlock_bin((this._loadInt((_32_ + 28))));
                                    continue label$7;
                                }
                            }
                            while (false);
                            label$9:
                            do {
                                if ((pretrim((this._loadInt((_32_ + 36))), (this._loadInt((_32_ + 40))), (this._loadInt((_32_ + 32))), (this._loadInt((_32_ + 28))))) != 0) {
                                    break label$9;
                                }
                                unbin((this._loadInt((_32_ + 36))), (this._loadInt((_32_ + 28))));
                            }
                            while (false);
                            unlock_bin((this._loadInt((_32_ + 28))));
                            break label$5;
                        }
                        while (false);
                        if ((this._storeInt((_32_ + 36), (expand_heap((this._loadInt((_32_ + 40))))))) == 0) {
                            break label$1;
                        }
                        if ((alloc_rev((this._loadInt((_32_ + 36))))) == 0) {
                            break label$5;
                        }
                        this._storeInt((_32_ + 4), (this._loadInt((_32_ + 36))));
                        _31_ = this._storeInt(((_31_ = this._storeInt((_32_ + 36), ((_30_ = this._loadInt((_32_ + 36))) - ((this._loadInt(_30_)) & -2)))) + 4), ((this._loadInt(((_30_ = this._loadInt((_32_ + 4))) + 4))) + ((this._loadInt((_31_ + 4))) & -2)));
                        this._storeInt((_30_ + ((this._loadInt((_30_ + 4))) & -2)), _31_);
                    }
                    while (false);
                    trim((this._loadInt((_32_ + 36))), (this._loadInt((_32_ + 40))));
                    this._storeInt((_32_ + 44), ((this._loadInt((_32_ + 36))) + 8));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 44), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 44), 0);
        }
        while (false);
        _30_ = this._loadInt((_32_ + 44));
        this._storeInt((0 + 4), (_32_ + 48));
        return _30_;
    }

    public final int adjust_size(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((this._loadInt((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)))) + -1) & 4294967295L) < (2147479536 & 4294967295L)) {
                        break label$2;
                    }
                    if ((this._loadInt((this._loadInt((_31_ + 8))))) == 0) {
                        break label$1;
                    }
                    this._storeInt((__errno_location()), 12);
                    this._storeInt((_31_ + 12), -1);
                    break label$0;
                }
                while (false);
                this._storeInt((_30_ = this._loadInt((_31_ + 8))), (((this._loadInt(_30_)) + 23) & -16));
                this._storeInt((_31_ + 12), 0);
                break label$0;
            }
            while (false);
            this._storeInt((this._loadInt((_31_ + 8))), 16);
            this._storeInt((_31_ + 12), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int bin_index_up(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if (((this._storeInt(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (((this._storeInt((_31_ + 8), _30_)) >>> 4) + -1))) & 4294967295L) > (32 & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_31_ + 12), (this._loadInt((_31_ + 8))));
            return (this._loadInt((_31_ + 12)));
        }
        while (false);
        this._storeFloat(_31_, ((float) (this._loadInt((_31_ + 8)))));
        this._storeInt((_31_ + 12), ((((this._loadInt(_31_)) + 2097151) >>> 21) + -496));
        return (this._loadInt((_31_ + 12)));
    }

    public final int expand_heap(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), ((this._storeInt((_31_ + 8), _30_)) + 16));
        lock$2e$166(14112);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_31_ + 4), (__expand_heap((_31_ + 8))))) == 0) {
                    break label$1;
                }
                label$2:
                do {
                    if ((this._loadInt((_31_ + 4))) == (this._loadInt((0 + 14120)))) {
                        break label$2;
                    }
                    this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) + -16));
                    this._storeInt((_32_ = (_30_ = this._loadInt((_31_ + 4))) + 8), 1);
                    this._storeInt((_31_ + 4), (_30_ + 16));
                    this._storeInt(_31_, _32_);
                }
                while (false);
                this._storeInt((this._storeInt(_31_, ((this._storeInt((0 + 14120), ((this._loadInt((_31_ + 4))) + (this._loadInt((_31_ + 8)))))) + -8))), ((this._loadInt((_31_ + 8))) | 1));
                _30_ = this._storeInt(((this._loadInt(_31_)) + 4), 1);
                this._storeInt(_31_, ((_32_ = this._loadInt((_31_ + 4))) + -8));
                this._storeInt((_32_ + -4), (_30_ | (this._loadInt((_31_ + 8)))));
                unlock(14112);
                this._storeInt((_31_ + 12), (this._loadInt(_31_)));
                break label$0;
            }
            while (false);
            unlock(14112);
            this._storeInt((_31_ + 12), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int alloc_rev(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        label$0:
        do {
            label$1:
            do {
                label$3:
                do {
                    label$2:
                    while (true) {
                        if (((this._storeInt(_31_, (this._loadInt((this._loadInt((_31_ + 8))))))) & 1) != 0) {
                            break label$1;
                        }
                        lock_bin((this._storeInt((_31_ + 4), (bin_index((this._loadInt(_31_)))))));
                        if ((this._loadInt((this._loadInt((_31_ + 8))))) == (this._loadInt(_31_))) {
                            break label$3;
                        }
                        unlock_bin((this._loadInt((_31_ + 4))));
                        continue label$2;
                    }
                }
                while (false);
                unbin(((_30_ = this._loadInt((_31_ + 8))) - ((this._loadInt(_30_)) & -2)), (this._loadInt((_31_ + 4))));
                unlock_bin((this._loadInt((_31_ + 4))));
                this._storeInt((_31_ + 12), 1);
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 12), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int first_set(long _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = a_ctz_64((this._storeLong(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)));
        this._storeInt((0 + 4), (_31_ + 16));
        return _32_;
    }

    public final void lock_bin(int _30_)
    {
        int _31_ = 0;
        lock$2e$166((((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) << 4) + 13036));
        label$0:
        do {
            if ((this._loadInt((((this._loadInt((_31_ + 12))) << 4) + 13044))) != 0) {
                break label$0;
            }
            this._storeInt(((_30_ = (this._loadInt((_31_ + 12))) << 4) + 13044), (this._storeInt((_30_ + 13048), (_30_ + 13036))));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int pretrim(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_34_ + 20), _31_);
        this._storeInt((_34_ + 16), _32_);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_34_ + 12), _33_)) > 39) {
                    break label$1;
                }
                this._storeInt((_34_ + 28), 0);
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        if ((this._loadInt((_34_ + 12))) >= ((this._loadInt((_34_ + 16))) + 3)) {
                            break label$4;
                        }
                        if ((this._loadInt((_34_ + 12))) == 63) {
                            break label$3;
                        }
                        this._storeInt((_34_ + 28), 0);
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_34_ + 8), ((this._loadInt(((this._loadInt((_34_ + 24))) + 4))) & -2));
                    break label$2;
                }
                while (false);
                if ((((this._storeInt((_34_ + 8), ((this._loadInt(((this._loadInt((_34_ + 24))) + 4))) & -2))) - (this._loadInt((_34_ + 20)))) & 4294967295L) > (114688 & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((_34_ + 28), 0);
                break label$0;
            }
            while (false);
            label$5:
            do {
                if ((bin_index(((this._loadInt((_34_ + 8))) - (this._loadInt((_34_ + 20)))))) == (this._loadInt((_34_ + 12)))) {
                    break label$5;
                }
                this._storeInt((_34_ + 28), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_34_ + 4), ((_33_ = this._loadInt((_34_ + 24))) + ((this._loadInt((_33_ + 4))) & -2)));
            this._storeInt(((_33_ = this._storeInt(_34_, ((this._loadInt((_34_ + 24))) + (this._loadInt((_34_ + 20)))))) + 12), (this._loadInt(((_32_ = this._loadInt((_34_ + 24))) + 12))));
            this._storeInt((_33_ + 8), (this._loadInt((_32_ + 8))));
            this._storeInt(((this._loadInt(((_33_ = this._loadInt(_34_)) + 12))) + 8), _33_);
            this._storeInt(((this._loadInt(((_33_ = this._loadInt(_34_)) + 8))) + 12), _33_);
            this._storeInt((this._loadInt(_34_)), ((this._loadInt((_34_ + 20))) | 1));
            this._storeInt(((this._loadInt(_34_)) + 4), ((this._loadInt((_34_ + 8))) - (this._loadInt((_34_ + 20)))));
            this._storeInt((this._loadInt((_34_ + 4))), ((this._loadInt((_34_ + 8))) - (this._loadInt((_34_ + 20)))));
            this._storeInt(((this._loadInt((_34_ + 24))) + 4), ((this._loadInt((_34_ + 20))) | 1));
            this._storeInt((_34_ + 28), 1);
        }
        while (false);
        _33_ = this._loadInt((_34_ + 28));
        this._storeInt((0 + 4), (_34_ + 32));
        return _33_;
    }

    public final void unbin(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        label$0:
        do {
            if ((this._loadInt(((_31_ = this._loadInt((_32_ + 12))) + 12))) != (this._loadInt((_31_ + 8)))) {
                break label$0;
            }
            a_and_64(13028, (Long.rotateLeft(-2L, ((int) (this._loadLong((_32_ + 8)))))));
        }
        while (false);
        this._storeInt(((this._loadInt(((_31_ = this._loadInt((_32_ + 12))) + 12))) + 8), (this._loadInt((_31_ + 8))));
        this._storeInt(((this._loadInt((_31_ + 8))) + 12), (this._loadInt((_31_ + 12))));
        this._storeInt(((_31_ = this._loadInt((_32_ + 12))) + 4), ((this._loadInt((_31_ + 4))) | 1));
        this._storeInt((_31_ = (_31_ = this._loadInt((_32_ + 12))) + ((this._loadInt((_31_ + 4))) & -2)), ((this._loadInt(_31_)) | 1));
        this._storeInt((0 + 4), (_32_ + 16));
        return;
    }

    public final void unlock_bin(int _30_)
    {
        int _31_ = 0;
        unlock((((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) << 4) + 13036));
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final void trim(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_32_ + 24), _31_);
        _31_ = this._storeInt((_32_ + 20), ((this._loadInt(((this._loadInt((_32_ + 28))) + 4))) & -2));
        label$0:
        do {
            if (((this._loadInt((_32_ + 24))) & 4294967295L) >= ((_31_ + -16) & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_32_ + 16), ((_31_ = this._loadInt((_32_ + 28))) + ((this._loadInt((_31_ + 4))) & -2)));
            this._storeInt((_31_ = this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 28))) + (this._loadInt((_32_ + 24)))))), ((_30_ = this._loadInt((_32_ + 24))) | 1));
            _31_ = this._storeInt((_31_ + 4), (((this._loadInt((_32_ + 20))) - _30_) | 1));
            this._storeInt((this._loadInt((_32_ + 16))), _31_);
            this._storeInt(((this._loadInt((_32_ + 28))) + 4), ((this._loadInt((_32_ + 24))) | 1));
            free(((this._loadInt((_32_ + 12))) + 8));
        }
        while (false);
        this._storeInt((0 + 4), (_32_ + 32));
        return;
    }

    public final void free(int _30_)
    {
        int _31_ = 0;
        long _32_ = 0L;
        int _33_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 56), ((this._storeInt((_31_ + 60), _30_)) + -8));
        this._storeInt((_31_ + 36), 0);
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_31_ + 60))) == 0) {
                    break label$1;
                }
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._loadInt(((this._loadInt((_31_ + 56))) + 4))) & 1) == 0) {
                            break label$3;
                        }
                        this._storeInt((_31_ + 48), (this._storeInt((_31_ + 44), ((this._loadInt(((this._loadInt((_31_ + 56))) + 4))) & -2))));
                        if ((this._loadInt((this._storeInt((_31_ + 52), ((_30_ = this._loadInt((_31_ + 56))) + ((this._loadInt((_30_ + 4))) & -2)))))) != (this._loadInt(((this._loadInt((_31_ + 56))) + 4)))) {
                            break label$0;
                        }
                        label$4:
                        while (true) {
                            label$6:
                            do {
                                if ((((this._loadInt((this._loadInt((_31_ + 56))))) & (this._loadInt(((this._loadInt((_31_ + 52))) + 4)))) & 1) == 0) {
                                    break label$6;
                                }
                                _30_ = this._storeInt(((this._loadInt((_31_ + 56))) + 4), ((this._loadInt((_31_ + 48))) | 1));
                                this._storeInt((this._loadInt((_31_ + 52))), _30_);
                                lock_bin((this._storeInt((_31_ + 32), (bin_index((this._loadInt((_31_ + 48))))))));
                                lock$2e$166(14060);
                                if ((((this._loadInt((this._loadInt((_31_ + 56))))) & (this._loadInt(((this._loadInt((_31_ + 52))) + 4)))) & 1) != 0) {
                                    break label$2;
                                }
                                unlock(14060);
                                unlock_bin((this._loadInt((_31_ + 32))));
                            }
                            while (false);
                            label$7:
                            do {
                                if ((alloc_rev((this._loadInt((_31_ + 56))))) == 0) {
                                    break label$7;
                                }
                                this._storeInt((_31_ + 48), ((this._storeInt((_31_ + 40), ((this._loadInt(((this._storeInt((_31_ + 56), ((_30_ = this._loadInt((_31_ + 56))) - ((this._loadInt(_30_)) & -2)))) + 4))) & -2))) + (this._loadInt((_31_ + 48)))));
                                if ((((this._loadInt((_31_ + 44))) + (this._loadInt((_31_ + 40)))) & 4294967295L) < (163841 & 4294967295L)) {
                                    break label$7;
                                }
                                if (((((this._loadInt((_31_ + 44))) + (_30_ = this._loadInt((_31_ + 40)))) ^ _30_) & 4294967295L) <= (_30_ & 4294967295L)) {
                                    break label$7;
                                }
                                this._storeInt((_31_ + 36), 1);
                            }
                            while (false);
                            if ((alloc_fwd((this._loadInt((_31_ + 52))))) == 0) {
                                continue label$4;
                            }
                            this._storeInt((_31_ + 48), ((this._storeInt((_31_ + 40), ((this._loadInt(((this._loadInt((_31_ + 52))) + 4))) & -2))) + (this._loadInt((_31_ + 48)))));
                            label$8:
                            do {
                                if ((((this._loadInt((_31_ + 44))) + (this._loadInt((_31_ + 40)))) & 4294967295L) < (163841 & 4294967295L)) {
                                    break label$8;
                                }
                                if (((((this._loadInt((_31_ + 44))) + (_30_ = this._loadInt((_31_ + 40)))) ^ _30_) & 4294967295L) <= (_30_ & 4294967295L)) {
                                    break label$8;
                                }
                                this._storeInt((_31_ + 36), 1);
                            }
                            while (false);
                            this._storeInt((_31_ + 52), ((_30_ = this._loadInt((_31_ + 52))) + ((this._loadInt((_30_ + 4))) & -2)));
                            continue label$4;
                        }
                    }
                    while (false);
                    _30_ = this._storeInt((_31_ + 28), (this._loadInt((this._loadInt((_31_ + 56))))));
                    this._storeInt((_31_ + 24), ((this._loadInt((_31_ + 56))) - _30_));
                    this._storeInt((_31_ + 20), (((this._loadInt(((this._loadInt((_31_ + 56))) + 4))) & -2) + (this._loadInt((_31_ + 28)))));
                    if (((this._loadInt((_31_ + 28))) & 1) != 0) {
                        break label$0;
                    }
                    this.__munmap.invoke((this._loadInt((_31_ + 24))), (this._loadInt((_31_ + 20))));
                    break label$1;
                }
                while (false);
                _32_ = this._loadLong((_31_ + 32));
                label$9:
                do {
                    if (((this._loadLong((0 + 13028))) & (1L << _32_)) != 0L) {
                        break label$9;
                    }
                    a_or_64(13028, (1L << (this._loadLong((_31_ + 32)))));
                }
                while (false);
                _30_ = this._storeInt(((this._loadInt((_31_ + 56))) + 4), (this._loadInt((_31_ + 48))));
                this._storeInt((this._loadInt((_31_ + 52))), _30_);
                unlock(14060);
                this._storeInt(((_30_ = this._loadInt((_31_ + 56))) + 8), ((_33_ = (this._loadInt((_31_ + 32))) << 4) + 13036));
                this._storeInt((_30_ + 12), (this._loadInt((_33_ + 13048))));
                this._storeInt(((this._loadInt(((_30_ = this._loadInt((_31_ + 56))) + 8))) + 12), _30_);
                this._storeInt(((this._loadInt(((_30_ = this._loadInt((_31_ + 56))) + 12))) + 8), _30_);
                label$10:
                do {
                    if ((this._loadInt((_31_ + 36))) == 0) {
                        break label$10;
                    }
                    this._storeInt((_31_ + 16), (((this._loadInt((_31_ + 56))) + 4111) & -4096));
                    _30_ = this._storeInt((_31_ + 12), (((this._loadInt((_31_ + 52))) + -16) & -4096));
                    this.__madvise.invoke((_33_ = this._loadInt((_31_ + 16))), (_30_ - _33_), 4);
                }
                while (false);
                unlock_bin((this._loadInt((_31_ + 32))));
            }
            while (false);
            this._storeInt((0 + 4), (_31_ + 64));
            return;
        }
        while (false);
        this.abort.invoke();
        throw (new UnreachableException());
    }

    public final int bin_index(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if (((this._storeInt(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (((this._storeInt((_31_ + 8), _30_)) >>> 4) + -1))) & 4294967295L) > (32 & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_31_ + 12), (this._loadInt((_31_ + 8))));
            return (this._loadInt((_31_ + 12)));
        }
        while (false);
        label$1:
        do {
            if (((this._loadInt((_31_ + 8))) & 4294967295L) < (7169 & 4294967295L)) {
                break label$1;
            }
            this._storeInt((_31_ + 12), 63);
            return (this._loadInt((_31_ + 12)));
        }
        while (false);
        this._storeFloat(_31_, ((float) (this._loadInt((_31_ + 8)))));
        this._storeInt((_31_ + 12), (((this._loadInt(_31_)) >>> 21) + -496));
        return (this._loadInt((_31_ + 12)));
    }

    public final void lock$2e$166(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        label$0:
        do {
            if ((this._loadInt((0 + 12952))) == 0) {
                break label$0;
            }
            label$2:
            do {
                label$1:
                while (true) {
                    if ((a_swap((this._loadInt((_31_ + 12))), 1)) == 0) {
                        break label$2;
                    }
                    this.__wait.invoke((_30_ = this._loadInt((_31_ + 12))), (_30_ + 4), 1, 1);
                    continue label$1;
                }
            }
            while (false);
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final void unlock(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._loadInt((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))) == 0) {
                break label$0;
            }
            a_store((this._loadInt((_31_ + 12))), 0);
            if ((this._loadInt(((this._loadInt((_31_ + 12))) + 4))) == 0) {
                break label$0;
            }
            __wake((this._loadInt((_31_ + 12))), 1, 1);
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int alloc_fwd(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        label$0:
        do {
            label$1:
            do {
                label$3:
                do {
                    label$2:
                    while (true) {
                        if (((this._storeInt(_31_, (this._loadInt(((this._loadInt((_31_ + 8))) + 4))))) & 1) != 0) {
                            break label$1;
                        }
                        lock_bin((this._storeInt((_31_ + 4), (bin_index((this._loadInt(_31_)))))));
                        if ((this._loadInt(((this._loadInt((_31_ + 8))) + 4))) == (this._loadInt(_31_))) {
                            break label$3;
                        }
                        unlock_bin((this._loadInt((_31_ + 4))));
                        continue label$2;
                    }
                }
                while (false);
                unbin((this._loadInt((_31_ + 8))), (this._loadInt((_31_ + 4))));
                unlock_bin((this._loadInt((_31_ + 4))));
                this._storeInt((_31_ + 12), 1);
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 12), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final void a_or_64(int _30_, long _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeLong((_32_ + 8), (this._storeLong((_32_ + 16), _31_)));
        label$0:
        do {
            if ((this._loadInt((_32_ + 8))) == 0) {
                break label$0;
            }
            a_or((this._loadInt((_32_ + 28))), (this._loadInt((_32_ + 8))));
        }
        while (false);
        label$1:
        do {
            if ((this._loadInt((_32_ + 12))) == 0) {
                break label$1;
            }
            a_or(((this._loadInt((_32_ + 28))) + 4), (this._loadInt((_32_ + 12))));
        }
        while (false);
        this._storeInt((0 + 4), (_32_ + 32));
        return;
    }

    public final void a_or(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        a_fetch_or((this._loadInt((_32_ + 12))), _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return;
    }

    public final int a_fetch_or(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        label$0$end:
        do {
            label$0:
            while (true) {
                this._storeInt((_32_ + 4), (this._loadInt((this._loadInt((_32_ + 12))))));
                if ((_a_cas((this._loadInt((_32_ + 12))), (_31_ = this._loadInt((_32_ + 4))), (_31_ | (this._loadInt((_32_ + 8)))))) != (this._loadInt((_32_ + 4)))) {
                    continue label$0;
                }
                break label$0$end;
            }
        }
        while (false);
        _31_ = this._loadInt((_32_ + 4));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int _a_cas(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        label$0:
        do {
            if ((this._storeInt(_33_, (this._loadInt((this._loadInt((_33_ + 12))))))) != (this._loadInt((_33_ + 8)))) {
                break label$0;
            }
            this._storeInt((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 4))));
        }
        while (false);
        return (this._loadInt(_33_));
    }

    public final void a_store(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        __syscall_ret((this.__syscall0.invoke(375)));
        this._storeInt((this._loadInt((_32_ + 12))), (this._loadInt((_32_ + 8))));
        __syscall_ret((this.__syscall0.invoke(375)));
        this._storeInt((0 + 4), (_32_ + 16));
        return;
    }

    public final void __wake(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        label$0:
        do {
            if ((this._storeInt((_33_ + 4), _32_)) == 0) {
                break label$0;
            }
            this._storeInt((_33_ + 4), 128);
        }
        while (false);
        label$1:
        do {
            if ((this._loadInt((_33_ + 8))) > -1) {
                break label$1;
            }
            this._storeInt((_33_ + 8), 2147483647);
        }
        while (false);
        label$2:
        do {
            if ((this.__syscall3.invoke(240, (this._loadInt((_33_ + 12))), ((this._loadInt((_33_ + 4))) | 1), (this._loadInt((_33_ + 8))))) != -38) {
                break label$2;
            }
            this.__syscall3.invoke(240, (this._loadInt((_33_ + 12))), 1, (this._loadInt((_33_ + 8))));
        }
        while (false);
        this._storeInt((0 + 4), (_33_ + 16));
        return;
    }

    public final int a_swap(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        label$0$end:
        do {
            label$0:
            while (true) {
                this._storeInt((_32_ + 4), (this._loadInt((this._loadInt((_32_ + 12))))));
                if ((_a_cas((this._loadInt((_32_ + 12))), (this._loadInt((_32_ + 4))), (this._loadInt((_32_ + 8))))) != (this._loadInt((_32_ + 4)))) {
                    continue label$0;
                }
                break label$0$end;
            }
        }
        while (false);
        _31_ = this._loadInt((_32_ + 4));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final void a_and_64(int _30_, long _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeLong((_32_ + 8), (this._storeLong((_32_ + 16), _31_)));
        label$0:
        do {
            if ((this._loadInt((_32_ + 8))) == -1) {
                break label$0;
            }
            a_and((this._loadInt((_32_ + 28))), (this._loadInt((_32_ + 8))));
        }
        while (false);
        label$1:
        do {
            if ((this._loadInt((_32_ + 12))) == -1) {
                break label$1;
            }
            a_and(((this._loadInt((_32_ + 28))) + 4), (this._loadInt((_32_ + 12))));
        }
        while (false);
        this._storeInt((0 + 4), (_32_ + 32));
        return;
    }

    public final void a_and(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        a_fetch_and((this._loadInt((_32_ + 12))), _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return;
    }

    public final int a_fetch_and(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        label$0$end:
        do {
            label$0:
            while (true) {
                this._storeInt((_32_ + 4), (this._loadInt((this._loadInt((_32_ + 12))))));
                if ((_a_cas((this._loadInt((_32_ + 12))), (_31_ = this._loadInt((_32_ + 4))), (_31_ & (this._loadInt((_32_ + 8)))))) != (this._loadInt((_32_ + 4)))) {
                    continue label$0;
                }
                break label$0$end;
            }
        }
        while (false);
        _31_ = this._loadInt((_32_ + 4));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int a_ctz_64(long _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeLong(((_32_ = (this._loadInt((0 + 4))) - 32) + 16), _30_);
        label$0:
        do {
            if ((this._storeInt((_32_ + 12), (this._loadInt((_32_ + 16))))) == 0) {
                break label$0;
            }
            this._storeInt((_32_ + 28), (this._loadInt((((((_31_ = this._loadInt((_32_ + 12))) & (0 - _31_)) * 124511785) >>> 27) + 14080))));
            return (this._loadInt((_32_ + 28)));
        }
        while (false);
        this._storeInt((_32_ + 28), ((this._loadInt((((((_31_ = this._storeInt((_32_ + 12), (this._loadInt((_32_ + 20))))) & (0 - _31_)) * 124511785) >>> 27) + 14080))) + 32));
        return (this._loadInt((_32_ + 28)));
    }

    public final int __malloc0(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), (malloc((this._storeInt((_31_ + 12), _30_)))))) == 0) {
                break label$0;
            }
            if (((this._loadInt(((this._loadInt((_31_ + 8))) + -4))) & 1) == 0) {
                break label$0;
            }
            this._storeInt((_31_ + 12), (((this._loadInt((_31_ + 12))) + 3) >>> 2));
            this._storeInt((_31_ + 4), (this._loadInt((_31_ + 8))));
            label$2:
            do {
                label$1:
                while (true) {
                    if ((this._loadInt((_31_ + 12))) == 0) {
                        break label$2;
                    }
                    label$3:
                    do {
                        if ((this._loadInt((this._loadInt((_31_ + 4))))) == 0) {
                            break label$3;
                        }
                        this._storeInt((this._loadInt((_31_ + 4))), 0);
                    }
                    while (false);
                    this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 12))) + -1));
                    this._storeInt((_31_ + 4), ((this._loadInt((_31_ + 4))) + 4));
                    continue label$1;
                }
            }
            while (false);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 8));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int realloc(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_32_ + 36), _31_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            if ((this._loadInt((_32_ + 40))) == 0) {
                                                break label$8;
                                            }
                                            if ((adjust_size((_32_ + 36))) <= -1) {
                                                break label$7;
                                            }
                                            this._storeInt((_32_ + 32), ((_31_ = this._loadInt((_32_ + 40))) + -8));
                                            this._storeInt((_32_ + 20), (this._storeInt((_32_ + 24), ((this._loadInt((_31_ + -4))) & -2))));
                                            if (((this._loadInt(((this._loadInt((_32_ + 32))) + 4))) & 1) == 0) {
                                                break label$6;
                                            }
                                            if ((this._loadInt((this._storeInt((_32_ + 28), ((_31_ = this._loadInt((_32_ + 32))) + ((this._loadInt((_31_ + 4))) & -2)))))) != (this._loadInt(((this._loadInt((_32_ + 32))) + 4)))) {
                                                break label$0;
                                            }
                                            label$9:
                                            do {
                                                if (((this._loadInt((_32_ + 36))) & 4294967295L) <= ((this._loadInt((_32_ + 20))) & 4294967295L)) {
                                                    break label$9;
                                                }
                                                if ((alloc_fwd((this._loadInt((_32_ + 28))))) == 0) {
                                                    break label$9;
                                                }
                                                this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + ((this._loadInt(((this._loadInt((_32_ + 28))) + 4))) & -2)));
                                                this._storeInt((_32_ + 28), ((_31_ = this._loadInt((_32_ + 28))) + ((this._loadInt((_31_ + 4))) & -2)));
                                            }
                                            while (false);
                                            _30_ = this._storeInt(((this._loadInt((_32_ + 32))) + 4), ((_31_ = this._loadInt((_32_ + 20))) | 1));
                                            this._storeInt((this._loadInt((_32_ + 28))), _30_);
                                            if (((this._loadInt((_32_ + 36))) & 4294967295L) > (_31_ & 4294967295L)) {
                                                break label$5;
                                            }
                                            trim((this._loadInt((_32_ + 32))), (this._loadInt((_32_ + 36))));
                                            this._storeInt((_32_ + 44), ((this._loadInt((_32_ + 32))) + 8));
                                            break label$1;
                                        }
                                        while (false);
                                        this._storeInt((_32_ + 44), (malloc((this._loadInt((_32_ + 36))))));
                                        break label$1;
                                    }
                                    while (false);
                                    this._storeInt((_32_ + 44), 0);
                                    break label$1;
                                }
                                while (false);
                                _31_ = this._storeInt((_32_ + 12), (this._loadInt((this._loadInt((_32_ + 32))))));
                                this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 32))) - _31_));
                                this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 24))) + (this._loadInt((_32_ + 12)))));
                                this._storeInt(_32_, ((this._loadInt((_32_ + 36))) + (this._loadInt((_32_ + 12)))));
                                if (((this._loadInt((_32_ + 12))) & 1) != 0) {
                                    break label$0;
                                }
                                label$10:
                                do {
                                    if (((this._loadInt(_32_)) & 4294967295L) > (4095 & 4294967295L)) {
                                        break label$10;
                                    }
                                    if ((this._storeInt((_32_ + 16), (malloc((this._loadInt((_32_ + 36))))))) == 0) {
                                        break label$10;
                                    }
                                    memcpy((this._loadInt((_32_ + 16))), (this._loadInt((_32_ + 40))), ((this._loadInt((_32_ + 36))) + -8));
                                    free((this._loadInt((_32_ + 40))));
                                    this._storeInt((_32_ + 44), (this._loadInt((_32_ + 16))));
                                    break label$1;
                                }
                                while (false);
                                if ((this._storeInt(_32_, (((this._loadInt(_32_)) + 4095) & -4096))) != (this._loadInt((_32_ + 4)))) {
                                    break label$4;
                                }
                                this._storeInt((_32_ + 44), (this._loadInt((_32_ + 40))));
                                break label$1;
                            }
                            while (false);
                            if ((this._storeInt((_32_ + 16), (malloc(((this._loadInt((_32_ + 36))) + -8))))) == 0) {
                                break label$3;
                            }
                            memcpy((this._loadInt((_32_ + 16))), (this._loadInt((_32_ + 40))), ((this._loadInt((_32_ + 24))) + -8));
                            free(((this._loadInt((_32_ + 32))) + 8));
                            this._storeInt((_32_ + 44), (this._loadInt((_32_ + 16))));
                            break label$1;
                        }
                        while (false);
                        _31_ = 0;
                        if ((this._storeInt((_32_ + 8), (this.__mremap.invoke((this._loadInt((_32_ + 8))), (this._loadInt((_32_ + 4))), (this._loadInt(_32_)), 1, 0)))) == -1) {
                            break label$2;
                        }
                        this._storeInt(((_31_ = this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 8))) + (this._loadInt((_32_ + 12)))))) + 4), ((this._loadInt(_32_)) - (this._loadInt((_32_ + 12)))));
                        this._storeInt((_32_ + 44), (_31_ + 8));
                        break label$1;
                    }
                    while (false);
                    this._storeInt((_32_ + 44), 0);
                    break label$1;
                }
                while (false);
                label$11:
                do {
                    if (((this._loadInt(_32_)) & 4294967295L) >= ((this._loadInt((_32_ + 4))) & 4294967295L)) {
                        break label$11;
                    }
                    _31_ = this._loadInt((_32_ + 40));
                }
                while (false);
                this._storeInt((_32_ + 44), _31_);
            }
            while (false);
            _31_ = this._loadInt((_32_ + 44));
            this._storeInt((0 + 4), (_32_ + 48));
            return _31_;
        }
        while (false);
        this.abort.invoke();
        throw (new UnreachableException());
    }

    public final int malloc_usable_size(int _30_)
    {
        return (((this._loadInt(((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + -4))) & -2) + -8);
    }

    public final int __memalign(int _30_, int _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        label$0:
        do {
            label$1:
            do {
                if (((_31_ = this._loadInt((_32_ + 24))) & (0 - _31_)) == _31_) {
                    break label$1;
                }
                this._storeInt((__errno_location()), 22);
                this._storeInt((_32_ + 28), 0);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_32_ + 20))) & 4294967295L) <= (((this._loadInt((_32_ + 24))) ^ -1) & 4294967295L)) {
                    break label$2;
                }
                this._storeInt((__errno_location()), 12);
                this._storeInt((_32_ + 28), 0);
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    label$5:
                    do {
                        label$6:
                        do {
                            label$7:
                            do {
                                if (((this._loadInt((_32_ + 24))) & 4294967295L) > (16 & 4294967295L)) {
                                    break label$7;
                                }
                                if ((this._storeInt((_32_ + 16), (malloc((this._loadInt((_32_ + 20))))))) == 0) {
                                    break label$6;
                                }
                                this._storeInt((_32_ + 28), (this._loadInt((_32_ + 16))));
                                break label$0;
                            }
                            while (false);
                            if ((this._storeInt((_32_ + 16), (malloc((((this._loadInt((_32_ + 20))) + (this._loadInt((_32_ + 24)))) + -1))))) == 0) {
                                break label$5;
                            }
                            if ((this._storeInt((_32_ + 12), ((((this._loadInt((_32_ + 16))) + (_31_ = this._loadInt((_32_ + 24)))) + -1) & (0 - _31_)))) == (this._loadInt((_32_ + 16)))) {
                                break label$4;
                            }
                            this._storeInt((_32_ + 4), (this._loadInt(((this._loadInt((_32_ + 16))) + -4))));
                            if (((this._loadInt((_32_ + 4))) & 7) == 0) {
                                break label$3;
                            }
                            _31_ = this._storeInt(_32_, (this._loadInt(((this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 16))) + ((this._loadInt((_32_ + 4))) & -8)))) + -8))));
                            this._storeInt(((_30_ = this._loadInt((_32_ + 16))) + -4), (((this._loadInt((_32_ + 4))) & 7) | (_30_ = (_33_ = this._loadInt((_32_ + 12))) - _30_)));
                            this._storeInt((_33_ + -8), ((_31_ & 7) | _30_));
                            this._storeInt(((_31_ = this._loadInt((_32_ + 12))) + -4), (((this._loadInt((_32_ + 4))) & 7) | ((this._loadInt((_32_ + 8))) - _31_)));
                            this._storeInt(((_31_ = this._loadInt((_32_ + 8))) + -8), (((this._loadInt(_32_)) & 7) | (_31_ - (this._loadInt((_32_ + 12))))));
                            free((this._loadInt((_32_ + 16))));
                            this._storeInt((_32_ + 28), (this._loadInt((_32_ + 12))));
                            break label$0;
                        }
                        while (false);
                        this._storeInt((_32_ + 28), 0);
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_32_ + 28), 0);
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 28), (this._loadInt((_32_ + 16))));
                break label$0;
            }
            while (false);
            this._storeInt(((_31_ = this._loadInt((_32_ + 12))) + -8), ((this._loadInt(((_30_ = this._loadInt((_32_ + 16))) + -8))) + (_33_ = _31_ - _30_)));
            this._storeInt((_31_ + -4), ((this._loadInt((_30_ + -4))) - _33_));
            this._storeInt((_32_ + 28), (this._loadInt((_32_ + 12))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int memccpy(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = (this._loadInt((0 + 4))) - 48) + 40), _30_);
        this._storeInt((_34_ + 36), _31_);
        this._storeInt((_34_ + 32), _32_);
        this._storeInt((_34_ + 28), _33_);
        this._storeInt((_34_ + 24), (this._loadInt((_34_ + 40))));
        this._storeInt((_34_ + 20), (this._loadInt((_34_ + 36))));
        this._storeInt((_34_ + 32), (this._loadInt((_34_ + 32))));
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_34_ + 20))) & 3) != ((this._loadInt((_34_ + 24))) & 3)) {
                    break label$1;
                }
                label$3:
                do {
                    label$2:
                    while (true) {
                        _33_ = 0;
                        label$4:
                        do {
                            if (((this._loadInt((_34_ + 20))) & 3) == 0) {
                                break label$4;
                            }
                            if ((this._loadInt((_34_ + 28))) == 0) {
                                break label$4;
                            }
                            _33_ = ((this._storeInt((this._loadInt((_34_ + 24))), (this._loadInt((this._loadInt((_34_ + 20))))))) != (this._loadInt((_34_ + 32)))) ? 1 : 0;
                        }
                        while (false);
                        if (_33_ == 0) {
                            break label$3;
                        }
                        this._storeInt((_34_ + 28), ((this._loadInt((_34_ + 28))) + -1));
                        this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 20))) + 1));
                        this._storeInt((_34_ + 24), ((this._loadInt((_34_ + 24))) + 1));
                        continue label$2;
                    }
                }
                while (false);
                if (((this._loadInt((_34_ + 20))) & 3) != 0) {
                    break label$0;
                }
                this._storeInt((_34_ + 12), ((this._loadInt((_34_ + 32))) * 16843009));
                this._storeInt((_34_ + 16), (this._loadInt((_34_ + 24))));
                this._storeInt((_34_ + 8), (this._loadInt((_34_ + 20))));
                label$6:
                do {
                    label$5:
                    while (true) {
                        _33_ = 0;
                        label$7:
                        do {
                            if (((this._loadInt((_34_ + 28))) & 4294967295L) < (4 & 4294967295L)) {
                                break label$7;
                            }
                            _33_ = (((((_33_ = (this._loadInt((this._loadInt((_34_ + 8))))) ^ (this._loadInt((_34_ + 12)))) + -16843009) & (_33_ ^ -1)) & -2139062144) == 0) ? 1 : 0;
                        }
                        while (false);
                        if (_33_ == 0) {
                            break label$6;
                        }
                        this._storeInt((this._loadInt((_34_ + 16))), (this._loadInt((this._loadInt((_34_ + 8))))));
                        this._storeInt((_34_ + 28), ((this._loadInt((_34_ + 28))) + -4));
                        this._storeInt((_34_ + 8), ((this._loadInt((_34_ + 8))) + 4));
                        this._storeInt((_34_ + 16), ((this._loadInt((_34_ + 16))) + 4));
                        continue label$5;
                    }
                }
                while (false);
                this._storeInt((_34_ + 24), (this._loadInt((_34_ + 16))));
                this._storeInt((_34_ + 20), (this._loadInt((_34_ + 8))));
            }
            while (false);
            label$9:
            do {
                label$8:
                while (true) {
                    _33_ = 0;
                    label$10:
                    do {
                        if ((this._loadInt((_34_ + 28))) == 0) {
                            break label$10;
                        }
                        _33_ = ((this._storeInt((this._loadInt((_34_ + 24))), (this._loadInt((this._loadInt((_34_ + 20))))))) != (this._loadInt((_34_ + 32)))) ? 1 : 0;
                    }
                    while (false);
                    if (_33_ == 0) {
                        break label$9;
                    }
                    this._storeInt((_34_ + 28), ((this._loadInt((_34_ + 28))) + -1));
                    this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 20))) + 1));
                    this._storeInt((_34_ + 24), ((this._loadInt((_34_ + 24))) + 1));
                    continue label$8;
                }
            }
            while (false);
        }
        while (false);
        label$11:
        do {
            if ((this._loadInt((this._loadInt((_34_ + 20))))) != (this._loadInt((_34_ + 32)))) {
                break label$11;
            }
            this._storeInt((_34_ + 44), ((this._loadInt((_34_ + 24))) + 1));
            return (this._loadInt((_34_ + 44)));
        }
        while (false);
        this._storeInt((_34_ + 44), 0);
        return (this._loadInt((_34_ + 44)));
    }

    public final int memchr(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 28), _30_);
        this._storeInt((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        this._storeInt((_33_ + 16), (this._loadInt((_33_ + 28))));
        this._storeInt((_33_ + 24), (this._loadInt((_33_ + 24))));
        label$1:
        do {
            label$0:
            while (true) {
                _32_ = 0;
                label$2:
                do {
                    if (((this._loadInt((_33_ + 16))) & 3) == 0) {
                        break label$2;
                    }
                    if ((this._loadInt((_33_ + 20))) == 0) {
                        break label$2;
                    }
                    _32_ = ((this._loadInt((this._loadInt((_33_ + 16))))) != (this._loadInt((_33_ + 24)))) ? 1 : 0;
                }
                while (false);
                if (_32_ == 0) {
                    break label$1;
                }
                this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + 1));
                this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                continue label$0;
            }
        }
        while (false);
        label$3:
        do {
            if ((this._loadInt((_33_ + 20))) == 0) {
                break label$3;
            }
            if ((this._loadInt((this._loadInt((_33_ + 16))))) == (this._loadInt((_33_ + 24)))) {
                break label$3;
            }
            this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 24))) * 16843009));
            this._storeInt((_33_ + 12), (this._loadInt((_33_ + 16))));
            label$5:
            do {
                label$4:
                while (true) {
                    _32_ = 0;
                    label$6:
                    do {
                        if (((this._loadInt((_33_ + 20))) & 4294967295L) < (4 & 4294967295L)) {
                            break label$6;
                        }
                        _32_ = (((((_32_ = (this._loadInt((this._loadInt((_33_ + 12))))) ^ (this._loadInt((_33_ + 8)))) + -16843009) & (_32_ ^ -1)) & -2139062144) == 0) ? 1 : 0;
                    }
                    while (false);
                    if (_32_ == 0) {
                        break label$5;
                    }
                    this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 4));
                    this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -4));
                    continue label$4;
                }
            }
            while (false);
            this._storeInt((_33_ + 16), (this._loadInt((_33_ + 12))));
            label$8:
            do {
                label$7:
                while (true) {
                    _32_ = 0;
                    label$9:
                    do {
                        if ((this._loadInt((_33_ + 20))) == 0) {
                            break label$9;
                        }
                        _32_ = ((this._loadInt((this._loadInt((_33_ + 16))))) != (this._loadInt((_33_ + 24)))) ? 1 : 0;
                    }
                    while (false);
                    if (_32_ == 0) {
                        break label$8;
                    }
                    this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + 1));
                    this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                    continue label$7;
                }
            }
            while (false);
        }
        while (false);
        _32_ = 0;
        label$10:
        do {
            if ((this._loadInt((_33_ + 20))) == 0) {
                break label$10;
            }
            _32_ = this._loadInt((_33_ + 16));
        }
        while (false);
        return _32_;
    }

    public final int memcmp(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 28), _30_);
        this._storeInt((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        this._storeInt((_33_ + 16), (this._loadInt((_33_ + 28))));
        this._storeInt((_33_ + 12), (this._loadInt((_33_ + 24))));
        label$1:
        do {
            label$0:
            while (true) {
                _32_ = 0;
                label$2:
                do {
                    if ((this._loadInt((_33_ + 20))) == 0) {
                        break label$2;
                    }
                    _32_ = ((this._loadInt((this._loadInt((_33_ + 16))))) == (this._loadInt((this._loadInt((_33_ + 12)))))) ? 1 : 0;
                }
                while (false);
                if (_32_ == 0) {
                    break label$1;
                }
                this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + 1));
                this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 1));
                continue label$0;
            }
        }
        while (false);
        _32_ = 0;
        label$3:
        do {
            if ((this._loadInt((_33_ + 20))) == 0) {
                break label$3;
            }
            _32_ = (this._loadInt((this._loadInt((_33_ + 16))))) - (this._loadInt((this._loadInt((_33_ + 12)))));
        }
        while (false);
        return _32_;
    }

    public final int memcpy(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this._storeInt((_33_ + 12), (this._loadInt((_33_ + 24))));
        this._storeInt((_33_ + 8), (this._loadInt((_33_ + 20))));
        label$1:
        do {
            label$0:
            while (true) {
                _32_ = 0;
                label$2:
                do {
                    if (((this._loadInt((_33_ + 8))) & 3) == 0) {
                        break label$2;
                    }
                    _32_ = ((this._loadInt((_33_ + 16))) != 0) ? 1 : 0;
                }
                while (false);
                if (_32_ == 0) {
                    break label$1;
                }
                this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                _32_ = this._loadInt(_32_);
                this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                this._storeInt(_31_, _32_);
                this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -1));
                continue label$0;
            }
        }
        while (false);
        label$3:
        do {
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        if (((this._loadInt((_33_ + 12))) & 3) == 0) {
                            break label$6;
                        }
                        if (((this._loadInt((_33_ + 16))) & 4294967295L) < (32 & 4294967295L)) {
                            break label$3;
                        }
                        if ((_32_ = (this._loadInt((_33_ + 12))) & 3) == 3) {
                            break label$5;
                        }
                        if (_32_ == 2) {
                            break label$4;
                        }
                        if (_32_ != 1) {
                            break label$3;
                        }
                        this._storeInt((_33_ + 4), (this._loadInt((this._loadInt((_33_ + 8))))));
                        this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                        _32_ = this._loadInt(_32_);
                        this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                        this._storeInt(_31_, _32_);
                        this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                        _32_ = this._loadInt(_32_);
                        this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                        this._storeInt(_31_, _32_);
                        this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                        _32_ = this._loadInt(_32_);
                        this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                        this._storeInt(_31_, _32_);
                        this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -3));
                        label$7:
                        while (true) {
                            if (((this._loadInt((_33_ + 16))) & 4294967295L) < (17 & 4294967295L)) {
                                break label$3;
                            }
                            _32_ = this._storeInt(_33_, (this._loadInt(((this._loadInt((_33_ + 8))) + 1))));
                            this._storeInt((this._loadInt((_33_ + 12))), ((this._loadInt((_33_ + 7))) | (_32_ << 8)));
                            _32_ = this._storeInt((_33_ + 4), (this._loadInt(((this._loadInt((_33_ + 8))) + 5))));
                            this._storeInt(((this._loadInt((_33_ + 12))) + 4), ((this._loadInt((_33_ + 3))) | (_32_ << 8)));
                            _32_ = this._storeInt(_33_, (this._loadInt(((this._loadInt((_33_ + 8))) + 9))));
                            this._storeInt(((this._loadInt((_33_ + 12))) + 8), ((this._loadInt((_33_ + 7))) | (_32_ << 8)));
                            _32_ = this._storeInt((_33_ + 4), (this._loadInt(((this._loadInt((_33_ + 8))) + 13))));
                            this._storeInt(((this._loadInt((_33_ + 12))) + 12), ((this._loadInt((_33_ + 3))) | (_32_ << 8)));
                            this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 16));
                            this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 16));
                            this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -16));
                            continue label$7;
                        }
                    }
                    while (false);
                    label$10:
                    do {
                        label$9:
                        while (true) {
                            if (((this._loadInt((_33_ + 16))) & 4294967295L) < (16 & 4294967295L)) {
                                break label$10;
                            }
                            this._storeInt((this._loadInt((_33_ + 12))), (this._loadInt((this._loadInt((_33_ + 8))))));
                            this._storeInt(((_32_ = this._loadInt((_33_ + 12))) + 4), (this._loadInt(((_31_ = this._loadInt((_33_ + 8))) + 4))));
                            this._storeInt((_32_ + 8), (this._loadInt((_31_ + 8))));
                            this._storeInt(((this._loadInt((_33_ + 12))) + 12), (this._loadInt(((this._loadInt((_33_ + 8))) + 12))));
                            this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 16));
                            this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 16));
                            this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -16));
                            continue label$9;
                        }
                    }
                    while (false);
                    label$11:
                    do {
                        if (((this._loadInt((_33_ + 16))) & 8) == 0) {
                            break label$11;
                        }
                        this._storeInt((this._loadInt((_33_ + 12))), (this._loadInt((this._loadInt((_33_ + 8))))));
                        this._storeInt(((_32_ = this._loadInt((_33_ + 12))) + 4), (this._loadInt(((this._loadInt((_33_ + 8))) + 4))));
                        this._storeInt((_33_ + 12), (_32_ + 8));
                        this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 8));
                    }
                    while (false);
                    label$12:
                    do {
                        if (((this._loadInt((_33_ + 16))) & 4) == 0) {
                            break label$12;
                        }
                        this._storeInt((this._loadInt((_33_ + 12))), (this._loadInt((this._loadInt((_33_ + 8))))));
                        this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 4));
                        this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 4));
                    }
                    while (false);
                    label$13:
                    do {
                        if (((this._loadInt((_33_ + 16))) & 2) == 0) {
                            break label$13;
                        }
                        this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                        _32_ = this._loadInt(_32_);
                        this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                        this._storeInt(_31_, _32_);
                        this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                        _32_ = this._loadInt(_32_);
                        this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                        this._storeInt(_31_, _32_);
                    }
                    while (false);
                    label$14:
                    do {
                        if (((this._loadInt((_33_ + 16))) & 1) == 0) {
                            break label$14;
                        }
                        this._storeInt((this._loadInt((_33_ + 12))), (this._loadInt((this._loadInt((_33_ + 8))))));
                    }
                    while (false);
                    this._storeInt((_33_ + 28), (this._loadInt((_33_ + 24))));
                    return (this._loadInt((_33_ + 28)));
                }
                while (false);
                this._storeInt((_33_ + 4), (this._loadInt((this._loadInt((_33_ + 8))))));
                this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                _32_ = this._loadInt(_32_);
                this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                this._storeInt(_31_, _32_);
                this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -1));
                label$15:
                while (true) {
                    if (((this._loadInt((_33_ + 16))) & 4294967295L) < (19 & 4294967295L)) {
                        break label$3;
                    }
                    _32_ = this._storeInt(_33_, (this._loadInt(((this._loadInt((_33_ + 8))) + 3))));
                    this._storeInt((this._loadInt((_33_ + 12))), (((this._loadInt((_33_ + 4))) >>> 8) | (_32_ << 24)));
                    _32_ = this._storeInt((_33_ + 4), (this._loadInt(((this._loadInt((_33_ + 8))) + 7))));
                    this._storeInt(((this._loadInt((_33_ + 12))) + 4), (((this._loadInt(_33_)) >>> 8) | (_32_ << 24)));
                    _32_ = this._storeInt(_33_, (this._loadInt(((this._loadInt((_33_ + 8))) + 11))));
                    this._storeInt(((this._loadInt((_33_ + 12))) + 8), (((this._loadInt((_33_ + 4))) >>> 8) | (_32_ << 24)));
                    _32_ = this._storeInt((_33_ + 4), (this._loadInt(((this._loadInt((_33_ + 8))) + 15))));
                    this._storeInt(((this._loadInt((_33_ + 12))) + 12), (((this._loadInt(_33_)) >>> 8) | (_32_ << 24)));
                    this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 16));
                    this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 16));
                    this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -16));
                    continue label$15;
                }
            }
            while (false);
            this._storeInt((_33_ + 4), (this._loadInt((this._loadInt((_33_ + 8))))));
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -2));
            label$18:
            do {
                label$17:
                while (true) {
                    if (((this._loadInt((_33_ + 16))) & 4294967295L) < (18 & 4294967295L)) {
                        break label$18;
                    }
                    _32_ = this._storeInt(_33_, (this._loadInt(((this._loadInt((_33_ + 8))) + 2))));
                    this._storeInt((this._loadInt((_33_ + 12))), ((this._loadInt((_33_ + 6))) | (_32_ << 16)));
                    _32_ = this._storeInt((_33_ + 4), (this._loadInt(((this._loadInt((_33_ + 8))) + 6))));
                    this._storeInt(((this._loadInt((_33_ + 12))) + 4), ((this._loadInt((_33_ + 2))) | (_32_ << 16)));
                    _32_ = this._storeInt(_33_, (this._loadInt(((this._loadInt((_33_ + 8))) + 10))));
                    this._storeInt(((this._loadInt((_33_ + 12))) + 8), ((this._loadInt((_33_ + 6))) | (_32_ << 16)));
                    _32_ = this._storeInt((_33_ + 4), (this._loadInt(((this._loadInt((_33_ + 8))) + 14))));
                    this._storeInt(((this._loadInt((_33_ + 12))) + 12), ((this._loadInt((_33_ + 2))) | (_32_ << 16)));
                    this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 16));
                    this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 16));
                    this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -16));
                    continue label$17;
                }
            }
            while (false);
        }
        while (false);
        label$19:
        do {
            if (((this._loadInt((_33_ + 16))) & 16) == 0) {
                break label$19;
            }
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
        }
        while (false);
        label$20:
        do {
            if (((this._loadInt((_33_ + 16))) & 8) == 0) {
                break label$20;
            }
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
        }
        while (false);
        label$21:
        do {
            if (((this._loadInt((_33_ + 16))) & 4) == 0) {
                break label$21;
            }
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
        }
        while (false);
        label$22:
        do {
            if (((this._loadInt((_33_ + 16))) & 2) == 0) {
                break label$22;
            }
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
            _32_ = this._loadInt(_32_);
            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
            this._storeInt(_31_, _32_);
        }
        while (false);
        label$23:
        do {
            if (((this._loadInt((_33_ + 16))) & 1) == 0) {
                break label$23;
            }
            this._storeInt((this._loadInt((_33_ + 12))), (this._loadInt((this._loadInt((_33_ + 8))))));
        }
        while (false);
        this._storeInt((_33_ + 28), (this._loadInt((_33_ + 24))));
        return (this._loadInt((_33_ + 28)));
    }

    public final int memmem(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_34_ + 20), _31_);
        this._storeInt((_34_ + 16), _32_);
        this._storeInt((_34_ + 12), _33_);
        this._storeInt((_34_ + 8), (this._loadInt((_34_ + 24))));
        this._storeInt((_34_ + 4), (this._loadInt((_34_ + 16))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._loadInt((_34_ + 12))) == 0) {
                        break label$2;
                    }
                    if (((this._loadInt((_34_ + 20))) & 4294967295L) >= ((this._loadInt((_34_ + 12))) & 4294967295L)) {
                        break label$1;
                    }
                    this._storeInt((_34_ + 28), 0);
                    break label$0;
                }
                while (false);
                this._storeInt((_34_ + 28), (this._loadInt((_34_ + 8))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if ((this._storeInt((_34_ + 8), (memchr((this._loadInt((_34_ + 24))), (this._loadInt((this._loadInt((_34_ + 4))))), (this._loadInt((_34_ + 20))))))) == 0) {
                        break label$4;
                    }
                    if ((this._loadInt((_34_ + 12))) != 1) {
                        break label$3;
                    }
                }
                while (false);
                this._storeInt((_34_ + 28), (this._loadInt((_34_ + 8))));
                break label$0;
            }
            while (false);
            this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 20))) - ((this._loadInt((_34_ + 8))) - (this._loadInt((_34_ + 24))))));
            label$5:
            do {
                if ((this._loadInt((_34_ + 12))) != 2) {
                    break label$5;
                }
                this._storeInt((_34_ + 28), (twobyte_memmem((this._loadInt((_34_ + 8))), (this._loadInt((_34_ + 20))), (this._loadInt((_34_ + 4))))));
                break label$0;
            }
            while (false);
            label$6:
            do {
                if ((this._loadInt((_34_ + 12))) != 3) {
                    break label$6;
                }
                this._storeInt((_34_ + 28), (threebyte_memmem((this._loadInt((_34_ + 8))), (this._loadInt((_34_ + 20))), (this._loadInt((_34_ + 4))))));
                break label$0;
            }
            while (false);
            label$7:
            do {
                if ((this._loadInt((_34_ + 12))) != 4) {
                    break label$7;
                }
                this._storeInt((_34_ + 28), (fourbyte_memmem((this._loadInt((_34_ + 8))), (this._loadInt((_34_ + 20))), (this._loadInt((_34_ + 4))))));
                break label$0;
            }
            while (false);
            this._storeInt((_34_ + 28), (twoway_memmem((_33_ = this._loadInt((_34_ + 8))), (_33_ + (this._loadInt((_34_ + 20)))), (this._loadInt((_34_ + 4))), (this._loadInt((_34_ + 12))))));
        }
        while (false);
        _33_ = this._loadInt((_34_ + 28));
        this._storeInt((0 + 4), (_34_ + 32));
        return _33_;
    }

    public final int twobyte_memmem(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 14), (((this._loadInt((_32_ = this._storeInt((_33_ + 16), _32_)))) << 8) | (this._loadInt((_32_ + 1)))));
        this._storeInt((_33_ + 12), (((this._loadInt((_32_ = this._loadInt((_33_ + 24))))) << 8) | (this._loadInt((_32_ + 1)))));
        this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + 1));
        this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
        label$0:
        do {
            label$2:
            do {
                label$1:
                while (true) {
                    if ((this._loadInt((_33_ + 20))) == 0) {
                        break label$0;
                    }
                    if ((this._loadInt((_33_ + 12))) == (this._loadInt((_33_ + 14)))) {
                        break label$2;
                    }
                    this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                    _32_ = this._loadInt((_33_ + 12));
                    this._storeInt((_33_ + 24), ((_31_ = this._loadInt((_33_ + 24))) + 1));
                    this._storeInt((_33_ + 12), ((_32_ << 8) | (this._loadInt((_31_ + 1)))));
                    continue label$1;
                }
            }
            while (false);
            this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 24))) + -1));
            return (this._loadInt((_33_ + 28)));
        }
        while (false);
        this._storeInt((_33_ + 28), 0);
        return (this._loadInt((_33_ + 28)));
    }

    public final int threebyte_memmem(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 12), ((((this._loadInt((_32_ = this._storeInt((_33_ + 16), _32_)))) << 24) | ((this._loadInt((_32_ + 1))) << 16)) | ((this._loadInt((_32_ + 2))) << 8)));
        this._storeInt((_33_ + 8), ((((this._loadInt((_32_ = this._loadInt((_33_ + 24))))) << 24) | ((this._loadInt((_32_ + 1))) << 16)) | ((this._loadInt((_32_ + 2))) << 8)));
        this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + 2));
        this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -2));
        label$0:
        do {
            label$2:
            do {
                label$1:
                while (true) {
                    if ((this._loadInt((_33_ + 20))) == 0) {
                        break label$0;
                    }
                    if ((this._loadInt((_33_ + 8))) == (this._loadInt((_33_ + 12)))) {
                        break label$2;
                    }
                    this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                    _32_ = this._loadInt((_33_ + 8));
                    this._storeInt((_33_ + 24), ((_31_ = this._loadInt((_33_ + 24))) + 1));
                    this._storeInt((_33_ + 8), ((_32_ | (this._loadInt((_31_ + 1)))) << 8));
                    continue label$1;
                }
            }
            while (false);
            this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 24))) + -2));
            return (this._loadInt((_33_ + 28)));
        }
        while (false);
        this._storeInt((_33_ + 28), 0);
        return (this._loadInt((_33_ + 28)));
    }

    public final int fourbyte_memmem(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 12), (((((this._loadInt((_32_ = this._storeInt((_33_ + 16), _32_)))) << 24) | ((this._loadInt((_32_ + 1))) << 16)) | ((this._loadInt((_32_ + 2))) << 8)) | (this._loadInt((_32_ + 3)))));
        this._storeInt((_33_ + 8), (((((this._loadInt((_32_ = this._loadInt((_33_ + 24))))) << 24) | ((this._loadInt((_32_ + 1))) << 16)) | ((this._loadInt((_32_ + 2))) << 8)) | (this._loadInt((_32_ + 3)))));
        this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + 3));
        this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -3));
        label$0:
        do {
            label$2:
            do {
                label$1:
                while (true) {
                    if ((this._loadInt((_33_ + 20))) == 0) {
                        break label$0;
                    }
                    if ((this._loadInt((_33_ + 8))) == (this._loadInt((_33_ + 12)))) {
                        break label$2;
                    }
                    this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                    _32_ = this._loadInt((_33_ + 8));
                    this._storeInt((_33_ + 24), ((_31_ = this._loadInt((_33_ + 24))) + 1));
                    this._storeInt((_33_ + 8), ((_32_ << 8) | (this._loadInt((_31_ + 1)))));
                    continue label$1;
                }
            }
            while (false);
            this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 24))) + -3));
            return (this._loadInt((_33_ + 28)));
        }
        while (false);
        this._storeInt((_33_ + 28), 0);
        return (this._loadInt((_33_ + 28)));
    }

    public final int twoway_memmem(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeLong(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 1120))) + 1040), (this._storeLong((_34_ + 1048), 0L)));
        this._storeInt((_34_ + 1112), _30_);
        this._storeInt((_34_ + 1108), _31_);
        this._storeInt((_34_ + 1104), _32_);
        this._storeInt((_34_ + 1100), _33_);
        this._storeInt((_34_ + 1096), (this._storeInt((_34_ + 1028), (this._storeInt((_34_ + 1032), (this._storeInt((_34_ + 1036), (this._storeInt((_34_ + 1024), 0)))))))));
        label$1:
        do {
            label$0:
            while (true) {
                if (((this._loadInt((_34_ + 1096))) & 4294967295L) >= ((this._loadInt((_34_ + 1100))) & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_31_ = (_34_ + 1024) + (((_33_ = this._loadInt(((this._loadInt((_34_ + 1104))) + (_32_ = this._loadInt((_34_ + 1096)))))) >>> 3) & 28)), ((this._loadInt(_31_)) | (1 << (_33_ & 31))));
                this._storeInt((_34_ + (_33_ << 2)), (_32_ + 1));
                this._storeInt((_34_ + 1096), ((this._loadInt((_34_ + 1096))) + 1));
                continue label$0;
            }
        }
        while (false);
        this._storeInt((_34_ + 1092), -1);
        this._storeInt((_34_ + 1088), 0);
        _31_ = this._storeInt((_34_ + 1084), (this._storeInt((_34_ + 1080), 1)));
        label$3:
        do {
            label$2:
            while (true) {
                if ((((this._loadInt((_34_ + 1088))) + (this._loadInt((_34_ + 1084)))) & 4294967295L) >= ((this._loadInt((_34_ + 1100))) & 4294967295L)) {
                    break label$3;
                }
                label$4:
                do {
                    label$5:
                    do {
                        if ((this._loadInt(((_33_ = this._loadInt((_34_ + 1104))) + ((this._loadInt((_34_ + 1092))) + (_32_ = this._loadInt((_34_ + 1084))))))) != (this._loadInt((_33_ + ((this._loadInt((_34_ + 1088))) + _32_))))) {
                            break label$5;
                        }
                        if ((this._loadInt((_34_ + 1084))) != (this._loadInt((_34_ + 1080)))) {
                            break label$4;
                        }
                        this._storeInt((_34_ + 1088), ((this._loadInt((_34_ + 1088))) + (this._loadInt((_34_ + 1080)))));
                        this._storeInt((_34_ + 1084), _31_);
                        continue label$2;
                    }
                    while (false);
                    label$6:
                    do {
                        if ((this._loadInt(((_33_ = this._loadInt((_34_ + 1104))) + ((this._loadInt((_34_ + 1092))) + (_32_ = this._loadInt((_34_ + 1084))))))) > (this._loadInt((_33_ + ((this._loadInt((_34_ + 1088))) + _32_))))) {
                            break label$6;
                        }
                        this._storeInt((_34_ + 1088), ((_33_ = this._loadInt((_34_ + 1088))) + _31_));
                        this._storeInt((_34_ + 1092), _33_);
                        this._storeInt((_34_ + 1084), (this._storeInt((_34_ + 1080), _31_)));
                        continue label$2;
                    }
                    while (false);
                    this._storeInt((_34_ + 1088), ((this._loadInt((_34_ + 1088))) + (this._loadInt((_34_ + 1084)))));
                    this._storeInt((_34_ + 1084), _31_);
                    this._storeInt((_34_ + 1080), ((this._loadInt((_34_ + 1088))) - (this._loadInt((_34_ + 1092)))));
                    continue label$2;
                }
                while (false);
                this._storeInt((_34_ + 1084), ((this._loadInt((_34_ + 1084))) + _31_));
                continue label$2;
            }
        }
        while (false);
        this._storeInt((_34_ + 1076), (this._loadInt((_34_ + 1092))));
        this._storeInt((_34_ + 1072), (this._loadInt((_34_ + 1080))));
        this._storeInt((_34_ + 1092), -1);
        this._storeInt((_34_ + 1088), 0);
        _31_ = this._storeInt((_34_ + 1084), (this._storeInt((_34_ + 1080), 1)));
        label$8:
        do {
            label$7:
            while (true) {
                if ((((this._loadInt((_34_ + 1088))) + (this._loadInt((_34_ + 1084)))) & 4294967295L) >= ((this._loadInt((_34_ + 1100))) & 4294967295L)) {
                    break label$8;
                }
                label$9:
                do {
                    label$10:
                    do {
                        if ((this._loadInt(((_33_ = this._loadInt((_34_ + 1104))) + ((this._loadInt((_34_ + 1092))) + (_32_ = this._loadInt((_34_ + 1084))))))) != (this._loadInt((_33_ + ((this._loadInt((_34_ + 1088))) + _32_))))) {
                            break label$10;
                        }
                        if ((this._loadInt((_34_ + 1084))) != (this._loadInt((_34_ + 1080)))) {
                            break label$9;
                        }
                        this._storeInt((_34_ + 1088), ((this._loadInt((_34_ + 1088))) + (this._loadInt((_34_ + 1080)))));
                        this._storeInt((_34_ + 1084), _31_);
                        continue label$7;
                    }
                    while (false);
                    label$11:
                    do {
                        if ((this._loadInt(((_33_ = this._loadInt((_34_ + 1104))) + ((this._loadInt((_34_ + 1092))) + (_32_ = this._loadInt((_34_ + 1084))))))) < (this._loadInt((_33_ + ((this._loadInt((_34_ + 1088))) + _32_))))) {
                            break label$11;
                        }
                        this._storeInt((_34_ + 1088), ((_33_ = this._loadInt((_34_ + 1088))) + _31_));
                        this._storeInt((_34_ + 1092), _33_);
                        this._storeInt((_34_ + 1084), (this._storeInt((_34_ + 1080), _31_)));
                        continue label$7;
                    }
                    while (false);
                    this._storeInt((_34_ + 1088), ((this._loadInt((_34_ + 1088))) + (this._loadInt((_34_ + 1084)))));
                    this._storeInt((_34_ + 1084), _31_);
                    this._storeInt((_34_ + 1080), ((this._loadInt((_34_ + 1088))) - (this._loadInt((_34_ + 1092)))));
                    continue label$7;
                }
                while (false);
                this._storeInt((_34_ + 1084), ((this._loadInt((_34_ + 1084))) + _31_));
                continue label$7;
            }
        }
        while (false);
        label$12:
        do {
            label$13:
            do {
                if ((((this._loadInt((_34_ + 1092))) + 1) & 4294967295L) <= (((this._loadInt((_34_ + 1076))) + 1) & 4294967295L)) {
                    break label$13;
                }
                this._storeInt((_34_ + 1076), (this._loadInt((_34_ + 1092))));
                break label$12;
            }
            while (false);
            this._storeInt((_34_ + 1080), (this._loadInt((_34_ + 1072))));
        }
        while (false);
        label$14:
        do {
            label$15:
            do {
                label$16:
                do {
                    label$17:
                    do {
                        if ((memcmp((_33_ = this._loadInt((_34_ + 1104))), (_33_ + (this._loadInt((_34_ + 1080)))), ((this._loadInt((_34_ + 1076))) + 1))) == 0) {
                            break label$17;
                        }
                        this._storeInt((_34_ + 1064), 0);
                        if (((_33_ = this._loadInt((_34_ + 1076))) & 4294967295L) <= ((((this._loadInt((_34_ + 1100))) - _33_) + -1) & 4294967295L)) {
                            break label$16;
                        }
                        _33_ = this._loadInt((_34_ + 1076));
                        break label$15;
                    }
                    while (false);
                    this._storeInt((_34_ + 1064), ((this._loadInt((_34_ + 1100))) - (this._loadInt((_34_ + 1080)))));
                    break label$14;
                }
                while (false);
                _33_ = ((this._loadInt((_34_ + 1100))) - (this._loadInt((_34_ + 1076)))) + -1;
            }
            while (false);
            this._storeInt((_34_ + 1080), (_33_ + 1));
        }
        while (false);
        _32_ = this._storeInt((_34_ + 1068), 0);
        label$18:
        do {
            label$19:
            do {
                label$21:
                do {
                    label$20:
                    while (true) {
                        if ((((this._loadInt((_34_ + 1108))) - (this._loadInt((_34_ + 1112)))) & 4294967295L) < ((this._loadInt((_34_ + 1100))) & 4294967295L)) {
                            break label$21;
                        }
                        label$22:
                        do {
                            label$23:
                            do {
                                if (((this._loadInt(((_34_ + 1024) + (((_33_ = this._loadInt((((this._loadInt((_34_ + 1112))) + (this._loadInt((_34_ + 1100)))) + -1))) >>> 3) & 28)))) & (1 << (_33_ & 31))) == 0) {
                                    break label$23;
                                }
                                if ((this._storeInt((_34_ + 1084), ((_33_ = this._loadInt((_34_ + 1100))) - (this._loadInt((_34_ + ((this._loadInt(((_33_ + (this._loadInt((_34_ + 1112)))) + -1))) << 2))))))) == 0) {
                                    break label$22;
                                }
                                label$24:
                                do {
                                    if ((this._loadInt((_34_ + 1064))) == 0) {
                                        break label$24;
                                    }
                                    if ((this._loadInt((_34_ + 1068))) == 0) {
                                        break label$24;
                                    }
                                    if (((this._loadInt((_34_ + 1084))) & 4294967295L) >= ((this._loadInt((_34_ + 1080))) & 4294967295L)) {
                                        break label$24;
                                    }
                                    this._storeInt((_34_ + 1084), ((this._loadInt((_34_ + 1100))) - (this._loadInt((_34_ + 1080)))));
                                }
                                while (false);
                                this._storeInt((_34_ + 1112), ((this._loadInt((_34_ + 1112))) + (this._loadInt((_34_ + 1084)))));
                                this._storeInt((_34_ + 1068), _32_);
                                continue label$20;
                            }
                            while (false);
                            this._storeInt((_34_ + 1112), ((this._loadInt((_34_ + 1112))) + (this._loadInt((_34_ + 1100)))));
                            this._storeInt((_34_ + 1068), _32_);
                            continue label$20;
                        }
                        while (false);
                        label$25:
                        do {
                            label$26:
                            do {
                                if ((((this._loadInt((_34_ + 1076))) + 1) & 4294967295L) <= ((this._loadInt((_34_ + 1068))) & 4294967295L)) {
                                    break label$26;
                                }
                                _33_ = (this._loadInt((_34_ + 1076))) + 1;
                                break label$25;
                            }
                            while (false);
                            _33_ = this._loadInt((_34_ + 1068));
                        }
                        while (false);
                        this._storeInt((_34_ + 1084), _33_);
                        label$28:
                        do {
                            label$27:
                            while (true) {
                                _33_ = 0;
                                label$29:
                                do {
                                    if (((this._loadInt((_34_ + 1084))) & 4294967295L) >= ((this._loadInt((_34_ + 1100))) & 4294967295L)) {
                                        break label$29;
                                    }
                                    _33_ = ((this._loadInt(((this._loadInt((_34_ + 1104))) + (_33_ = this._loadInt((_34_ + 1084)))))) == (this._loadInt(((this._loadInt((_34_ + 1112))) + _33_)))) ? 1 : 0;
                                }
                                while (false);
                                if (_33_ == 0) {
                                    break label$28;
                                }
                                this._storeInt((_34_ + 1084), ((this._loadInt((_34_ + 1084))) + 1));
                                continue label$27;
                            }
                        }
                        while (false);
                        label$30:
                        do {
                            if (((this._loadInt((_34_ + 1084))) & 4294967295L) >= ((this._loadInt((_34_ + 1100))) & 4294967295L)) {
                                break label$30;
                            }
                            this._storeInt((_34_ + 1112), ((this._loadInt((_34_ + 1112))) + ((this._loadInt((_34_ + 1084))) - (this._loadInt((_34_ + 1076))))));
                            this._storeInt((_34_ + 1068), _32_);
                            continue label$20;
                        }
                        while (false);
                        this._storeInt((_34_ + 1084), ((this._loadInt((_34_ + 1076))) + 1));
                        label$32:
                        do {
                            label$31:
                            while (true) {
                                _33_ = 0;
                                label$33:
                                do {
                                    if (((this._loadInt((_34_ + 1084))) & 4294967295L) <= ((this._loadInt((_34_ + 1068))) & 4294967295L)) {
                                        break label$33;
                                    }
                                    _33_ = ((this._loadInt(((this._loadInt((_34_ + 1104))) + (_33_ = (this._loadInt((_34_ + 1084))) + -1)))) == (this._loadInt(((this._loadInt((_34_ + 1112))) + _33_)))) ? 1 : 0;
                                }
                                while (false);
                                if (_33_ == 0) {
                                    break label$32;
                                }
                                this._storeInt((_34_ + 1084), ((this._loadInt((_34_ + 1084))) + -1));
                                continue label$31;
                            }
                        }
                        while (false);
                        if (((this._loadInt((_34_ + 1084))) & 4294967295L) <= ((this._loadInt((_34_ + 1068))) & 4294967295L)) {
                            break label$19;
                        }
                        this._storeInt((_34_ + 1112), ((this._loadInt((_34_ + 1112))) + (this._loadInt((_34_ + 1080)))));
                        this._storeInt((_34_ + 1068), (this._loadInt((_34_ + 1064))));
                        continue label$20;
                    }
                }
                while (false);
                this._storeInt((_34_ + 1116), 0);
                break label$18;
            }
            while (false);
            this._storeInt((_34_ + 1116), (this._loadInt((_34_ + 1112))));
        }
        while (false);
        _33_ = this._loadInt((_34_ + 1116));
        this._storeInt((0 + 4), (_34_ + 1120));
        return _33_;
    }

    public final int memmove(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this._storeInt((_33_ + 12), (this._loadInt((_33_ + 24))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._storeInt((_33_ + 8), (this._loadInt((_33_ + 20))))) == (this._loadInt((_33_ + 12)))) {
                        break label$2;
                    }
                    label$3:
                    do {
                        if ((((this._loadInt((_33_ + 8))) + (this._loadInt((_33_ + 16)))) & 4294967295L) <= ((this._loadInt((_33_ + 12))) & 4294967295L)) {
                            break label$3;
                        }
                        if ((((this._loadInt((_33_ + 12))) + (this._loadInt((_33_ + 16)))) & 4294967295L) > ((this._loadInt((_33_ + 8))) & 4294967295L)) {
                            break label$1;
                        }
                    }
                    while (false);
                    this._storeInt((_33_ + 28), (memcpy((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), (this._loadInt((_33_ + 16))))));
                    break label$0;
                }
                while (false);
                this._storeInt((_33_ + 28), (this._loadInt((_33_ + 12))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        label$7:
                        do {
                            label$8:
                            do {
                                label$9:
                                do {
                                    if (((this._loadInt((_33_ + 12))) & 4294967295L) >= ((this._loadInt((_33_ + 8))) & 4294967295L)) {
                                        break label$9;
                                    }
                                    if (((this._loadInt((_33_ + 8))) & 3) != ((this._loadInt((_33_ + 12))) & 3)) {
                                        break label$7;
                                    }
                                    label$11:
                                    do {
                                        label$10:
                                        while (true) {
                                            if (((this._loadInt((_33_ + 12))) & 3) == 0) {
                                                break label$8;
                                            }
                                            this._storeInt((_33_ + 16), ((_32_ = this._loadInt((_33_ + 16))) + -1));
                                            if (_32_ == 0) {
                                                break label$11;
                                            }
                                            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                                            _32_ = this._loadInt(_32_);
                                            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                                            this._storeInt(_31_, _32_);
                                            continue label$10;
                                        }
                                    }
                                    while (false);
                                    this._storeInt((_33_ + 28), (this._loadInt((_33_ + 24))));
                                    break label$0;
                                }
                                while (false);
                                if (((this._loadInt((_33_ + 8))) & 3) != ((this._loadInt((_33_ + 12))) & 3)) {
                                    break label$5;
                                }
                                label$13:
                                do {
                                    label$12:
                                    while (true) {
                                        if ((((this._loadInt((_33_ + 12))) + (this._loadInt((_33_ + 16)))) & 3) == 0) {
                                            break label$6;
                                        }
                                        this._storeInt((_33_ + 16), ((_32_ = this._loadInt((_33_ + 16))) + -1));
                                        if (_32_ == 0) {
                                            break label$13;
                                        }
                                        this._storeInt(((this._loadInt((_33_ + 12))) + (_32_ = this._loadInt((_33_ + 16)))), (this._loadInt(((this._loadInt((_33_ + 8))) + _32_))));
                                        continue label$12;
                                    }
                                }
                                while (false);
                                this._storeInt((_33_ + 28), (this._loadInt((_33_ + 24))));
                                break label$0;
                            }
                            while (false);
                            label$15:
                            do {
                                label$14:
                                while (true) {
                                    if (((this._loadInt((_33_ + 16))) & 4294967295L) < (4 & 4294967295L)) {
                                        break label$15;
                                    }
                                    this._storeInt((this._loadInt((_33_ + 12))), (this._loadInt((this._loadInt((_33_ + 8))))));
                                    this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -4));
                                    this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 4));
                                    this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 4));
                                    continue label$14;
                                }
                            }
                            while (false);
                        }
                        while (false);
                        label$16:
                        while (true) {
                            if ((this._loadInt((_33_ + 16))) == 0) {
                                break label$4;
                            }
                            this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                            _32_ = this._loadInt(_32_);
                            this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                            this._storeInt(_31_, _32_);
                            this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -1));
                            continue label$16;
                        }
                    }
                    while (false);
                    label$19:
                    do {
                        label$18:
                        while (true) {
                            if (((this._loadInt((_33_ + 16))) & 4294967295L) < (4 & 4294967295L)) {
                                break label$19;
                            }
                            this._storeInt(((_32_ = this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -4))) + (this._loadInt((_33_ + 12)))), (this._loadInt((_32_ + (this._loadInt((_33_ + 8)))))));
                            continue label$18;
                        }
                    }
                    while (false);
                }
                while (false);
                label$21:
                do {
                    label$20:
                    while (true) {
                        if ((this._loadInt((_33_ + 16))) == 0) {
                            break label$21;
                        }
                        this._storeInt(((_32_ = this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -1))) + (this._loadInt((_33_ + 12)))), (this._loadInt((_32_ + (this._loadInt((_33_ + 8)))))));
                        continue label$20;
                    }
                }
                while (false);
            }
            while (false);
            this._storeInt((_33_ + 28), (this._loadInt((_33_ + 24))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int mempcpy(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = memcpy((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        _31_ = this._loadInt((_33_ + 4));
        this._storeInt((0 + 4), (_33_ + 16));
        return (_32_ + _31_);
    }

    public final int __memrchr(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this._storeInt((_33_ + 12), (this._loadInt((_33_ + 24))));
        this._storeInt((_33_ + 20), (this._loadInt((_33_ + 20))));
        label$0:
        do {
            label$1$end:
            do {
                label$1:
                while (true) {
                    this._storeInt((_33_ + 16), ((_32_ = this._loadInt((_33_ + 16))) + -1));
                    if (_32_ == 0) {
                        break label$0;
                    }
                    if ((this._loadInt(((this._loadInt((_33_ + 12))) + (this._loadInt((_33_ + 16)))))) != (this._loadInt((_33_ + 20)))) {
                        continue label$1;
                    }
                    break label$1$end;
                }
            }
            while (false);
            this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 12))) + (this._loadInt((_33_ + 16)))));
            return (this._loadInt((_33_ + 28)));
        }
        while (false);
        this._storeInt((_33_ + 28), 0);
        return (this._loadInt((_33_ + 28)));
    }

    public final int memset(int _30_, int _31_, int _32_)
    {
        long _33_ = 0L;
        int _34_ = 0;
        this._storeInt(((_34_ = (this._loadInt((0 + 4))) - 48) + 40), _30_);
        this._storeInt((_34_ + 36), _31_);
        this._storeInt((_34_ + 32), _32_);
        this._storeInt((_34_ + 28), (this._loadInt((_34_ + 40))));
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_34_ + 32))) == 0) {
                    break label$1;
                }
                _32_ = this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -1), (this._loadInt((_34_ + 36))));
                this._storeInt((this._loadInt((_34_ + 28))), _32_);
                if (((this._loadInt((_34_ + 32))) & 4294967295L) > (2 & 4294967295L)) {
                    break label$0;
                }
                this._storeInt((_34_ + 44), (this._loadInt((_34_ + 40))));
                return (this._loadInt((_34_ + 44)));
            }
            while (false);
            this._storeInt((_34_ + 44), (this._loadInt((_34_ + 40))));
            return (this._loadInt((_34_ + 44)));
        }
        while (false);
        _32_ = this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -2), (this._loadInt((_34_ + 36))));
        this._storeInt(((this._loadInt((_34_ + 28))) + 1), _32_);
        _32_ = this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -3), (this._loadInt((_34_ + 36))));
        this._storeInt(((this._loadInt((_34_ + 28))) + 2), _32_);
        label$2:
        do {
            if (((this._loadInt((_34_ + 32))) & 4294967295L) > (6 & 4294967295L)) {
                break label$2;
            }
            this._storeInt((_34_ + 44), (this._loadInt((_34_ + 40))));
            return (this._loadInt((_34_ + 44)));
        }
        while (false);
        _32_ = this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -4), (this._loadInt((_34_ + 36))));
        this._storeInt(((this._loadInt((_34_ + 28))) + 3), _32_);
        label$3:
        do {
            if (((this._loadInt((_34_ + 32))) & 4294967295L) > (8 & 4294967295L)) {
                break label$3;
            }
            this._storeInt((_34_ + 44), (this._loadInt((_34_ + 40))));
            return (this._loadInt((_34_ + 44)));
        }
        while (false);
        this._storeInt((_34_ + 28), ((this._storeInt((_34_ + 24), ((0 - (this._loadInt((_34_ + 28)))) & 3))) + (this._loadInt((_34_ + 28)))));
        this._storeInt((_34_ + 32), ((this._storeInt((_34_ + 32), ((this._loadInt((_34_ + 32))) - (this._loadInt((_34_ + 24)))))) & -4));
        _32_ = this._storeInt((_34_ + 20), ((this._loadInt((_34_ + 36))) * 16843009));
        this._storeInt((this._loadInt((_34_ + 28))), _32_);
        this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -4), _32_);
        label$4:
        do {
            if (((this._loadInt((_34_ + 32))) & 4294967295L) > (8 & 4294967295L)) {
                break label$4;
            }
            this._storeInt((_34_ + 44), (this._loadInt((_34_ + 40))));
            return (this._loadInt((_34_ + 44)));
        }
        while (false);
        _31_ = this._storeInt(((_32_ = this._loadInt((_34_ + 28))) + 4), (this._storeInt((_32_ + 8), (this._loadInt((_34_ + 20))))));
        this._storeInt(((_32_ + (this._loadInt((_34_ + 32)))) + -12), _31_);
        this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -8), (this._loadInt((_34_ + 20))));
        label$5:
        do {
            if (((this._loadInt((_34_ + 32))) & 4294967295L) > (24 & 4294967295L)) {
                break label$5;
            }
            this._storeInt((_34_ + 44), (this._loadInt((_34_ + 40))));
            return (this._loadInt((_34_ + 44)));
        }
        while (false);
        this._storeInt(((_32_ = this._loadInt((_34_ + 28))) + 12), (this._storeInt((_32_ + 16), (this._loadInt((_34_ + 20))))));
        this._storeInt(((this._loadInt((_34_ + 28))) + 20), (this._loadInt((_34_ + 20))));
        this._storeInt(((this._loadInt((_34_ + 28))) + 24), (this._loadInt((_34_ + 20))));
        this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -28), (this._loadInt((_34_ + 20))));
        this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -24), (this._loadInt((_34_ + 20))));
        this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -20), (this._loadInt((_34_ + 20))));
        this._storeInt((((this._loadInt((_34_ + 28))) + (this._loadInt((_34_ + 32)))) + -16), (this._loadInt((_34_ + 20))));
        this._storeInt((_34_ + 28), ((this._storeInt((_34_ + 24), (((this._loadInt((_34_ + 28))) & 4) | 24))) + (this._loadInt((_34_ + 28)))));
        this._storeInt((_34_ + 32), ((this._loadInt((_34_ + 32))) - (this._loadInt((_34_ + 24)))));
        this._storeLong((_34_ + 8), ((_33_ = this._loadLong((_34_ + 20))) | (_33_ << 32L)));
        label$7:
        do {
            label$6:
            while (true) {
                if (((this._loadInt((_34_ + 32))) & 4294967295L) < (32 & 4294967295L)) {
                    break label$7;
                }
                this._storeLong((_32_ = this._loadInt((_34_ + 28))), (this._storeLong((_32_ + 8), (this._loadLong((_34_ + 8))))));
                this._storeLong(((this._loadInt((_34_ + 28))) + 16), (this._loadLong((_34_ + 8))));
                this._storeLong(((this._loadInt((_34_ + 28))) + 24), (this._loadLong((_34_ + 8))));
                this._storeInt((_34_ + 32), ((this._loadInt((_34_ + 32))) + -32));
                this._storeInt((_34_ + 28), ((this._loadInt((_34_ + 28))) + 32));
                continue label$6;
            }
        }
        while (false);
        this._storeInt((_34_ + 44), (this._loadInt((_34_ + 40))));
        return (this._loadInt((_34_ + 44)));
    }

    public final double modf(double _30_, int _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 48) + 32), _30_);
        this._storeInt((_32_ + 28), _31_);
        this._storeDouble((_32_ + 16), (this._loadDouble((_32_ + 32))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((this._storeInt((_32_ + 4), (((int) (((this._loadLong((_32_ + 16))) >>> 52L) & 2047L)) + -1023))) < 52) {
                            break label$3;
                        }
                        this._storeDouble((this._loadInt((_32_ + 28))), (this._loadDouble((_32_ + 32))));
                        if ((this._loadInt((_32_ + 4))) != 1024) {
                            break label$2;
                        }
                        if (((this._loadLong((_32_ + 16))) << 12L) == 0) {
                            break label$2;
                        }
                        this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 32))));
                        return (this._loadDouble((_32_ + 40)));
                    }
                    while (false);
                    if ((this._loadInt((_32_ + 4))) <= -1) {
                        break label$1;
                    }
                    if (((this._storeLong((_32_ + 8), (4503599627370495L >>> (this._loadLong((_32_ + 4)))))) & (this._loadLong((_32_ + 16)))) == 0L) {
                        break label$0;
                    }
                    this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 16))) & ((this._loadLong((_32_ + 8))) ^ -1L)));
                    _30_ = this._storeDouble((this._loadInt((_32_ + 28))), (this._loadDouble((_32_ + 16))));
                    this._storeDouble((_32_ + 40), ((this._loadDouble((_32_ + 32))) - _30_));
                    return (this._loadDouble((_32_ + 40)));
                }
                while (false);
                this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 16))) & -9223372036854775808L));
                this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 16))));
                return (this._loadDouble((_32_ + 40)));
            }
            while (false);
            this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 16))) & -9223372036854775808L));
            this._storeDouble((this._loadInt((_32_ + 28))), (this._loadDouble((_32_ + 16))));
            this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 32))));
            return (this._loadDouble((_32_ + 40)));
        }
        while (false);
        this._storeDouble((this._loadInt((_32_ + 28))), (this._loadDouble((_32_ + 32))));
        this._storeLong((_32_ + 16), ((this._loadLong((_32_ + 16))) & -9223372036854775808L));
        this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 16))));
        return (this._loadDouble((_32_ + 40)));
    }

    public final float modff(float _30_, int _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        this._storeFloat((_32_ + 16), (this._loadFloat((_32_ + 24))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((this._storeInt((_32_ + 8), ((((this._loadInt((_32_ + 16))) >>> 23) & 255) + -127))) < 23) {
                            break label$3;
                        }
                        this._storeFloat((this._loadInt((_32_ + 20))), (this._loadFloat((_32_ + 24))));
                        if ((this._loadInt((_32_ + 8))) != 128) {
                            break label$2;
                        }
                        if (((this._loadInt((_32_ + 16))) << 9) == 0) {
                            break label$2;
                        }
                        this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 24))));
                        return (this._loadFloat((_32_ + 28)));
                    }
                    while (false);
                    if ((this._loadInt((_32_ + 8))) <= -1) {
                        break label$1;
                    }
                    if (((this._storeInt((_32_ + 12), (8388607 >>> (this._loadInt((_32_ + 8)))))) & (this._loadInt((_32_ + 16)))) == 0) {
                        break label$0;
                    }
                    this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) & ((this._loadInt((_32_ + 12))) ^ -1)));
                    _30_ = this._storeFloat((this._loadInt((_32_ + 20))), (this._loadFloat((_32_ + 16))));
                    this._storeFloat((_32_ + 28), ((this._loadFloat((_32_ + 24))) - _30_));
                    return (this._loadFloat((_32_ + 28)));
                }
                while (false);
                this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) & -2147483648));
                this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 16))));
                return (this._loadFloat((_32_ + 28)));
            }
            while (false);
            this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) & -2147483648));
            this._storeFloat((this._loadInt((_32_ + 20))), (this._loadFloat((_32_ + 16))));
            this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 24))));
            return (this._loadFloat((_32_ + 28)));
        }
        while (false);
        this._storeFloat((this._loadInt((_32_ + 20))), (this._loadFloat((_32_ + 24))));
        this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) & -2147483648));
        this._storeFloat((_32_ + 28), (this._loadFloat((_32_ + 16))));
        return (this._loadFloat((_32_ + 28)));
    }

    public final void modfl(int _30_, long _31_, long _32_, int _33_)
    {
        int _34_ = 0;
        this._storeLong(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 64), _31_);
        this._storeInt((_34_ + 60), _33_);
        this._storeLong((_34_ + 72), _32_);
        this.__extenddftf2.invoke((_34_ + 16), (modf((this.__trunctfdf2.invoke((this._loadLong((_34_ + 64))), _32_)), (_34_ + 48))));
        _32_ = this._storeLong((_34_ + 32), (this._loadLong((_34_ + 16))));
        this.__extenddftf2.invoke(_34_, (this._loadDouble((_34_ + 48))));
        this._storeLong(((_33_ = this._loadInt((_34_ + 60))) + 8), (this._loadLong((_34_ + 8))));
        this._storeLong(_33_, (this._loadLong(_34_)));
        this._storeLong((_30_ + 8), (this._storeLong((_34_ + 40), (this._loadLong(((_34_ + 16) + 8))))));
        this._storeLong(_30_, _32_);
        this._storeInt((0 + 4), (_34_ + 80));
        return;
    }

    public final int jrand48(int _30_)
    {
        int _31_ = 0;
        long _32_ = 0L;
        _32_ = __rand48_step((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 4226);
        this._storeInt((0 + 4), (_31_ + 16));
        return ((int) (_32_ >>> 16L));
    }

    public final int mrand48()
    {
        return (jrand48(4220));
    }

    public final double nan(int _30_)
    {
        this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_);
        return Double.NaN;
    }

    public final float nanf(int _30_)
    {
        this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_);
        return Float.NaN;
    }

    public final void nanl(int _30_, int _31_)
    {
        this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _31_);
        this._storeLong((_30_ + 8), 9223231299366420480L);
        this._storeLong(_30_, 0L);
        return;
    }

    public final double nearbyint(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_31_ + 4), (this.fetestexcept.invoke(32)));
        this._storeDouble((_31_ + 8), (Math.round((this._loadDouble((_31_ + 8))))));
        label$0:
        do {
            if ((this._loadInt((_31_ + 4))) != 0) {
                break label$0;
            }
            this.feclearexcept.invoke(32);
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 8));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final float nearbyintf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_31_ + 8), (this.fetestexcept.invoke(32)));
        this._storeFloat((_31_ + 12), (Math.round((this._loadFloat((_31_ + 12))))));
        label$0:
        do {
            if ((this._loadInt((_31_ + 8))) != 0) {
                break label$0;
            }
            this.feclearexcept.invoke(32);
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final void nearbyintl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (Math.round((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double nextafter(double _30_, double _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 64), _30_);
        this._storeDouble((_32_ + 56), _31_);
        this._storeDouble((_32_ + 48), (this._loadDouble((_32_ + 64))));
        this._storeDouble((_32_ + 40), (this._loadDouble((_32_ + 56))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((__DOUBLE_BITS$2e$190((this._loadDouble((_32_ + 64))))) & 9223372036854775807L) & 4294967295L) > (9218868437227405312L & 4294967295L)) {
                        break label$2;
                    }
                    if ((((__DOUBLE_BITS$2e$190((this._loadDouble((_32_ + 56))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                        break label$1;
                    }
                }
                while (false);
                this._storeDouble((_32_ + 72), ((this._loadDouble((_32_ + 64))) + (this._loadDouble((_32_ + 56)))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if ((this._loadLong((_32_ + 48))) != (this._loadLong((_32_ + 40)))) {
                    break label$3;
                }
                this._storeDouble((_32_ + 72), (this._loadDouble((_32_ + 56))));
                break label$0;
            }
            while (false);
            this._storeLong((_32_ + 32), ((this._loadLong((_32_ + 48))) & 9223372036854775807L));
            this._storeLong((_32_ + 24), ((this._loadLong((_32_ + 40))) & 9223372036854775807L));
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        label$7:
                        do {
                            if ((this._loadLong((_32_ + 32))) == 0L) {
                                break label$7;
                            }
                            label$8:
                            do {
                                if (((this._loadLong((_32_ + 32))) & 4294967295L) > ((this._loadLong((_32_ + 24))) & 4294967295L)) {
                                    break label$8;
                                }
                                if ((((this._loadLong((_32_ + 48))) ^ (this._loadLong((_32_ + 40)))) & -9223372036854775808L) == 0) {
                                    break label$6;
                                }
                            }
                            while (false);
                            this._storeLong((_32_ + 48), ((this._loadLong((_32_ + 48))) + -1L));
                            break label$5;
                        }
                        while (false);
                        if ((this._loadLong((_32_ + 24))) == 0L) {
                            break label$4;
                        }
                        this._storeLong((_32_ + 48), (((this._loadLong((_32_ + 40))) & -9223372036854775808L) | 1L));
                        break label$5;
                    }
                    while (false);
                    this._storeLong((_32_ + 48), ((this._loadLong((_32_ + 48))) + 1L));
                }
                while (false);
                label$9:
                do {
                    if ((this._storeInt((_32_ + 20), ((int) (((this._loadLong((_32_ + 48))) >>> 52L) & 2047L)))) != 2047) {
                        break label$9;
                    }
                    this._storeDouble((_32_ + 8), ((_31_ = this._loadDouble((_32_ + 64))) + _31_));
                }
                while (false);
                label$10:
                do {
                    if ((this._loadInt((_32_ + 20))) != 0) {
                        break label$10;
                    }
                    this._storeDouble(_32_, (((_31_ = this._loadDouble((_32_ + 64))) * _31_) + ((_31_ = this._loadDouble((_32_ + 48))) * _31_)));
                }
                while (false);
                this._storeDouble((_32_ + 72), (this._loadDouble((_32_ + 48))));
                break label$0;
            }
            while (false);
            this._storeDouble((_32_ + 72), (this._loadDouble((_32_ + 56))));
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 72));
        this._storeInt((0 + 4), (_32_ + 80));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$189(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$190(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float nextafterf(float _30_, float _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeFloat((_32_ + 36), _31_);
        this._storeFloat((_32_ + 32), (this._loadFloat((_32_ + 40))));
        this._storeFloat((_32_ + 24), (this._loadFloat((_32_ + 36))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((__FLOAT_BITS$2e$191((this._loadFloat((_32_ + 40))))) & 2147483647) & 4294967295L) > (2139095040 & 4294967295L)) {
                        break label$2;
                    }
                    if ((((__FLOAT_BITS$2e$191((this._loadFloat((_32_ + 36))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                        break label$1;
                    }
                }
                while (false);
                this._storeFloat((_32_ + 44), ((this._loadFloat((_32_ + 40))) + (this._loadFloat((_32_ + 36)))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if ((this._loadInt((_32_ + 32))) != (this._loadInt((_32_ + 24)))) {
                    break label$3;
                }
                this._storeFloat((_32_ + 44), (this._loadFloat((_32_ + 36))));
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 32))) & 2147483647));
            this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 24))) & 2147483647));
            label$4:
            do {
                label$5:
                do {
                    label$6:
                    do {
                        label$7:
                        do {
                            if ((this._loadInt((_32_ + 20))) == 0) {
                                break label$7;
                            }
                            label$8:
                            do {
                                if (((this._loadInt((_32_ + 20))) & 4294967295L) > ((this._loadInt((_32_ + 16))) & 4294967295L)) {
                                    break label$8;
                                }
                                if ((((this._loadInt((_32_ + 32))) ^ (this._loadInt((_32_ + 24)))) & -2147483648) == 0) {
                                    break label$6;
                                }
                            }
                            while (false);
                            this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 32))) + -1));
                            break label$5;
                        }
                        while (false);
                        if ((this._loadInt((_32_ + 16))) == 0) {
                            break label$4;
                        }
                        this._storeInt((_32_ + 32), (((this._loadInt((_32_ + 24))) & -2147483648) | 1));
                        break label$5;
                    }
                    while (false);
                    this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 32))) + 1));
                }
                while (false);
                label$9:
                do {
                    if ((this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 32))) & 2139095040))) != 2139095040) {
                        break label$9;
                    }
                    this._storeFloat((_32_ + 8), ((_31_ = this._loadFloat((_32_ + 40))) + _31_));
                }
                while (false);
                label$10:
                do {
                    if ((this._loadInt((_32_ + 12))) != 0) {
                        break label$10;
                    }
                    this._storeFloat((_32_ + 4), (((_31_ = this._loadFloat((_32_ + 40))) * _31_) + ((_31_ = this._loadFloat((_32_ + 32))) * _31_)));
                }
                while (false);
                this._storeFloat((_32_ + 44), (this._loadFloat((_32_ + 32))));
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 44), (this._loadFloat((_32_ + 36))));
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 44));
        this._storeInt((0 + 4), (_32_ + 48));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$191(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$192(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void nextafterl(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (nextafter((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))), _36_)));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final double nexttoward(double _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this._storeDouble(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeLong((_33_ + 8), _32_);
        _30_ = this.__trunctfdf2.invoke((this._storeLong(_33_, _31_)), _32_);
        _30_ = nextafter((this._loadDouble((_33_ + 24))), _30_);
        this._storeInt((0 + 4), (_33_ + 32));
        return _30_;
    }

    public final float nexttowardf(float _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this._storeFloat(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 128))) + 120), _30_);
        this._storeLong((_33_ + 96), _31_);
        this._storeFloat((_33_ + 88), (this._loadFloat((_33_ + 120))));
        this._storeLong((_33_ + 104), _32_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((__FLOAT_BITS$2e$193((this._loadFloat((_33_ + 120))))) & 2147483647) & 4294967295L) > (2139095040 & 4294967295L)) {
                        break label$2;
                    }
                    if ((__fpclassifyl((this._loadLong((_33_ + 96))), (this._loadLong((_33_ + 104))))) == 0) {
                        break label$2;
                    }
                    this.__extendsftf2.invoke((_33_ + 56), (this._loadFloat((_33_ + 120))));
                    if ((this.__netf2.invoke((this._loadLong((_33_ + 56))), (this._loadLong((_33_ + 64))), (this._loadLong((_33_ + 96))), (this._loadLong((_33_ + 104))))) != 0) {
                        break label$1;
                    }
                    this._storeFloat((_33_ + 124), (this.__trunctfsf2.invoke((this._loadLong((_33_ + 96))), (this._loadLong((_33_ + 104))))));
                    break label$0;
                }
                while (false);
                this.__extendsftf2.invoke((_33_ + 8), (this._loadFloat((_33_ + 120))));
                this.__addtf3.invoke((_33_ + 24), (this._loadLong((_33_ + 8))), (this._loadLong(((_33_ + 8) + 8))), (this._loadLong((_33_ + 96))), (this._loadLong((_33_ + 104))));
                this._storeFloat((_33_ + 124), (this.__trunctfsf2.invoke((this._loadLong((_33_ + 24))), (this._loadLong(((_33_ + 24) + 8))))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if ((this._loadFloat((_33_ + 120))) != 0.0f) {
                        break label$4;
                    }
                    this._storeInt((_33_ + 88), 1);
                    if ((__signbitl((this._loadLong((_33_ + 96))), (this._loadLong((_33_ + 104))))) == 0) {
                        break label$3;
                    }
                    this._storeInt((_33_ + 88), ((this._loadInt((_33_ + 88))) | -2147483648));
                    break label$3;
                }
                while (false);
                this.__extendsftf2.invoke((_33_ + 40), (this._loadFloat((_33_ + 120))));
                label$5:
                do {
                    label$6:
                    do {
                        label$7:
                        do {
                            if ((this.__lttf2.invoke((this._loadLong((_33_ + 40))), (this._loadLong((_33_ + 48))), (this._loadLong((_33_ + 96))), (this._loadLong((_33_ + 104))))) > -1) {
                                break label$7;
                            }
                            if (((__FLOAT_BITS$2e$193((this._loadFloat((_33_ + 120))))) >>> 31) == 0) {
                                break label$6;
                            }
                            this._storeInt((_33_ + 88), ((this._loadInt((_33_ + 88))) + -1));
                            break label$3;
                        }
                        while (false);
                        if (((__FLOAT_BITS$2e$193((this._loadFloat((_33_ + 120))))) >>> 31) == 0) {
                            break label$5;
                        }
                        this._storeInt((_33_ + 88), ((this._loadInt((_33_ + 88))) + 1));
                        break label$3;
                    }
                    while (false);
                    this._storeInt((_33_ + 88), ((this._loadInt((_33_ + 88))) + 1));
                    break label$3;
                }
                while (false);
                this._storeInt((_33_ + 88), ((this._loadInt((_33_ + 88))) + -1));
            }
            while (false);
            label$8:
            do {
                if ((this._storeInt((_33_ + 84), ((this._loadInt((_33_ + 88))) & 2139095040))) != 2139095040) {
                    break label$8;
                }
                this._storeFloat((_33_ + 80), ((_30_ = this._loadFloat((_33_ + 120))) + _30_));
            }
            while (false);
            label$9:
            do {
                if ((this._loadInt((_33_ + 84))) != 0) {
                    break label$9;
                }
                this._storeFloat((_33_ + 76), (((_30_ = this._loadFloat((_33_ + 120))) * _30_) + ((_30_ = this._loadFloat((_33_ + 88))) * _30_)));
            }
            while (false);
            this._storeFloat((_33_ + 124), (this._loadFloat((_33_ + 88))));
        }
        while (false);
        _30_ = this._loadFloat((_33_ + 124));
        this._storeInt((0 + 4), (_33_ + 128));
        return _30_;
    }

    public final int __FLOAT_BITS$2e$193(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$194(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void nexttowardl(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 16), _33_);
        this._storeLong((_35_ + 24), _34_);
        nextafterl(_35_, (this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))), _33_, _34_);
        _34_ = this._loadLong(_35_);
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, _34_);
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final int nice(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(34, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __ofl_lock()
    {
        this.__lock.invoke(14128);
        return 14136;
    }

    public final void __ofl_unlock()
    {
        this.__unlock.invoke(14128);
        return;
    }

    public final int __ofl_add(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        _30_ = this._storeInt((_31_ + 8), (__ofl_lock()));
        this._storeInt(((this._loadInt((_31_ + 12))) + 56), (this._loadInt(_30_)));
        label$0:
        do {
            if ((this._loadInt(_30_)) == 0) {
                break label$0;
            }
            this._storeInt(((this._loadInt((this._loadInt((_31_ + 8))))) + 52), (this._loadInt((_31_ + 12))));
        }
        while (false);
        this._storeInt((this._loadInt((_31_ + 8))), (this._loadInt((_31_ + 12))));
        __ofl_unlock();
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int open_memstream(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._storeInt((_32_ + 16), (malloc(1192)))) == 0) {
                        break label$2;
                    }
                    if ((this._storeInt((_32_ + 8), (malloc(1)))) == 0) {
                        break label$1;
                    }
                    memset((this._loadInt((_32_ + 16))), 0, 168);
                    _31_ = this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 16))) + 144));
                    this._storeInt(((this._loadInt((_32_ + 16))) + 84), _31_);
                    this._storeInt((this._loadInt((_32_ + 12))), (this._loadInt((_32_ + 24))));
                    this._storeInt(((this._loadInt((_32_ + 12))) + 4), (this._loadInt((_32_ + 20))));
                    _31_ = this._storeInt((this._loadInt((_32_ + 20))), 0);
                    this._storeInt(((this._loadInt((_32_ + 12))) + 20), _31_);
                    this._storeInt(((this._loadInt((_32_ + 12))) + 16), _31_);
                    this._storeInt(((this._loadInt((_32_ + 12))) + 8), _31_);
                    _30_ = this._storeInt((this._loadInt((_32_ + 24))), (this._loadInt((_32_ + 8))));
                    this._storeInt(((this._loadInt((_32_ + 12))) + 12), _30_);
                    this._storeInt((this._loadInt((_32_ + 8))), _31_);
                    this._storeInt((this._loadInt((_32_ + 16))), 4);
                    _30_ = this._storeInt(((this._loadInt((_32_ + 16))) + 60), -1);
                    this._storeInt(((this._loadInt((_32_ + 16))) + 44), ((this._loadInt((_32_ + 12))) + 24));
                    this._storeInt(((this._loadInt((_32_ + 16))) + 48), 1024);
                    this._storeInt(((this._loadInt((_32_ + 16))) + 75), 255);
                    this._storeInt(((this._loadInt((_32_ + 16))) + 36), 6);
                    this._storeInt(((this._loadInt((_32_ + 16))) + 40), 7);
                    this._storeInt(((this._loadInt((_32_ + 16))) + 12), 8);
                    label$3:
                    do {
                        if ((this._loadInt((_31_ + 12944))) != 0) {
                            break label$3;
                        }
                        this._storeInt(((this._loadInt((_32_ + 16))) + 76), _30_);
                    }
                    while (false);
                    this._storeInt((_32_ + 28), (__ofl_add((this._loadInt((_32_ + 16))))));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 28), 0);
                break label$0;
            }
            while (false);
            free((this._loadInt((_32_ + 16))));
            this._storeInt((_32_ + 28), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int ms_write(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this._storeInt((_33_ + 12), (this._loadInt(((this._loadInt((_33_ + 24))) + 84))));
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_33_ + 8), ((this._loadInt(((_32_ = this._loadInt((_33_ + 24))) + 20))) - (this._loadInt((_32_ + 28)))))) == 0) {
                    break label$1;
                }
                if (((ms_write((_32_ = this._loadInt((_33_ + 24))), (this._storeInt((_32_ + 20), (this._loadInt((_32_ + 28))))), (this._loadInt((_33_ + 8))))) & 4294967295L) >= ((this._loadInt((_33_ + 8))) & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_33_ + 28), 0);
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    if ((((this._loadInt((_33_ + 16))) + (this._loadInt(((_32_ = this._loadInt((_33_ + 12))) + 8)))) & 4294967295L) < ((this._loadInt((_32_ + 20))) & 4294967295L)) {
                        break label$3;
                    }
                    _32_ = this._storeInt((_33_ + 8), ((((this._loadInt(((_32_ = this._loadInt((_33_ + 12))) + 20))) << 1) | (((this._loadInt((_32_ + 8))) + (this._loadInt((_33_ + 16)))) + 1)) | 1));
                    if ((this._storeInt((_33_ + 4), (realloc((this._loadInt(((this._loadInt((_33_ + 12))) + 12))), _32_)))) == 0) {
                        break label$2;
                    }
                    _31_ = this._storeInt(((_32_ = this._loadInt((_33_ + 12))) + 12), (this._loadInt((_33_ + 4))));
                    this._storeInt((this._loadInt(_32_)), _31_);
                    memset(((this._loadInt(((_32_ = this._loadInt((_33_ + 12))) + 12))) + (_32_ = this._loadInt((_32_ + 20)))), 0, ((this._loadInt((_33_ + 8))) - _32_));
                    this._storeInt(((this._loadInt((_33_ + 12))) + 20), (this._loadInt((_33_ + 8))));
                }
                while (false);
                memcpy(((this._loadInt(((_32_ = this._loadInt((_33_ + 12))) + 12))) + (this._loadInt((_32_ + 8)))), (this._loadInt((_33_ + 20))), (this._loadInt((_33_ + 16))));
                this._storeInt(((_32_ = this._loadInt((_33_ + 12))) + 8), ((this._loadInt((_32_ + 8))) + (this._loadInt((_33_ + 16)))));
                label$4:
                do {
                    if (((this._loadInt((_32_ + 8))) & 4294967295L) < ((this._loadInt((_32_ + 16))) & 4294967295L)) {
                        break label$4;
                    }
                    this._storeInt(((_32_ = this._loadInt((_33_ + 12))) + 16), (this._loadInt((_32_ + 8))));
                }
                while (false);
                this._storeInt((this._loadInt(((_32_ = this._loadInt((_33_ + 12))) + 4))), (this._loadInt((_32_ + 8))));
                this._storeInt((_33_ + 28), (this._loadInt((_33_ + 16))));
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 28), 0);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final long ms_seek(int _30_, long _31_, int _32_)
    {
        int _33_ = 0;
        int _34_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 36), _30_);
        this._storeLong((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        this._storeInt((_33_ + 12), (this._loadInt(((this._loadInt((_33_ + 36))) + 84))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt((_33_ + 20))) & 4294967295L) >= (3 & 4294967295L)) {
                        break label$2;
                    }
                    _32_ = this._loadInt((_33_ + 20));
                    _30_ = this._storeInt(_33_, 0);
                    this._storeInt((_33_ + 4), (this._loadInt(((_34_ = this._loadInt((_33_ + 12))) + 8))));
                    this._storeInt((_33_ + 8), (this._loadInt((_34_ + 16))));
                    _32_ = this._storeInt((_33_ + 16), (this._loadInt((_33_ + (_32_ << 2)))));
                    if ((this._loadLong((_33_ + 24))) < ((long) (_30_ - _32_))) {
                        break label$2;
                    }
                    if ((this._loadLong((_33_ + 24))) <= ((long) (2147483647 - (this._loadInt((_33_ + 16)))))) {
                        break label$1;
                    }
                }
                while (false);
                this._storeInt((__errno_location()), 22);
                this._storeLong((_33_ + 40), -1L);
                break label$0;
            }
            while (false);
            this._storeLong((_33_ + 40), ((this._storeLong(((this._loadInt((_33_ + 12))) + 8), ((this._loadLong((_33_ + 16))) + (this._loadLong((_33_ + 24)))))) & 4294967295L));
        }
        while (false);
        _31_ = this._loadLong((_33_ + 40));
        this._storeInt((0 + 4), (_33_ + 48));
        return _31_;
    }

    public final int ms_close(int _30_)
    {
        this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_);
        return 0;
    }

    public final int pause()
    {
        return (__syscall_ret((this.__syscall_cp.invoke(29, 0, 0, 0, 0, 0, 0))));
    }

    public final void perror(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        _30_ = 0;
        this._storeInt((_31_ + 8), (this._loadInt((0 + 14768))));
        this._storeInt((_31_ + 4), (strerror((this._loadInt((__errno_location()))))));
        label$0:
        do {
            if ((this._loadInt(((this._loadInt((_31_ + 8))) + 76))) < 0) {
                break label$0;
            }
            _30_ = this.__lockfile.invoke((this._loadInt((_31_ + 8))));
        }
        while (false);
        this._storeInt(_31_, _30_);
        label$1:
        do {
            if ((this._loadInt((_31_ + 12))) == 0) {
                break label$1;
            }
            if ((this._loadInt((this._loadInt((_31_ + 12))))) == 0) {
                break label$1;
            }
            fwrite((_30_ = this._loadInt((_31_ + 12))), (strlen(_30_)), 1, (this._loadInt((_31_ + 8))));
            fputc(58, (this._loadInt((_31_ + 8))));
            fputc(32, (this._loadInt((_31_ + 8))));
        }
        while (false);
        fwrite((_30_ = this._loadInt((_31_ + 4))), (strlen(_30_)), 1, (this._loadInt((_31_ + 8))));
        fputc(10, (this._loadInt((_31_ + 8))));
        label$2:
        do {
            if ((this._loadInt(_31_)) == 0) {
                break label$2;
            }
            this.__unlockfile.invoke((this._loadInt((_31_ + 8))));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int pipe(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(42, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int pipe2(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._storeInt((_32_ + 4), _31_)) == 0) {
                        break label$2;
                    }
                    if ((this._storeInt(_32_, (this.__syscall2.invoke(331, (this._loadInt((_32_ + 8))), (this._loadInt((_32_ + 4))))))) == -38) {
                        break label$1;
                    }
                    this._storeInt((_32_ + 12), (__syscall_ret((this._loadInt(_32_)))));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 12), (pipe((this._loadInt((_32_ + 8))))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if ((this._storeInt(_32_, (pipe((this._loadInt((_32_ + 8))))))) == 0) {
                    break label$3;
                }
                this._storeInt((_32_ + 12), (this._loadInt(_32_)));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if (((this._loadInt((_32_ + 6))) & 8) == 0) {
                    break label$4;
                }
                this.__syscall3.invoke(55, (this._loadInt((this._loadInt((_32_ + 8))))), 2, 1);
                this.__syscall3.invoke(55, (this._loadInt(((this._loadInt((_32_ + 8))) + 4))), 2, 1);
            }
            while (false);
            label$5:
            do {
                if (((this._loadInt((_32_ + 5))) & 8) == 0) {
                    break label$5;
                }
                this.__syscall3.invoke(55, (this._loadInt((this._loadInt((_32_ + 8))))), 4, 2048);
                this.__syscall3.invoke(55, (this._loadInt(((this._loadInt((_32_ + 8))) + 4))), 4, 2048);
            }
            while (false);
            this._storeInt((_32_ + 12), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int popen(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 160))) + 152), _30_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        if ((this._loadInt((this._storeInt((_32_ + 148), _31_)))) != 114) {
                                            break label$7;
                                        }
                                        this._storeInt((_32_ + 136), 0);
                                        break label$6;
                                    }
                                    while (false);
                                    if ((this._loadInt((this._loadInt((_32_ + 148))))) != 119) {
                                        break label$5;
                                    }
                                    this._storeInt((_32_ + 136), 1);
                                }
                                while (false);
                                label$8:
                                do {
                                    if ((pipe2((_32_ + 140), 524288)) == 0) {
                                        break label$8;
                                    }
                                    this._storeInt((_32_ + 156), 0);
                                    break label$0;
                                }
                                while (false);
                                if ((this._storeInt((_32_ + 124), (this.fdopen.invoke((this._loadInt(((_32_ + 140) + ((this._loadInt((_32_ + 136))) << 2)))), (this._loadInt((_32_ + 148))))))) == 0) {
                                    break label$4;
                                }
                                _31_ = 0;
                                label$9:
                                do {
                                    if ((this._loadInt(((this._loadInt((_32_ + 124))) + 76))) < 0) {
                                        break label$9;
                                    }
                                    _31_ = this.__lockfile.invoke((this._loadInt((_32_ + 124))));
                                }
                                while (false);
                                this._storeInt((_32_ + 44), _31_);
                                label$10:
                                do {
                                    if ((this._loadInt(((_32_ + 140) + ((_31_ = 1 - (this._loadInt((_32_ + 136)))) << 2)))) != _31_) {
                                        break label$10;
                                    }
                                    _31_ = this._loadInt((_32_ + 136));
                                    this._storeInt((_32_ + 16), 0);
                                    if ((this._storeInt((_32_ + 40), (this.fcntl.invoke((1 - _31_), 1030, (_32_ + 16))))) <= -1) {
                                        break label$3;
                                    }
                                    this.__syscall1.invoke(6, (this._loadInt(((_32_ + 140) + ((1 - (this._loadInt((_32_ + 136)))) << 2)))));
                                    this._storeInt(((_32_ + 140) + ((1 - (this._loadInt((_32_ + 136)))) << 2)), (this._loadInt((_32_ + 40))));
                                }
                                while (false);
                                this._storeInt((_32_ + 132), 12);
                                if ((this.posix_spawn_file_actions_init.invoke((_32_ + 48))) != 0) {
                                    break label$2;
                                }
                                label$11:
                                do {
                                    if ((this.posix_spawn_file_actions_adddup2.invoke((_32_ + 48), (this._loadInt(((_32_ + 140) + ((_31_ = 1 - (this._loadInt((_32_ + 136)))) << 2)))), _31_)) != 0) {
                                        break label$11;
                                    }
                                    _31_ = this._storeInt((_32_ + 36), 0);
                                    this._storeInt((_32_ + 24), 14144);
                                    this._storeInt((_32_ + 32), (this._loadInt((_32_ + 152))));
                                    this._storeInt((_32_ + 28), 14160);
                                    if ((this._storeInt((_32_ + 132), (this.posix_spawn.invoke((_32_ + 128), 14176, (_32_ + 48), _31_, (_32_ + 24), (this._loadInt((_31_ + 3912))))))) == 0) {
                                        break label$1;
                                    }
                                }
                                while (false);
                                this.posix_spawn_file_actions_destroy.invoke((_32_ + 48));
                                break label$2;
                            }
                            while (false);
                            this._storeInt((__errno_location()), 22);
                            this._storeInt((_32_ + 156), 0);
                            break label$0;
                        }
                        while (false);
                        this.__syscall1.invoke(6, (this._loadInt((_32_ + 140))));
                        this.__syscall1.invoke(6, (this._loadInt((_32_ + 144))));
                        this._storeInt((_32_ + 156), 0);
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_32_ + 132), (this._loadInt((__errno_location()))));
                }
                while (false);
                fclose((this._loadInt((_32_ + 124))));
                this.__syscall1.invoke(6, (this._loadInt(((_32_ + 140) + ((1 - (this._loadInt((_32_ + 136)))) << 2)))));
                _31_ = this._loadInt((_32_ + 132));
                this._storeInt((__errno_location()), _31_);
                this._storeInt((_32_ + 156), 0);
                break label$0;
            }
            while (false);
            this.posix_spawn_file_actions_destroy.invoke((_32_ + 48));
            this._storeInt(((this._loadInt((_32_ + 124))) + 64), (this._loadInt((_32_ + 128))));
            label$12:
            do {
                if ((strchr((this._loadInt((_32_ + 148))), 101)) != 0) {
                    break label$12;
                }
                _31_ = this._loadInt(((_32_ + 140) + ((this._loadInt((_32_ + 136))) << 2)));
                this._storeInt(_32_, 0);
                this.fcntl.invoke(_31_, 2, _32_);
            }
            while (false);
            this.__syscall1.invoke(6, (this._loadInt(((_32_ + 140) + ((1 - (this._loadInt((_32_ + 136)))) << 2)))));
            label$13:
            do {
                if ((this._loadInt((_32_ + 44))) == 0) {
                    break label$13;
                }
                this.__unlockfile.invoke((this._loadInt((_32_ + 124))));
            }
            while (false);
            this._storeInt((_32_ + 156), (this._loadInt((_32_ + 124))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 156));
        this._storeInt((0 + 4), (_32_ + 160));
        return _31_;
    }

    public final int posix_close(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = close((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int posix_memalign(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_33_ + 20))) & 4294967295L) > (3 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_33_ + 28), 22);
                break label$0;
            }
            while (false);
            label$2:
            do {
                if ((this._storeInt((_33_ + 12), (__memalign((this._loadInt((_33_ + 20))), (this._loadInt((_33_ + 16))))))) == 0) {
                    break label$2;
                }
                this._storeInt((this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 12))));
                this._storeInt((_33_ + 28), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 28), (this._loadInt((__errno_location()))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final double pow(double _30_, double _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        this._storeDouble(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 368))) + 352), _30_);
        this._storeDouble((_33_ + 344), _31_);
        this._storeDouble((_33_ + 168), (this._loadDouble((_33_ + 352))));
        this._storeLong((_33_ + 200), (this._loadLong((_33_ + 172))));
        this._storeLong((_33_ + 184), (this._loadLong((_33_ + 168))));
        this._storeDouble((_33_ + 160), (this._loadDouble((_33_ + 344))));
        this._storeLong((_33_ + 196), (this._loadLong((_33_ + 164))));
        this._storeLong((_33_ + 180), (this._loadLong((_33_ + 160))));
        this._storeInt((_33_ + 192), ((this._loadInt((_33_ + 200))) & 2147483647));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._storeInt((_33_ + 188), ((this._loadInt((_33_ + 196))) & 2147483647))) | (this._loadInt((_33_ + 180)))) == 0) {
                            break label$3;
                        }
                        label$4:
                        do {
                            if ((this._loadInt((_33_ + 200))) != 1072693248) {
                                break label$4;
                            }
                            if ((this._loadInt((_33_ + 184))) == 0) {
                                break label$2;
                            }
                        }
                        while (false);
                        label$5:
                        do {
                            if ((this._loadInt((_33_ + 192))) > 2146435072) {
                                break label$5;
                            }
                            label$6:
                            do {
                                if ((this._loadInt((_33_ + 192))) != 2146435072) {
                                    break label$6;
                                }
                                if ((this._loadInt((_33_ + 184))) != 0) {
                                    break label$5;
                                }
                            }
                            while (false);
                            if ((this._loadInt((_33_ + 188))) > 2146435072) {
                                break label$5;
                            }
                            if ((this._loadInt((_33_ + 188))) != 2146435072) {
                                break label$1;
                            }
                            if ((this._loadInt((_33_ + 180))) == 0) {
                                break label$1;
                            }
                        }
                        while (false);
                        this._storeDouble((_33_ + 360), ((this._loadDouble((_33_ + 352))) + (this._loadDouble((_33_ + 344)))));
                        break label$0;
                    }
                    while (false);
                    this._storeLong((_33_ + 360), 4607182418800017408L);
                    break label$0;
                }
                while (false);
                this._storeLong((_33_ + 360), 4607182418800017408L);
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 208), 0);
            label$7:
            do {
                if ((this._loadInt((_33_ + 200))) > -1) {
                    break label$7;
                }
                label$8:
                do {
                    if ((this._loadInt((_33_ + 188))) < 1128267776) {
                        break label$8;
                    }
                    this._storeInt((_33_ + 208), 2);
                    break label$7;
                }
                while (false);
                if ((this._loadInt((_33_ + 188))) < 1072693248) {
                    break label$7;
                }
                label$9:
                do {
                    if ((this._storeInt((_33_ + 212), (((this._loadInt((_33_ + 188))) >> 20) + -1023))) < 21) {
                        break label$9;
                    }
                    if (((this._storeInt((_33_ + 216), ((this._loadInt((_33_ + 180))) >>> (52 - (this._loadInt((_33_ + 212))))))) << (52 - (this._loadInt((_33_ + 212))))) != (this._loadInt((_33_ + 180)))) {
                        break label$7;
                    }
                    this._storeInt((_33_ + 208), (2 - ((this._loadInt((_33_ + 216))) & 1)));
                    break label$7;
                }
                while (false);
                if ((this._loadInt((_33_ + 180))) != 0) {
                    break label$7;
                }
                if (((this._storeInt((_33_ + 216), ((this._loadInt((_33_ + 188))) >> (20 - (this._loadInt((_33_ + 212))))))) << (20 - (this._loadInt((_33_ + 212))))) != (this._loadInt((_33_ + 188)))) {
                    break label$7;
                }
                this._storeInt((_33_ + 208), (2 - ((this._loadInt((_33_ + 216))) & 1)));
            }
            while (false);
            label$10:
            do {
                if ((this._loadInt((_33_ + 180))) != 0) {
                    break label$10;
                }
                label$11:
                do {
                    label$12:
                    do {
                        label$13:
                        do {
                            label$14:
                            do {
                                label$15:
                                do {
                                    if ((this._loadInt((_33_ + 188))) != 2146435072) {
                                        break label$15;
                                    }
                                    if ((((this._loadInt((_33_ + 192))) + -1072693248) | (this._loadInt((_33_ + 184)))) == 0) {
                                        break label$14;
                                    }
                                    if ((this._loadInt((_33_ + 192))) < 1072693248) {
                                        break label$13;
                                    }
                                    _31_ = 0.0;
                                    label$16:
                                    do {
                                        if ((this._loadInt((_33_ + 196))) < 0) {
                                            break label$16;
                                        }
                                        _31_ = this._loadDouble((_33_ + 344));
                                    }
                                    while (false);
                                    this._storeDouble((_33_ + 360), _31_);
                                    break label$0;
                                }
                                while (false);
                                label$17:
                                do {
                                    if ((this._loadInt((_33_ + 188))) != 1072693248) {
                                        break label$17;
                                    }
                                    if ((this._loadInt((_33_ + 196))) < 0) {
                                        break label$12;
                                    }
                                    this._storeDouble((_33_ + 360), (this._loadDouble((_33_ + 352))));
                                    break label$0;
                                }
                                while (false);
                                if ((this._loadInt((_33_ + 196))) != 1073741824) {
                                    break label$11;
                                }
                                this._storeDouble((_33_ + 360), ((_31_ = this._loadDouble((_33_ + 352))) * _31_));
                                break label$0;
                            }
                            while (false);
                            this._storeLong((_33_ + 360), 4607182418800017408L);
                            break label$0;
                        }
                        while (false);
                        _31_ = 0.0;
                        label$18:
                        do {
                            if ((this._loadInt((_33_ + 196))) > -1) {
                                break label$18;
                            }
                            _31_ = -(this._loadDouble((_33_ + 344)));
                        }
                        while (false);
                        this._storeDouble((_33_ + 360), _31_);
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_33_ + 360), (this._storeDouble((_33_ + 344), (1.0 / (this._loadDouble((_33_ + 352)))))));
                    break label$0;
                }
                while (false);
                if ((this._loadInt((_33_ + 196))) != 1071644672) {
                    break label$10;
                }
                if ((this._loadInt((_33_ + 200))) < 0) {
                    break label$10;
                }
                this._storeDouble((_33_ + 360), (Math.sqrt((this._loadDouble((_33_ + 352))))));
                break label$0;
            }
            while (false);
            this._storeDouble((_33_ + 328), (Math.abs((this._loadDouble((_33_ + 352))))));
            label$19:
            do {
                if ((this._loadInt((_33_ + 184))) != 0) {
                    break label$19;
                }
                label$20:
                do {
                    if ((this._loadInt((_33_ + 192))) == 2146435072) {
                        break label$20;
                    }
                    if ((this._loadInt((_33_ + 192))) == 0) {
                        break label$20;
                    }
                    if ((this._loadInt((_33_ + 192))) != 1072693248) {
                        break label$19;
                    }
                }
                while (false);
                this._storeDouble((_33_ + 336), (this._loadDouble((_33_ + 328))));
                label$21:
                do {
                    if ((this._loadInt((_33_ + 196))) > -1) {
                        break label$21;
                    }
                    this._storeDouble((_33_ + 336), (1.0 / (this._loadDouble((_33_ + 336)))));
                }
                while (false);
                label$22:
                do {
                    if ((this._loadInt((_33_ + 200))) > -1) {
                        break label$22;
                    }
                    label$23:
                    do {
                        if ((((this._loadInt((_33_ + 192))) + -1072693248) | (this._loadInt((_33_ + 208)))) == 0) {
                            break label$23;
                        }
                        if ((this._loadInt((_33_ + 208))) != 1) {
                            break label$22;
                        }
                        this._storeDouble((_33_ + 336), (-(this._loadDouble((_33_ + 336)))));
                        break label$22;
                    }
                    while (false);
                    this._storeDouble((_33_ + 336), ((_31_ = (_31_ = this._loadDouble((_33_ + 336))) - _31_) / _31_));
                }
                while (false);
                this._storeDouble((_33_ + 360), (this._loadDouble((_33_ + 336))));
                break label$0;
            }
            while (false);
            this._storeLong((_33_ + 256), 4607182418800017408L);
            label$24:
            do {
                if ((this._loadInt((_33_ + 200))) > -1) {
                    break label$24;
                }
                label$25:
                do {
                    if ((this._loadInt((_33_ + 208))) == 0) {
                        break label$25;
                    }
                    if ((this._loadInt((_33_ + 208))) != 1) {
                        break label$24;
                    }
                    this._storeLong((_33_ + 256), -4616189618054758400L);
                    break label$24;
                }
                while (false);
                this._storeDouble((_33_ + 360), ((_31_ = (_31_ = this._loadDouble((_33_ + 352))) - _31_) / _31_));
                break label$0;
            }
            while (false);
            label$26:
            do {
                label$27:
                do {
                    label$28:
                    do {
                        label$29:
                        do {
                            label$30:
                            do {
                                label$31:
                                do {
                                    label$32:
                                    do {
                                        label$33:
                                        do {
                                            label$34:
                                            do {
                                                if ((this._loadInt((_33_ + 188))) < 1105199105) {
                                                    break label$34;
                                                }
                                                if ((this._loadInt((_33_ + 188))) < 1139802113) {
                                                    break label$32;
                                                }
                                                if ((this._loadInt((_33_ + 192))) > 1072693247) {
                                                    break label$33;
                                                }
                                                _31_ = Double.POSITIVE_INFINITY;
                                                label$35:
                                                do {
                                                    if ((this._loadInt((_33_ + 196))) < 0) {
                                                        break label$35;
                                                    }
                                                    _31_ = 0.0;
                                                }
                                                while (false);
                                                this._storeDouble((_33_ + 360), _31_);
                                                break label$0;
                                            }
                                            while (false);
                                            this._storeInt((_33_ + 204), 0);
                                            label$36:
                                            do {
                                                if ((this._loadInt((_33_ + 192))) > 1048575) {
                                                    break label$36;
                                                }
                                                this._storeDouble((_33_ + 328), ((this._loadDouble((_33_ + 328))) * 9.007199254740992E15));
                                                this._storeInt((_33_ + 204), ((this._loadInt((_33_ + 204))) + -53));
                                                this._storeDouble((_33_ + 96), (this._loadDouble((_33_ + 328))));
                                                this._storeLong((_33_ + 192), (this._loadLong((_33_ + 100))));
                                            }
                                            while (false);
                                            this._storeInt((_33_ + 204), (((this._loadInt((_33_ + 204))) + ((this._loadInt((_33_ + 192))) >> 20)) + -1023));
                                            this._storeInt((_33_ + 192), ((this._storeInt((_33_ + 216), ((this._loadInt((_33_ + 192))) & 1048575))) | 1072693248));
                                            label$37:
                                            do {
                                                if ((this._loadInt((_33_ + 216))) > 235662) {
                                                    break label$37;
                                                }
                                                this._storeInt((_33_ + 212), 0);
                                                break label$30;
                                            }
                                            while (false);
                                            if ((this._loadInt((_33_ + 216))) > 767609) {
                                                break label$31;
                                            }
                                            this._storeInt((_33_ + 212), 1);
                                            break label$30;
                                        }
                                        while (false);
                                        if ((this._loadInt((_33_ + 192))) < 1072693248) {
                                            break label$32;
                                        }
                                        _31_ = Double.POSITIVE_INFINITY;
                                        label$38:
                                        do {
                                            if ((this._loadInt((_33_ + 196))) > 0) {
                                                break label$38;
                                            }
                                            _31_ = 0.0;
                                        }
                                        while (false);
                                        this._storeDouble((_33_ + 360), _31_);
                                        break label$0;
                                    }
                                    while (false);
                                    label$39:
                                    do {
                                        if ((this._loadInt((_33_ + 192))) > 1072693246) {
                                            break label$39;
                                        }
                                        if ((this._loadInt((_33_ + 196))) <= -1) {
                                            break label$28;
                                        }
                                        this._storeDouble((_33_ + 360), (((this._loadDouble((_33_ + 256))) * 1.0E-300) * 1.0E-300));
                                        break label$0;
                                    }
                                    while (false);
                                    if ((this._loadInt((_33_ + 192))) < 1072693249) {
                                        break label$29;
                                    }
                                    if ((this._loadInt((_33_ + 196))) < 1) {
                                        break label$27;
                                    }
                                    this._storeDouble((_33_ + 360), (((this._loadDouble((_33_ + 256))) * 1.0E300) * 1.0E300));
                                    break label$0;
                                }
                                while (false);
                                this._storeInt((_33_ + 212), 0);
                                this._storeInt((_33_ + 204), ((this._loadInt((_33_ + 204))) + 1));
                                this._storeInt((_33_ + 192), ((this._loadInt((_33_ + 192))) + -1048576));
                            }
                            while (false);
                            this._storeDouble((_33_ + 88), (this._loadDouble((_33_ + 328))));
                            this._storeLong((_33_ + 88), ((this._storeLong((_33_ + 88), (this._loadLong((_33_ + 88))))) | ((this._loadLong((_33_ + 192))) << 32L)));
                            this._storeDouble((_33_ + 240), ((this._storeDouble((_33_ + 328), (this._loadDouble((_33_ + 88))))) - (this._loadDouble((((this._loadInt((_33_ + 212))) << 3) + 14192)))));
                            this._storeDouble((_33_ + 80), (this._storeDouble((_33_ + 128), (this._storeDouble((_33_ + 144), ((this._storeDouble((_33_ + 232), (1.0 / ((this._loadDouble((_33_ + 328))) + (this._loadDouble((((this._loadInt((_33_ + 212))) << 3) + 14192))))))) * (this._loadDouble((_33_ + 240)))))))));
                            this._storeLong((_33_ + 80), ((this._loadLong((_33_ + 80))) & -4294967296L));
                            this._storeDouble((_33_ + 128), (this._loadDouble((_33_ + 80))));
                            this._storeLong((_33_ + 72), (this._storeLong((_33_ + 112), 0L)));
                            this._storeLong((_33_ + 72), ((this._storeLong((_33_ + 72), (this._loadLong((_33_ + 72))))) | (((((((this._loadInt((_33_ + 192))) >> 1) | 536870912) + ((this._loadInt((_33_ + 212))) << 18)) + 524288) & 4294967295L) << 32L)));
                            _31_ = this._storeDouble((_33_ + 112), (this._loadDouble((_33_ + 72))));
                            _31_ = this._storeDouble((_33_ + 104), ((this._loadDouble((_33_ + 328))) - (_31_ - (this._loadDouble((((this._loadInt((_33_ + 212))) << 3) + 14192))))));
                            this._storeDouble((_33_ + 120), ((this._loadDouble((_33_ + 232))) * (((this._loadDouble((_33_ + 240))) - ((_30_ = this._loadDouble((_33_ + 128))) * (this._loadDouble((_33_ + 112))))) - (_30_ * _31_))));
                            this._storeDouble((_33_ + 264), ((this._storeDouble((_33_ + 264), (((_31_ = this._storeDouble((_33_ + 136), ((_31_ = this._loadDouble((_33_ + 144))) * _31_))) * _31_) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * 0.20697501780033842) + 0.23066074577556175)) + 0.272728123808534)) + 0.33333332981837743)) + 0.4285714285785502)) + 0.5999999999999946)))) + ((this._loadDouble((_33_ + 120))) * ((this._loadDouble((_33_ + 128))) + (this._loadDouble((_33_ + 144)))))));
                            this._storeDouble((_33_ + 64), (this._storeDouble((_33_ + 112), (((this._storeDouble((_33_ + 136), ((_31_ = this._loadDouble((_33_ + 128))) * _31_))) + 3.0) + (this._loadDouble((_33_ + 264)))))));
                            this._storeLong((_33_ + 64), ((this._loadLong((_33_ + 64))) & -4294967296L));
                            _31_ = this._storeDouble((_33_ + 112), (this._loadDouble((_33_ + 64))));
                            this._storeDouble((_33_ + 104), ((this._loadDouble((_33_ + 264))) - ((_31_ - 3.0) - (this._loadDouble((_33_ + 136))))));
                            this._storeDouble((_33_ + 240), ((this._loadDouble((_33_ + 128))) * (this._loadDouble((_33_ + 112)))));
                            this._storeDouble((_33_ + 56), (this._storeDouble((_33_ + 304), ((this._storeDouble((_33_ + 232), (((this._loadDouble((_33_ + 120))) * (this._loadDouble((_33_ + 112)))) + ((this._loadDouble((_33_ + 104))) * (this._loadDouble((_33_ + 144))))))) + (this._loadDouble((_33_ + 240)))))));
                            this._storeLong((_33_ + 56), ((this._loadLong((_33_ + 56))) & -4294967296L));
                            _31_ = this._storeDouble((_33_ + 304), (this._loadDouble((_33_ + 56))));
                            this._storeDouble((_33_ + 296), ((this._loadDouble((_33_ + 232))) - (_31_ - (this._loadDouble((_33_ + 240))))));
                            this._storeDouble((_33_ + 320), ((this._loadDouble((_33_ + 304))) * 0.9617967009544373));
                            this._storeDouble((_33_ + 312), ((((this._loadDouble((_33_ + 304))) * -7.028461650952758E-9) + ((this._loadDouble((_33_ + 296))) * 0.9617966939259756)) + (this._loadDouble((((this._loadInt((_33_ + 212))) << 3) + 14208)))));
                            this._storeDouble((_33_ + 48), (this._storeDouble((_33_ + 280), ((this._storeDouble((_33_ + 248), ((double) (this._loadInt((_33_ + 204)))))) + (((this._loadDouble((_33_ + 320))) + (this._loadDouble((_33_ + 312)))) + (this._loadDouble((((this._loadInt((_33_ + 212))) << 3) + 14224))))))));
                            this._storeLong((_33_ + 48), ((this._loadLong((_33_ + 48))) & -4294967296L));
                            _31_ = this._storeDouble((_33_ + 280), (this._loadDouble((_33_ + 48))));
                            this._storeDouble((_33_ + 272), ((this._loadDouble((_33_ + 312))) - (((_31_ - (this._loadDouble((_33_ + 248)))) - (this._loadDouble((((this._loadInt((_33_ + 212))) << 3) + 14224)))) - (this._loadDouble((_33_ + 320))))));
                            break label$26;
                        }
                        while (false);
                        this._storeDouble((_33_ + 224), (((_31_ = this._storeDouble((_33_ + 248), ((this._loadDouble((_33_ + 328))) + -1.0))) * _31_) * (0.5 - (_31_ * ((_31_ * -0.25) + 0.3333333333333333)))));
                        this._storeDouble((_33_ + 240), ((this._loadDouble((_33_ + 248))) * 1.4426950216293335));
                        this._storeDouble((_33_ + 152), (this._storeDouble((_33_ + 280), ((this._storeDouble((_33_ + 232), (((this._loadDouble((_33_ + 248))) * 1.9259629911266175E-8) + ((this._loadDouble((_33_ + 224))) * -1.4426950408889634)))) + (this._loadDouble((_33_ + 240)))))));
                        this._storeLong((_33_ + 152), ((this._loadLong((_33_ + 152))) & -4294967296L));
                        _31_ = this._storeDouble((_33_ + 280), (this._loadDouble((_33_ + 152))));
                        this._storeDouble((_33_ + 272), ((this._loadDouble((_33_ + 232))) - (_31_ - (this._loadDouble((_33_ + 240))))));
                        break label$26;
                    }
                    while (false);
                    this._storeDouble((_33_ + 360), (((this._loadDouble((_33_ + 256))) * 1.0E300) * 1.0E300));
                    break label$0;
                }
                while (false);
                this._storeDouble((_33_ + 360), (((this._loadDouble((_33_ + 256))) * 1.0E-300) * 1.0E-300));
                break label$0;
            }
            while (false);
            this._storeDouble((_33_ + 40), (this._storeDouble((_33_ + 288), (this._loadDouble((_33_ + 344))))));
            this._storeLong((_33_ + 40), ((this._loadLong((_33_ + 40))) & -4294967296L));
            _31_ = this._storeDouble((_33_ + 288), (this._loadDouble((_33_ + 40))));
            this._storeDouble((_33_ + 296), ((((_30_ = this._loadDouble((_33_ + 344))) - _31_) * (this._loadDouble((_33_ + 280)))) + (_30_ * (this._loadDouble((_33_ + 272))))));
            this._storeDouble((_33_ + 32), (this._storeDouble((_33_ + 336), ((this._storeDouble((_33_ + 304), ((this._loadDouble((_33_ + 288))) * (this._loadDouble((_33_ + 280)))))) + (this._loadDouble((_33_ + 296)))))));
            this._storeLong((_33_ + 216), (this._loadLong((_33_ + 36))));
            this._storeLong((_33_ + 220), (this._loadLong((_33_ + 32))));
            label$40:
            do {
                label$41:
                do {
                    label$42:
                    do {
                        label$43:
                        do {
                            if ((this._loadInt((_33_ + 216))) < 1083179008) {
                                break label$43;
                            }
                            if ((((this._loadInt((_33_ + 216))) + -1083179008) | (this._loadInt((_33_ + 220)))) == 0) {
                                break label$42;
                            }
                            this._storeDouble((_33_ + 360), (((this._loadDouble((_33_ + 256))) * 1.0E300) * 1.0E300));
                            break label$0;
                        }
                        while (false);
                        if (((this._loadInt((_33_ + 216))) & 2147483647) < 1083231232) {
                            break label$40;
                        }
                        if ((((this._loadInt((_33_ + 216))) + 1064252416) | (this._loadInt((_33_ + 220)))) == 0) {
                            break label$41;
                        }
                        this._storeDouble((_33_ + 360), (((this._loadDouble((_33_ + 256))) * 1.0E-300) * 1.0E-300));
                        break label$0;
                    }
                    while (false);
                    if (((((_31_ = (this._loadDouble((_33_ + 296))) + 8.008566259537294E-17) <= (_30_ = (this._loadDouble((_33_ + 336))) - (this._loadDouble((_33_ + 304))))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                        break label$40;
                    }
                    this._storeDouble((_33_ + 360), (((this._loadDouble((_33_ + 256))) * 1.0E300) * 1.0E300));
                    break label$0;
                }
                while (false);
                if (((((_31_ = this._loadDouble((_33_ + 296))) > (_30_ = (this._loadDouble((_33_ + 336))) - (this._loadDouble((_33_ + 304))))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                    break label$40;
                }
                this._storeDouble((_33_ + 360), (((this._loadDouble((_33_ + 256))) * 1.0E-300) * 1.0E-300));
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 212), (((this._storeInt((_33_ + 220), ((this._loadInt((_33_ + 216))) & 2147483647))) >>> 20) + -1023));
            _32_ = this._storeInt((_33_ + 204), 0);
            label$44:
            do {
                if ((this._loadInt((_33_ + 220))) < 1071644673) {
                    break label$44;
                }
                this._storeInt((_33_ + 212), ((((this._storeInt((_33_ + 204), ((this._loadInt((_33_ + 216))) + (1048576 >>> ((this._loadInt((_33_ + 212))) + 1))))) & 2146435072) >>> 20) + -1023));
                this._storeLong((_33_ + 24), (this._storeLong((_33_ + 248), 0L)));
                this._storeLong((_33_ + 24), ((this._storeLong((_33_ + 24), (this._loadLong((_33_ + 24))))) | ((((this._loadInt((_33_ + 204))) & ((1048575 >>> (this._loadInt((_33_ + 212)))) ^ -1)) & 4294967295L) << 32L)));
                this._storeDouble((_33_ + 248), (this._loadDouble((_33_ + 24))));
                this._storeInt((_33_ + 204), ((((this._loadInt((_33_ + 204))) & 1048575) | 1048576) >>> (20 - (this._loadInt((_33_ + 212))))));
                label$45:
                do {
                    if ((this._loadInt((_33_ + 216))) > -1) {
                        break label$45;
                    }
                    this._storeInt((_33_ + 204), (0 - (this._loadInt((_33_ + 204)))));
                }
                while (false);
                this._storeDouble((_33_ + 304), ((this._loadDouble((_33_ + 304))) - (this._loadDouble((_33_ + 248)))));
            }
            while (false);
            this._storeDouble((_33_ + 16), (this._storeDouble((_33_ + 248), ((this._loadDouble((_33_ + 296))) + (this._loadDouble((_33_ + 304)))))));
            this._storeLong((_33_ + 16), ((this._loadLong((_33_ + 16))) & -4294967296L));
            this._storeDouble((_33_ + 240), ((this._storeDouble((_33_ + 248), (this._loadDouble((_33_ + 16))))) * 0.6931471824645996));
            _31_ = this._storeDouble((_33_ + 336), ((this._storeDouble((_33_ + 232), ((((this._loadDouble((_33_ + 296))) - ((_31_ = this._loadDouble((_33_ + 248))) - (this._loadDouble((_33_ + 304))))) * 0.6931471805599453) + (_31_ * -1.904654299957768E-9)))) + (this._loadDouble((_33_ + 240)))));
            this._storeDouble((_33_ + 224), ((this._loadDouble((_33_ + 232))) - (_31_ - (this._loadDouble((_33_ + 240))))));
            _31_ = this._storeDouble((_33_ + 248), ((_31_ = this._loadDouble((_33_ + 336))) * _31_));
            this._storeDouble((_33_ + 8), (this._storeDouble((_33_ + 336), (1.0 - ((this._storeDouble((_33_ + 264), ((((_31_ = this._storeDouble((_33_ + 280), ((this._loadDouble((_33_ + 336))) - (_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * 4.1381367970572385E-8) + -1.6533902205465252E-6)) + 6.613756321437934E-5)) + -0.0027777777777015593)) + 0.16666666666666602))))) * (_30_ = this._loadDouble((_33_ + 336)))) / (_31_ + -2.0)) - ((_31_ = this._loadDouble((_33_ + 224))) + (_30_ * _31_))))) - (this._loadDouble((_33_ + 336))))))));
            label$46:
            do {
                label$47:
                do {
                    if (((this._storeInt((_33_ + 216), ((this._storeInt((_33_ + 216), (this._loadInt((_33_ + 12))))) + ((this._loadInt((_33_ + 204))) << 20)))) >> 20) > _32_) {
                        break label$47;
                    }
                    this._storeDouble((_33_ + 336), (scalbn((this._loadDouble((_33_ + 336))), (this._loadInt((_33_ + 204))))));
                    break label$46;
                }
                while (false);
                this._storeDouble(_33_, (this._loadDouble((_33_ + 336))));
                this._storeLong(_33_, ((this._storeLong(_33_, (this._loadLong(_33_)))) | ((this._loadLong((_33_ + 216))) << 32L)));
                this._storeDouble((_33_ + 336), (this._loadDouble(_33_)));
            }
            while (false);
            this._storeDouble((_33_ + 360), ((this._loadDouble((_33_ + 256))) * (this._loadDouble((_33_ + 336)))));
        }
        while (false);
        _31_ = this._loadDouble((_33_ + 360));
        this._storeInt((0 + 4), (_33_ + 368));
        return _31_;
    }

    public final float powf(float _30_, float _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        int _34_ = 0;
        this._storeFloat(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 320))) + 312), _30_);
        this._storeFloat((_33_ + 308), _31_);
        this._storeFloat((_33_ + 200), (this._loadFloat((_33_ + 312))));
        this._storeInt((_33_ + 220), (this._loadInt((_33_ + 200))));
        this._storeFloat((_33_ + 192), (this._loadFloat((_33_ + 308))));
        this._storeInt((_33_ + 216), (this._loadInt((_33_ + 192))));
        this._storeInt((_33_ + 212), ((this._loadInt((_33_ + 220))) & 2147483647));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._storeInt((_33_ + 208), ((this._loadInt((_33_ + 216))) & 2147483647))) == 0) {
                        break label$2;
                    }
                    if ((this._loadInt((_33_ + 220))) != 1065353216) {
                        break label$1;
                    }
                    this._storeInt((_33_ + 316), 1065353216);
                    break label$0;
                }
                while (false);
                this._storeInt((_33_ + 316), 1065353216);
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if ((this._loadInt((_33_ + 212))) > 2139095040) {
                        break label$4;
                    }
                    if ((this._loadInt((_33_ + 208))) < 2139095041) {
                        break label$3;
                    }
                }
                while (false);
                this._storeFloat((_33_ + 316), ((this._loadFloat((_33_ + 312))) + (this._loadFloat((_33_ + 308)))));
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 228), 0);
            label$5:
            do {
                if ((this._loadInt((_33_ + 220))) > -1) {
                    break label$5;
                }
                label$6:
                do {
                    if ((this._loadInt((_33_ + 208))) < 1266679808) {
                        break label$6;
                    }
                    this._storeInt((_33_ + 228), 2);
                    break label$5;
                }
                while (false);
                if ((this._loadInt((_33_ + 208))) < 1065353216) {
                    break label$5;
                }
                this._storeInt((_33_ + 232), ((_34_ = (this._loadInt((_33_ + 208))) >> 23) + -127));
                if (((this._storeInt((_33_ + 236), ((this._loadInt((_33_ + 208))) >> (150 - _34_)))) << (23 - (this._loadInt((_33_ + 232))))) != (this._loadInt((_33_ + 208)))) {
                    break label$5;
                }
                this._storeInt((_33_ + 228), (2 - ((this._loadInt((_33_ + 236))) & 1)));
            }
            while (false);
            label$7:
            do {
                label$8:
                do {
                    label$9:
                    do {
                        label$10:
                        do {
                            label$11:
                            do {
                                label$12:
                                do {
                                    if ((this._loadInt((_33_ + 208))) != 2139095040) {
                                        break label$12;
                                    }
                                    if ((this._loadInt((_33_ + 212))) != 1065353216) {
                                        break label$11;
                                    }
                                    this._storeInt((_33_ + 316), 1065353216);
                                    break label$0;
                                }
                                while (false);
                                if ((this._loadInt((_33_ + 208))) != 1065353216) {
                                    break label$10;
                                }
                                if ((this._loadInt((_33_ + 216))) < 0) {
                                    break label$9;
                                }
                                this._storeFloat((_33_ + 316), (this._loadFloat((_33_ + 312))));
                                break label$0;
                            }
                            while (false);
                            if ((this._loadInt((_33_ + 212))) < 1065353217) {
                                break label$8;
                            }
                            _31_ = 0.0f;
                            label$13:
                            do {
                                if ((this._loadInt((_33_ + 216))) < 0) {
                                    break label$13;
                                }
                                _31_ = this._loadFloat((_33_ + 308));
                            }
                            while (false);
                            this._storeFloat((_33_ + 316), _31_);
                            break label$0;
                        }
                        while (false);
                        if ((this._loadInt((_33_ + 216))) != 1073741824) {
                            break label$7;
                        }
                        this._storeFloat((_33_ + 316), ((_31_ = this._loadFloat((_33_ + 312))) * _31_));
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((_33_ + 316), (1.0f / (this._loadFloat((_33_ + 312)))));
                    break label$0;
                }
                while (false);
                _31_ = 0.0f;
                label$14:
                do {
                    if ((this._loadInt((_33_ + 216))) > -1) {
                        break label$14;
                    }
                    _31_ = -(this._loadFloat((_33_ + 308)));
                }
                while (false);
                this._storeFloat((_33_ + 316), _31_);
                break label$0;
            }
            while (false);
            label$15:
            do {
                if ((this._loadInt((_33_ + 216))) != 1056964608) {
                    break label$15;
                }
                if ((this._loadInt((_33_ + 220))) < 0) {
                    break label$15;
                }
                this._storeFloat((_33_ + 316), ((float) (Math.sqrt((this._loadFloat((_33_ + 312)))))));
                break label$0;
            }
            while (false);
            this._storeFloat((_33_ + 300), (Math.abs((this._loadFloat((_33_ + 312))))));
            label$16:
            do {
                label$17:
                do {
                    label$18:
                    do {
                        label$19:
                        do {
                            label$20:
                            do {
                                label$21:
                                do {
                                    if ((this._loadInt((_33_ + 212))) == 2139095040) {
                                        break label$21;
                                    }
                                    if ((this._loadInt((_33_ + 212))) == 0) {
                                        break label$21;
                                    }
                                    if ((this._loadInt((_33_ + 212))) != 1065353216) {
                                        break label$20;
                                    }
                                }
                                while (false);
                                this._storeFloat((_33_ + 304), (this._loadFloat((_33_ + 300))));
                                label$22:
                                do {
                                    if ((this._loadInt((_33_ + 216))) > -1) {
                                        break label$22;
                                    }
                                    this._storeFloat((_33_ + 304), (1.0f / (this._loadFloat((_33_ + 304)))));
                                }
                                while (false);
                                if ((this._loadInt((_33_ + 220))) > -1) {
                                    break label$16;
                                }
                                if ((((this._loadInt((_33_ + 212))) + -1065353216) | (this._loadInt((_33_ + 228)))) == 0) {
                                    break label$19;
                                }
                                if ((this._loadInt((_33_ + 228))) != 1) {
                                    break label$16;
                                }
                                this._storeFloat((_33_ + 304), (-(this._loadFloat((_33_ + 304)))));
                                break label$16;
                            }
                            while (false);
                            this._storeInt((_33_ + 260), 1065353216);
                            if ((this._loadInt((_33_ + 220))) <= -1) {
                                break label$18;
                            }
                            break label$17;
                        }
                        while (false);
                        this._storeFloat((_33_ + 304), ((_31_ = (_31_ = this._loadFloat((_33_ + 304))) - _31_) / _31_));
                        break label$16;
                    }
                    while (false);
                    label$23:
                    do {
                        if ((this._loadInt((_33_ + 228))) == 0) {
                            break label$23;
                        }
                        if ((this._loadInt((_33_ + 228))) != 1) {
                            break label$17;
                        }
                        this._storeInt((_33_ + 260), -1082130432);
                        break label$17;
                    }
                    while (false);
                    this._storeFloat((_33_ + 316), ((_31_ = (_31_ = this._loadFloat((_33_ + 312))) - _31_) / _31_));
                    break label$0;
                }
                while (false);
                label$24:
                do {
                    label$25:
                    do {
                        label$26:
                        do {
                            label$27:
                            do {
                                label$28:
                                do {
                                    label$29:
                                    do {
                                        label$30:
                                        do {
                                            label$31:
                                            do {
                                                label$32:
                                                do {
                                                    label$33:
                                                    do {
                                                        label$34:
                                                        do {
                                                            if ((this._loadInt((_33_ + 208))) < 1291845633) {
                                                                break label$34;
                                                            }
                                                            if ((this._loadInt((_33_ + 212))) > 1065353207) {
                                                                break label$33;
                                                            }
                                                            if ((this._loadInt((_33_ + 216))) <= -1) {
                                                                break label$27;
                                                            }
                                                            this._storeFloat((_33_ + 316), (((this._loadFloat((_33_ + 260))) * 1.0E-30f) * 1.0E-30f));
                                                            break label$0;
                                                        }
                                                        while (false);
                                                        this._storeInt((_33_ + 224), 0);
                                                        label$35:
                                                        do {
                                                            if ((this._loadInt((_33_ + 212))) > 8388607) {
                                                                break label$35;
                                                            }
                                                            this._storeFloat((_33_ + 300), ((this._loadFloat((_33_ + 300))) * 1.6777216E7f));
                                                            this._storeInt((_33_ + 224), ((this._loadInt((_33_ + 224))) + -24));
                                                            this._storeFloat((_33_ + 152), (this._loadFloat((_33_ + 300))));
                                                            this._storeInt((_33_ + 212), (this._loadInt((_33_ + 152))));
                                                        }
                                                        while (false);
                                                        this._storeInt((_33_ + 224), (((this._loadInt((_33_ + 224))) + ((this._loadInt((_33_ + 212))) >> 23)) + -127));
                                                        this._storeInt((_33_ + 212), ((this._storeInt((_33_ + 236), ((this._loadInt((_33_ + 212))) & 8388607))) | 1065353216));
                                                        if ((this._loadInt((_33_ + 236))) > 1885297) {
                                                            break label$32;
                                                        }
                                                        this._storeInt((_33_ + 232), 0);
                                                        break label$29;
                                                    }
                                                    while (false);
                                                    if ((this._loadInt((_33_ + 212))) < 1065353224) {
                                                        break label$31;
                                                    }
                                                    if ((this._loadInt((_33_ + 216))) < 1) {
                                                        break label$24;
                                                    }
                                                    this._storeFloat((_33_ + 316), (((this._loadFloat((_33_ + 260))) * 1.0E30f) * 1.0E30f));
                                                    break label$0;
                                                }
                                                while (false);
                                                if ((this._loadInt((_33_ + 236))) > 6140886) {
                                                    break label$30;
                                                }
                                                this._storeInt((_33_ + 232), 1);
                                                break label$29;
                                            }
                                            while (false);
                                            this._storeFloat((_33_ + 244), (((_31_ = this._storeFloat((_33_ + 256), ((this._loadFloat((_33_ + 300))) + -1.0f))) * _31_) * (0.5f - (_31_ * ((_31_ * -0.25f) + 0.33333334f)))));
                                            this._storeFloat((_33_ + 252), ((this._loadFloat((_33_ + 256))) * 1.442688f));
                                            this._storeFloat((_33_ + 184), (this._storeFloat((_33_ + 276), ((this._storeFloat((_33_ + 248), (((this._loadFloat((_33_ + 256))) * 7.0526075E-6f) + ((this._loadFloat((_33_ + 244))) * -1.442695f)))) + (this._loadFloat((_33_ + 252)))))));
                                            this._storeInt((_33_ + 176), ((this._storeInt((_33_ + 204), (this._loadInt((_33_ + 184))))) & -4096));
                                            _31_ = this._storeFloat((_33_ + 276), (this._loadFloat((_33_ + 176))));
                                            this._storeFloat((_33_ + 272), ((this._loadFloat((_33_ + 248))) - (_31_ - (this._loadFloat((_33_ + 252))))));
                                            break label$28;
                                        }
                                        while (false);
                                        this._storeInt((_33_ + 232), 0);
                                        this._storeInt((_33_ + 224), ((this._loadInt((_33_ + 224))) + 1));
                                        this._storeInt((_33_ + 212), ((this._loadInt((_33_ + 212))) + -8388608));
                                    }
                                    while (false);
                                    this._storeInt((_33_ + 144), (this._loadInt((_33_ + 212))));
                                    this._storeFloat((_33_ + 252), ((this._storeFloat((_33_ + 300), (this._loadFloat((_33_ + 144))))) - (this._loadFloat((((this._loadInt((_33_ + 232))) << 2) + 14240)))));
                                    this._storeFloat((_33_ + 136), (this._storeFloat((_33_ + 168), (this._storeFloat((_33_ + 264), ((this._storeFloat((_33_ + 248), (1.0f / ((this._loadFloat((_33_ + 300))) + (this._loadFloat((((this._loadInt((_33_ + 232))) << 2) + 14240))))))) * (this._loadFloat((_33_ + 252)))))))));
                                    this._storeInt((_33_ + 128), ((this._storeInt((_33_ + 204), (this._loadInt((_33_ + 136))))) & -4096));
                                    this._storeFloat((_33_ + 168), (this._loadFloat((_33_ + 128))));
                                    this._storeInt((_33_ + 120), (((this._storeInt((_33_ + 204), ((((this._loadInt((_33_ + 212))) >> 1) | 536870912) & -4096))) + ((this._loadInt((_33_ + 232))) << 21)) + 4194304));
                                    _31_ = this._storeFloat((_33_ + 160), (this._loadFloat((_33_ + 120))));
                                    _31_ = this._storeFloat((_33_ + 156), ((this._loadFloat((_33_ + 300))) - (_31_ - (this._loadFloat((((this._loadInt((_33_ + 232))) << 2) + 14240))))));
                                    this._storeFloat((_33_ + 164), ((this._loadFloat((_33_ + 248))) * (((this._loadFloat((_33_ + 252))) - ((_30_ = this._loadFloat((_33_ + 168))) * (this._loadFloat((_33_ + 160))))) - (_30_ * _31_))));
                                    this._storeFloat((_33_ + 268), ((this._storeFloat((_33_ + 268), (((_31_ = this._storeFloat((_33_ + 172), ((_31_ = this._loadFloat((_33_ + 264))) * _31_))) * _31_) * ((_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * 0.20697501f) + 0.23066075f)) + 0.27272812f)) + 0.33333334f)) + 0.42857143f)) + 0.6f)))) + ((this._loadFloat((_33_ + 164))) * ((this._loadFloat((_33_ + 168))) + (this._loadFloat((_33_ + 264)))))));
                                    this._storeFloat((_33_ + 112), (this._storeFloat((_33_ + 160), (((this._storeFloat((_33_ + 172), ((_31_ = this._loadFloat((_33_ + 168))) * _31_))) + 3.0f) + (this._loadFloat((_33_ + 268)))))));
                                    this._storeInt((_33_ + 104), ((this._storeInt((_33_ + 204), (this._loadInt((_33_ + 112))))) & -4096));
                                    _31_ = this._storeFloat((_33_ + 160), (this._loadFloat((_33_ + 104))));
                                    this._storeFloat((_33_ + 156), ((this._loadFloat((_33_ + 268))) - ((_31_ - 3.0f) - (this._loadFloat((_33_ + 172))))));
                                    this._storeFloat((_33_ + 252), ((this._loadFloat((_33_ + 168))) * (this._loadFloat((_33_ + 160)))));
                                    this._storeFloat((_33_ + 96), (this._storeFloat((_33_ + 288), ((this._storeFloat((_33_ + 248), (((this._loadFloat((_33_ + 164))) * (this._loadFloat((_33_ + 160)))) + ((this._loadFloat((_33_ + 156))) * (this._loadFloat((_33_ + 264))))))) + (this._loadFloat((_33_ + 252)))))));
                                    this._storeInt((_33_ + 88), ((this._storeInt((_33_ + 204), (this._loadInt((_33_ + 96))))) & -4096));
                                    _31_ = this._storeFloat((_33_ + 288), (this._loadFloat((_33_ + 88))));
                                    this._storeFloat((_33_ + 284), ((this._loadFloat((_33_ + 248))) - (_31_ - (this._loadFloat((_33_ + 252))))));
                                    this._storeFloat((_33_ + 296), ((this._loadFloat((_33_ + 288))) * 0.96191406f));
                                    this._storeFloat((_33_ + 292), ((((this._loadFloat((_33_ + 288))) * -1.17368574E-4f) + ((this._loadFloat((_33_ + 284))) * 0.9617967f)) + (this._loadFloat((((this._loadInt((_33_ + 232))) << 2) + 14248)))));
                                    this._storeFloat((_33_ + 80), (this._storeFloat((_33_ + 276), ((this._storeFloat((_33_ + 256), ((float) (this._loadInt((_33_ + 224)))))) + (((this._loadFloat((_33_ + 296))) + (this._loadFloat((_33_ + 292)))) + (this._loadFloat((((this._loadInt((_33_ + 232))) << 2) + 14256))))))));
                                    this._storeInt((_33_ + 72), ((this._storeInt((_33_ + 204), (this._loadInt((_33_ + 80))))) & -4096));
                                    _31_ = this._storeFloat((_33_ + 276), (this._loadFloat((_33_ + 72))));
                                    this._storeFloat((_33_ + 272), ((this._loadFloat((_33_ + 292))) - (((_31_ - (this._loadFloat((_33_ + 256)))) - (this._loadFloat((((this._loadInt((_33_ + 232))) << 2) + 14256)))) - (this._loadFloat((_33_ + 296))))));
                                }
                                while (false);
                                this._storeFloat((_33_ + 64), (this._loadFloat((_33_ + 308))));
                                this._storeInt((_33_ + 56), ((this._storeInt((_33_ + 204), (this._loadInt((_33_ + 64))))) & -4096));
                                _31_ = this._storeFloat((_33_ + 280), (this._loadFloat((_33_ + 56))));
                                this._storeFloat((_33_ + 284), ((((_30_ = this._loadFloat((_33_ + 308))) - _31_) * (this._loadFloat((_33_ + 276)))) + (_30_ * (this._loadFloat((_33_ + 272))))));
                                this._storeFloat((_33_ + 48), (this._storeFloat((_33_ + 304), ((this._storeFloat((_33_ + 288), ((this._loadFloat((_33_ + 280))) * (this._loadFloat((_33_ + 276)))))) + (this._loadFloat((_33_ + 284)))))));
                                label$36:
                                do {
                                    if ((this._storeInt((_33_ + 236), (this._loadInt((_33_ + 48))))) < 1124073473) {
                                        break label$36;
                                    }
                                    this._storeFloat((_33_ + 316), (((this._loadFloat((_33_ + 260))) * 1.0E30f) * 1.0E30f));
                                    break label$0;
                                }
                                while (false);
                                label$37:
                                do {
                                    if ((this._loadInt((_33_ + 236))) != 1124073472) {
                                        break label$37;
                                    }
                                    if (((((_31_ = (this._loadFloat((_33_ + 284))) + 4.2995666E-8f) <= (_30_ = (this._loadFloat((_33_ + 304))) - (this._loadFloat((_33_ + 288))))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                                        break label$25;
                                    }
                                    this._storeFloat((_33_ + 316), (((this._loadFloat((_33_ + 260))) * 1.0E30f) * 1.0E30f));
                                    break label$0;
                                }
                                while (false);
                                if (((this._loadInt((_33_ + 236))) & 2147483647) < 1125515265) {
                                    break label$26;
                                }
                                this._storeFloat((_33_ + 316), (((this._loadFloat((_33_ + 260))) * 1.0E-30f) * 1.0E-30f));
                                break label$0;
                            }
                            while (false);
                            this._storeFloat((_33_ + 316), (((this._loadFloat((_33_ + 260))) * 1.0E30f) * 1.0E30f));
                            break label$0;
                        }
                        while (false);
                        if ((this._loadInt((_33_ + 236))) != -1021968384) {
                            break label$25;
                        }
                        if (((((_31_ = this._loadFloat((_33_ + 284))) > (_30_ = (this._loadFloat((_33_ + 304))) - (this._loadFloat((_33_ + 288))))) ? 1 : 0) | (((_31_ != _31_) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0))) != 0) {
                            break label$25;
                        }
                        this._storeFloat((_33_ + 316), (((this._loadFloat((_33_ + 260))) * 1.0E-30f) * 1.0E-30f));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_33_ + 232), (((this._storeInt((_33_ + 240), ((this._loadInt((_33_ + 236))) & 2147483647))) >>> 23) + -127));
                    _34_ = this._storeInt((_33_ + 224), 0);
                    label$38:
                    do {
                        if ((this._loadInt((_33_ + 240))) < 1056964609) {
                            break label$38;
                        }
                        _32_ = this._storeInt((_33_ + 232), ((((this._storeInt((_33_ + 224), ((this._loadInt((_33_ + 236))) + (8388608 >>> ((this._loadInt((_33_ + 232))) + 1))))) & 2139095040) >>> 23) + -127));
                        this._storeInt((_33_ + 40), ((this._loadInt((_33_ + 224))) & ((8388607 >>> _32_) ^ -1)));
                        this._storeFloat((_33_ + 256), (this._loadFloat((_33_ + 40))));
                        this._storeInt((_33_ + 224), ((((this._loadInt((_33_ + 224))) & 8388607) | 8388608) >>> (23 - (this._loadInt((_33_ + 232))))));
                        label$39:
                        do {
                            if ((this._loadInt((_33_ + 236))) > -1) {
                                break label$39;
                            }
                            this._storeInt((_33_ + 224), (0 - (this._loadInt((_33_ + 224)))));
                        }
                        while (false);
                        this._storeFloat((_33_ + 288), ((this._loadFloat((_33_ + 288))) - (this._loadFloat((_33_ + 256)))));
                    }
                    while (false);
                    this._storeFloat((_33_ + 32), (this._storeFloat((_33_ + 256), ((this._loadFloat((_33_ + 284))) + (this._loadFloat((_33_ + 288)))))));
                    this._storeInt((_33_ + 24), ((this._storeInt((_33_ + 204), (this._loadInt((_33_ + 32))))) & -32768));
                    this._storeFloat((_33_ + 252), ((this._storeFloat((_33_ + 256), (this._loadFloat((_33_ + 24))))) * 0.69314575f));
                    _31_ = this._storeFloat((_33_ + 304), ((this._storeFloat((_33_ + 248), ((((this._loadFloat((_33_ + 284))) - ((_31_ = this._loadFloat((_33_ + 256))) - (this._loadFloat((_33_ + 288))))) * 0.6931472f) + (_31_ * 1.4286065E-6f)))) + (this._loadFloat((_33_ + 252)))));
                    this._storeFloat((_33_ + 244), ((this._loadFloat((_33_ + 248))) - (_31_ - (this._loadFloat((_33_ + 252))))));
                    _31_ = this._storeFloat((_33_ + 256), ((_31_ = this._loadFloat((_33_ + 304))) * _31_));
                    this._storeFloat((_33_ + 16), (this._storeFloat((_33_ + 304), (1.0f - ((this._storeFloat((_33_ + 268), ((((_31_ = this._storeFloat((_33_ + 276), ((this._loadFloat((_33_ + 304))) - (_31_ * ((_31_ * ((_31_ * ((_31_ * ((_31_ * 4.138137E-8f) + -1.6533902E-6f)) + 6.613756E-5f)) + -0.0027777778f)) + 0.16666667f))))) * (_30_ = this._loadFloat((_33_ + 304)))) / (_31_ + -2.0f)) - ((_31_ = this._loadFloat((_33_ + 244))) + (_30_ * _31_))))) - (this._loadFloat((_33_ + 304))))))));
                    label$40:
                    do {
                        label$41:
                        do {
                            if (((this._storeInt((_33_ + 236), ((this._storeInt((_33_ + 236), (this._loadInt((_33_ + 16))))) + ((this._loadInt((_33_ + 224))) << 23)))) >> 23) > _34_) {
                                break label$41;
                            }
                            this._storeFloat((_33_ + 304), (scalbnf((this._loadFloat((_33_ + 304))), (this._loadInt((_33_ + 224))))));
                            break label$40;
                        }
                        while (false);
                        this._storeInt((_33_ + 8), (this._loadInt((_33_ + 236))));
                        this._storeFloat((_33_ + 304), (this._loadFloat((_33_ + 8))));
                    }
                    while (false);
                    this._storeFloat((_33_ + 316), ((this._loadFloat((_33_ + 260))) * (this._loadFloat((_33_ + 304)))));
                    break label$0;
                }
                while (false);
                this._storeFloat((_33_ + 316), (((this._loadFloat((_33_ + 260))) * 1.0E-30f) * 1.0E-30f));
                break label$0;
            }
            while (false);
            this._storeFloat((_33_ + 316), (this._loadFloat((_33_ + 304))));
        }
        while (false);
        _31_ = this._loadFloat((_33_ + 316));
        this._storeInt((0 + 4), (_33_ + 320));
        return _31_;
    }

    public final void powl(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (pow((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))), _36_)));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final int preadv(int _30_, int _31_, int _32_, long _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_34_ + 24), _31_);
        this._storeInt((_34_ + 20), _32_);
        this._storeLong((_34_ + 8), _33_);
        _32_ = __syscall_ret((this.__syscall_cp.invoke(333, (this._loadInt((_34_ + 28))), (this._loadInt((_34_ + 24))), (this._loadInt((_34_ + 20))), ((int) _33_), ((int) (_33_ >>> 32L)), 0)));
        this._storeInt((0 + 4), (_34_ + 32));
        return _32_;
    }

    public final void __procfdname(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        this._storeInt((_32_ + 4), 0);
        label$1:
        do {
            label$0:
            while (true) {
                if ((this._storeInt(((this._loadInt((_32_ + 12))) + (_31_ = this._loadInt((_32_ + 4)))), (this._loadInt((_31_ + 14272))))) == 0) {
                    break label$1;
                }
                this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) + 1));
                continue label$0;
            }
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                if ((this._loadInt((_32_ + 8))) == 0) {
                    break label$3;
                }
                this._storeInt(_32_, (this._loadInt((_32_ + 8))));
                label$5:
                do {
                    label$4:
                    while (true) {
                        if ((this._loadInt(_32_)) == 0) {
                            break label$5;
                        }
                        this._storeInt(_32_, ((this._loadInt(_32_)) / 10));
                        this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) + 1));
                        continue label$4;
                    }
                }
                while (false);
                this._storeInt(((this._loadInt((_32_ + 12))) + (this._loadInt((_32_ + 4)))), 0);
                label$6:
                while (true) {
                    if ((this._loadInt((_32_ + 8))) == 0) {
                        break label$2;
                    }
                    _31_ = this._loadInt((_32_ + 8));
                    this._storeInt(((this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) + -1))) + (this._loadInt((_32_ + 12)))), ((_31_ % 10) | 48));
                    this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 8))) / 10));
                    continue label$6;
                }
            }
            while (false);
            this._storeInt((_32_ = (this._loadInt((_32_ + 12))) + (this._loadInt((_32_ + 4)))), 48);
            this._storeInt((_32_ + 1), 0);
        }
        while (false);
        return;
    }

    public final int putc(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((this._loadInt(((this._storeInt((_32_ + 4), _31_)) + 76))) < 0) {
                            break label$3;
                        }
                        if ((this.__lockfile.invoke((this._loadInt((_32_ + 4))))) == 0) {
                            break label$3;
                        }
                        if ((this._loadInt((_32_ + 8))) == (this._loadInt(((this._loadInt((_32_ + 4))) + 75)))) {
                            break label$2;
                        }
                        if (((this._loadInt(((_31_ = this._loadInt((_32_ + 4))) + 20))) & 4294967295L) >= ((this._loadInt((_31_ + 16))) & 4294967295L)) {
                            break label$2;
                        }
                        this._storeInt(((_31_ = this._loadInt((_32_ + 4))) + 20), ((_30_ = this._loadInt((_31_ + 20))) + 1));
                        this._storeInt(_30_, (_31_ = this._loadInt((_32_ + 8))));
                        break label$1;
                    }
                    while (false);
                    label$4:
                    do {
                        if ((this._loadInt((_32_ + 8))) == (this._loadInt(((this._loadInt((_32_ + 4))) + 75)))) {
                            break label$4;
                        }
                        if (((this._loadInt(((_31_ = this._loadInt((_32_ + 4))) + 20))) & 4294967295L) >= ((this._loadInt((_31_ + 16))) & 4294967295L)) {
                            break label$4;
                        }
                        this._storeInt(((_31_ = this._loadInt((_32_ + 4))) + 20), ((_31_ = this._loadInt((_31_ + 20))) + 1));
                        this._storeInt((_32_ + 12), (this._storeInt(_31_, (this._loadInt((_32_ + 8))))));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_32_ + 12), (__overflow((this._loadInt((_32_ + 4))), (this._loadInt((_32_ + 8))))));
                    break label$0;
                }
                while (false);
                _31_ = __overflow((this._loadInt((_32_ + 4))), (this._loadInt((_32_ + 8))));
            }
            while (false);
            this._storeInt((_32_ + 8), _31_);
            this.__unlockfile.invoke((this._loadInt((_32_ + 4))));
            this._storeInt((_32_ + 12), (this._loadInt((_32_ + 8))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int putc_unlocked(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_32_ + 12))) == (this._loadInt((_31_ + 75)))) {
                    break label$1;
                }
                if (((this._loadInt(((_31_ = this._loadInt((_32_ + 8))) + 20))) & 4294967295L) >= ((this._loadInt((_31_ + 16))) & 4294967295L)) {
                    break label$1;
                }
                this._storeInt(((_31_ = this._loadInt((_32_ + 8))) + 20), ((_30_ = this._loadInt((_31_ + 20))) + 1));
                this._storeInt(_30_, (_31_ = this._loadInt((_32_ + 12))));
                break label$0;
            }
            while (false);
            _31_ = __overflow((this._loadInt((_32_ + 8))), (this._loadInt((_32_ + 12))));
        }
        while (false);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int putchar(int _30_)
    {
        int _31_ = 0;
        _30_ = fputc((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), (this._loadInt((0 + 16116))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int putchar_unlocked(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) == (this._loadInt(((_30_ = this._loadInt((0 + 16116))) + 75)))) {
                    break label$1;
                }
                if (((this._loadInt((_30_ + 20))) & 4294967295L) >= ((this._loadInt((_30_ + 16))) & 4294967295L)) {
                    break label$1;
                }
                this._storeInt(((_30_ = this._loadInt((0 + 16116))) + 20), ((_32_ = this._loadInt((_30_ + 20))) + 1));
                this._storeInt(_32_, (_30_ = this._loadInt((_31_ + 12))));
                break label$0;
            }
            while (false);
            _30_ = __overflow(_30_, (this._loadInt((_31_ + 12))));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __putenv(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        _31_ = this._storeInt((_32_ + 12), (this._storeInt((_32_ + 16), 0)));
        this._storeInt((_32_ + 8), (strchr((this._loadInt((_32_ + 24))), 61)));
        this._storeInt(_32_, (this._storeInt((_32_ + 4), _31_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                if ((this._loadInt((_32_ + 8))) == 0) {
                                    break label$5;
                                }
                                if ((this._loadInt((_32_ + 8))) == (this._loadInt((_32_ + 24)))) {
                                    break label$4;
                                }
                                label$7:
                                do {
                                    label$6:
                                    while (true) {
                                        _31_ = 0;
                                        label$8:
                                        do {
                                            if ((this._loadInt(((this._loadInt((0 + 3912))) + ((this._loadInt((_32_ + 16))) << 2)))) == 0) {
                                                break label$8;
                                            }
                                            _31_ = ((memcmp((_31_ = this._loadInt((_32_ + 24))), (this._loadInt(((this._loadInt((0 + 3912))) + ((this._loadInt((_32_ + 16))) << 2)))), (((this._loadInt((_32_ + 8))) - _31_) + 1))) != 0) ? 1 : 0;
                                        }
                                        while (false);
                                        if (_31_ == 0) {
                                            break label$7;
                                        }
                                        this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) + 1));
                                        continue label$6;
                                    }
                                }
                                while (false);
                                if ((this._loadInt((_32_ + 20))) == 0) {
                                    break label$1;
                                }
                                if ((this._loadInt((0 + 14288))) == 0) {
                                    break label$3;
                                }
                                label$10:
                                do {
                                    label$9:
                                    while (true) {
                                        _31_ = 0;
                                        label$11:
                                        do {
                                            if ((this._loadInt(((this._loadInt((0 + 14288))) + ((this._loadInt((_32_ + 12))) << 2)))) == 0) {
                                                break label$11;
                                            }
                                            _31_ = ((this._loadInt(((this._loadInt((0 + 14288))) + ((this._loadInt((_32_ + 12))) << 2)))) != (this._loadInt(((this._loadInt((0 + 3912))) + ((this._loadInt((_32_ + 16))) << 2))))) ? 1 : 0;
                                        }
                                        while (false);
                                        if (_31_ == 0) {
                                            break label$10;
                                        }
                                        this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 12))) + 1));
                                        continue label$9;
                                    }
                                }
                                while (false);
                                if ((this._loadInt(((this._loadInt((0 + 14288))) + ((this._loadInt((_32_ + 12))) << 2)))) == 0) {
                                    break label$2;
                                }
                                free((this._loadInt(((this._loadInt((0 + 14288))) + ((this._loadInt((_32_ + 12))) << 2)))));
                                break label$1;
                            }
                            while (false);
                            this._storeInt((_32_ + 28), (unsetenv((this._loadInt((_32_ + 24))))));
                            break label$0;
                        }
                        while (false);
                        this._storeInt((_32_ + 28), -1);
                        break label$0;
                    }
                    while (false);
                    if ((this._storeInt((0 + 14288), (calloc(2, 4)))) == 0) {
                        break label$1;
                    }
                    this._storeInt((this._loadInt((0 + 14288))), (this._loadInt((_32_ + 24))));
                    break label$1;
                }
                while (false);
                if ((this._storeInt(_32_, (realloc((this._loadInt((0 + 14288))), (((this._loadInt((_32_ + 12))) << 2) + 8))))) == 0) {
                    break label$1;
                }
                this._storeInt(((this._storeInt((0 + 14288), (this._loadInt(_32_)))) + ((this._loadInt((_32_ + 12))) << 2)), (this._loadInt((_32_ + 24))));
                this._storeInt((((this._loadInt((0 + 14288))) + ((this._loadInt((_32_ + 12))) << 2)) + 4), 0);
            }
            while (false);
            label$12:
            do {
                label$13:
                do {
                    if ((this._loadInt(((this._loadInt((0 + 3912))) + ((this._loadInt((_32_ + 16))) << 2)))) != 0) {
                        break label$13;
                    }
                    if ((this._storeInt((_32_ + 4), (malloc((((this._loadInt((_32_ + 16))) << 2) + 8))))) == 0) {
                        break label$12;
                    }
                    memcpy((this._loadInt((_32_ + 4))), (this._loadInt((0 + 3912))), ((this._loadInt((_32_ + 16))) << 2));
                    this._storeInt((_31_ = (this._loadInt((_32_ + 4))) + ((this._loadInt((_32_ + 16))) << 2)), (this._loadInt((_32_ + 24))));
                    this._storeInt(((_31_ = this._storeInt((_31_ + 4), 0)) + 3912), (this._loadInt((_32_ + 4))));
                    free((this._loadInt((_31_ + 14292))));
                    this._storeInt((_31_ + 14292), (this._loadInt((_31_ + 3912))));
                }
                while (false);
                _31_ = this._loadInt((_32_ + 16));
                _30_ = this._loadInt((_32_ + 24));
                this._storeInt(((this._loadInt(((this._storeInt((_32_ + 28), 0)) + 3912))) + (_31_ << 2)), _30_);
                break label$0;
            }
            while (false);
            label$14:
            do {
                if ((this._loadInt((_32_ + 20))) == 0) {
                    break label$14;
                }
                if ((this._loadInt((0 + 14288))) == 0) {
                    break label$14;
                }
                this._storeInt(((this._loadInt((0 + 14288))) + ((this._loadInt((_32_ + 12))) << 2)), 0);
            }
            while (false);
            this._storeInt((_32_ + 28), -1);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int putenv(int _30_)
    {
        int _31_ = 0;
        _30_ = __putenv((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 0);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int pwritev(int _30_, int _31_, int _32_, long _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_34_ + 24), _31_);
        this._storeInt((_34_ + 20), _32_);
        this._storeLong((_34_ + 8), _33_);
        _32_ = __syscall_ret((this.__syscall_cp.invoke(334, (this._loadInt((_34_ + 28))), (this._loadInt((_34_ + 24))), (this._loadInt((_34_ + 20))), ((int) _33_), ((int) (_33_ >>> 32L)), 0)));
        this._storeInt((0 + 4), (_34_ + 32));
        return _32_;
    }

    public final void quick_exit(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        __funcs_on_quick_exit();
        this._Exit.invoke((this._loadInt((_31_ + 12))));
        throw (new UnreachableException());
    }

    public final void srand(int _30_)
    {
        this._storeLong((0 + 14296), (((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + -1) & 4294967295L));
        return;
    }

    public final int rand()
    {
        return ((int) ((this._storeLong((0 + 14296), (((this._loadLong((0 + 14296))) * 6364136223846793005L) + 1L))) >>> 33L));
    }

    public final int rand_r(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16));
        _31_ = this._storeInt(_30_, (((this._loadInt(_30_)) * 1103515245) + 12345));
        this._storeInt((_32_ + 12), _30_);
        _30_ = temper(_31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return (_30_ >>> 1);
    }

    public final int temper(int _30_)
    {
        int _31_ = 0;
        return (this._storeInt(((_31_ = (this._loadInt((0 + 4))) - 16) + 12), ((_31_ = this._storeInt((_31_ + 12), ((_30_ = this._storeInt((_31_ + 12), ((_30_ = this._storeInt((_31_ + 12), ((_30_ = this._storeInt((_31_ + 12), _30_)) ^ (_30_ >>> 11)))) ^ ((_30_ << 7) & -1658038656)))) ^ ((_30_ << 15) & -272236544)))) ^ (_31_ >>> 18))));
    }

    public final void srandom(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this.__lock.invoke(14304);
        __srandom((this._loadInt((_31_ + 12))));
        this.__unlock.invoke(14304);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final void __srandom(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeLong(_31_, (this._loadLong((_31_ + 12))));
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((0 + 14312))) == 0) {
                    break label$1;
                }
                _30_ = 1;
                label$2:
                do {
                    if ((this._loadInt((0 + 14312))) == 31) {
                        break label$2;
                    }
                    _30_ = ((this._loadInt((0 + 14312))) == 7) ? 1 : 0;
                }
                while (false);
                _temp$0 = 3;
                _temp$1 = 1;
                _temp$2 = (_30_ != 0) ? _temp$0 : _temp$1;
                this._storeInt((0 + 14320), _temp$2);
                _30_ = this._storeInt((_31_ + 8), (this._storeInt((0 + 14324), 0)));
                label$4:
                do {
                    label$3:
                    while (true) {
                        if ((this._loadInt((_31_ + 8))) >= (this._loadInt((_30_ + 14312)))) {
                            break label$4;
                        }
                        this._storeLong(_31_, (lcg64((this._loadLong(_31_)))));
                        this._storeLong(((this._loadInt((_30_ + 14316))) + ((_32_ = this._loadInt((_31_ + 8))) << 2)), (this._loadLong((_31_ + 4))));
                        this._storeInt((_31_ + 8), (_32_ + 1));
                        continue label$3;
                    }
                }
                while (false);
                this._storeInt((_30_ = this._loadInt((0 + 14316))), ((this._loadInt(_30_)) | 1));
                break label$0;
            }
            while (false);
            this._storeLong((this._loadInt((0 + 14316))), (this._loadLong(_31_)));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final long lcg64(long _30_)
    {
        return (((this._storeLong((((this._loadInt((0 + 4))) - 16) + 8), _30_)) * 6364136223846793005L) + 1L);
    }

    public final int initstate(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_33_ + 16), _32_)) & 4294967295L) > (7 & 4294967295L)) {
                    break label$1;
                }
                this._storeInt((_33_ + 28), 0);
                break label$0;
            }
            while (false);
            this.__lock.invoke(14304);
            this._storeInt((_33_ + 12), (savestate()));
            label$2:
            do {
                label$3:
                do {
                    if (((this._loadInt((_33_ + 16))) & 4294967295L) > (31 & 4294967295L)) {
                        break label$3;
                    }
                    this._storeInt((0 + 14312), 0);
                    break label$2;
                }
                while (false);
                label$4:
                do {
                    if (((this._loadInt((_33_ + 16))) & 4294967295L) > (63 & 4294967295L)) {
                        break label$4;
                    }
                    this._storeInt((0 + 14312), 7);
                    break label$2;
                }
                while (false);
                label$5:
                do {
                    if (((this._loadInt((_33_ + 16))) & 4294967295L) > (127 & 4294967295L)) {
                        break label$5;
                    }
                    this._storeInt((0 + 14312), 15);
                    break label$2;
                }
                while (false);
                label$6:
                do {
                    if (((this._loadInt((_33_ + 16))) & 4294967295L) > (255 & 4294967295L)) {
                        break label$6;
                    }
                    this._storeInt((0 + 14312), 31);
                    break label$2;
                }
                while (false);
                this._storeInt((0 + 14312), 63);
            }
            while (false);
            this._storeInt((0 + 14316), ((this._loadInt((_33_ + 20))) + 4));
            __srandom((this._loadInt((_33_ + 24))));
            savestate();
            this.__unlock.invoke(14304);
            this._storeInt((_33_ + 28), (this._loadInt((_33_ + 12))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int savestate()
    {
        this._storeInt(((this._loadInt((0 + 14316))) + -4), ((((this._loadInt((0 + 14312))) << 16) | ((this._loadInt((0 + 14320))) << 8)) | (this._loadInt((0 + 14324)))));
        return ((this._loadInt((0 + 14316))) + -4);
    }

    public final int setstate(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this.__lock.invoke(14304);
        this._storeInt((_31_ + 8), (savestate()));
        loadstate((this._loadInt((_31_ + 12))));
        this.__unlock.invoke(14304);
        _30_ = this._loadInt((_31_ + 8));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final void loadstate(int _30_)
    {
        this._storeInt((0 + 14316), ((_30_ = this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) + 4));
        this._storeInt((0 + 14312), (this._loadInt((_30_ + 2))));
        this._storeInt((0 + 14320), (((this._loadInt(_30_)) >>> 8) & 255));
        this._storeInt((0 + 14324), (this._loadInt(((this._loadInt((0 + 14316))) + -4))));
        return;
    }

    public final int random()
    {
        int _30_ = 0;
        int _31_ = 0;
        int _32_ = 0;
        _30_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16));
        this.__lock.invoke(14304);
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((0 + 14312))) == 0) {
                    break label$1;
                }
                this._storeInt((_31_ = (_32_ = this._loadInt((0 + 14316))) + ((this._loadInt((0 + 14320))) << 2)), ((this._loadInt(_31_)) + (this._loadInt((_32_ + ((this._loadInt((0 + 14324))) << 2))))));
                this._storeInt((_30_ + 12), ((this._loadInt(((this._loadInt((0 + 14316))) + ((_32_ = this._loadInt((0 + 14320))) << 2)))) >>> 1));
                label$2:
                do {
                    if ((this._storeInt((0 + 14320), (_32_ + 1))) != (this._loadInt((0 + 14312)))) {
                        break label$2;
                    }
                    this._storeInt((0 + 14320), 0);
                }
                while (false);
                if ((this._storeInt((0 + 14324), ((this._loadInt((0 + 14324))) + 1))) != (this._loadInt((0 + 14312)))) {
                    break label$0;
                }
                this._storeInt((0 + 14324), 0);
                break label$0;
            }
            while (false);
            _32_ = lcg31((this._loadInt((this._loadInt((0 + 14316))))));
            this._storeInt((_30_ + 12), (this._storeInt((this._loadInt((0 + 14316))), _32_)));
        }
        while (false);
        this.__unlock.invoke(14304);
        _32_ = this._loadInt((_30_ + 12));
        this._storeInt((0 + 4), (_30_ + 16));
        return _32_;
    }

    public final int lcg31(int _30_)
    {
        return ((((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) * 1103515245) + 12345) & 2147483647);
    }

    public final int read(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __syscall_ret((this.__syscall_cp.invoke(3, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, 0, 0, 0)));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int readlink(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __syscall_ret((this.__syscall3.invoke(85, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_)));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int readlinkat(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_34_ + 8), _31_);
        this._storeInt((_34_ + 4), _32_);
        this._storeInt(_34_, _33_);
        _33_ = __syscall_ret((this.__syscall4.invoke(305, (this._loadInt((_34_ + 12))), (this._loadInt((_34_ + 8))), (this._loadInt((_34_ + 4))), _33_)));
        this._storeInt((0 + 4), (_34_ + 16));
        return _33_;
    }

    public final int readv(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __syscall_ret((this.__syscall_cp.invoke(145, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, 0, 0, 0)));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int regerror(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_34_ + 24), _31_);
        this._storeInt((_34_ + 20), _32_);
        this._storeInt((_34_ + 16), _33_);
        this._storeInt((_34_ + 12), 14464);
        label$1:
        do {
            label$0:
            while (true) {
                _33_ = 0;
                label$2:
                do {
                    if ((this._loadInt((_34_ + 28))) == 0) {
                        break label$2;
                    }
                    _33_ = ((this._loadInt((this._loadInt((_34_ + 12))))) != 0) ? 1 : 0;
                }
                while (false);
                if (_33_ == 0) {
                    break label$1;
                }
                this._storeInt((_34_ + 28), ((this._loadInt((_34_ + 28))) + -1));
                this._storeInt((_34_ + 12), (((strlen((this._loadInt((_34_ + 12))))) + (this._loadInt((_34_ + 12)))) + 1));
                continue label$0;
            }
        }
        while (false);
        label$3:
        do {
            if ((this._loadInt((this._loadInt((_34_ + 12))))) != 0) {
                break label$3;
            }
            this._storeInt((_34_ + 12), ((this._loadInt((_34_ + 12))) + 1));
        }
        while (false);
        _33_ = this._storeInt((_34_ + 12), (this.__lctrans_cur.invoke((this._loadInt((_34_ + 12))))));
        _32_ = this._loadInt((_34_ + 16));
        _31_ = this._loadInt((_34_ + 20));
        this._storeInt(_34_, _33_);
        _33_ = this.snprintf.invoke(_31_, _32_, 14752, _34_);
        this._storeInt((0 + 4), (_34_ + 32));
        return (_33_ + 1);
    }

    public final double remainder(double _30_, double _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeDouble((_32_ + 16), _31_);
        _31_ = remquo((this._loadDouble((_32_ + 24))), _31_, (_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final float remainderf(float _30_, float _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeFloat((_32_ + 8), _31_);
        _31_ = remquof((this._loadFloat((_32_ + 12))), _31_, (_32_ + 4));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final void remainderl(int _30_, long _31_, long _32_, long _33_, long _34_)
    {
        int _35_ = 0;
        double _36_ = 0.0;
        this._storeLong(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeLong((_35_ + 40), _32_);
        this._storeLong((_35_ + 24), _34_);
        _36_ = this.__trunctfdf2.invoke((this._storeLong((_35_ + 16), _33_)), _34_);
        this.__extenddftf2.invoke(_35_, (remainder((this.__trunctfdf2.invoke((this._loadLong((_35_ + 32))), (this._loadLong((_35_ + 40))))), _36_)));
        this._storeLong((_30_ + 8), (this._loadLong((_35_ + 8))));
        this._storeLong(_30_, (this._loadLong(_35_)));
        this._storeInt((0 + 4), (_35_ + 48));
        return;
    }

    public final int remove(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), (this.__syscall1.invoke(10, (this._storeInt((_31_ + 12), _30_)))))) != -21) {
                break label$0;
            }
            this._storeInt((_31_ + 8), (this.__syscall1.invoke(40, (this._loadInt((_31_ + 12))))));
        }
        while (false);
        _30_ = __syscall_ret((this._loadInt((_31_ + 8))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double remquo(double _30_, double _31_, int _32_)
    {
        int _33_ = 0;
        this._storeDouble(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 96))) + 80), _30_);
        this._storeDouble((_33_ + 72), _31_);
        this._storeInt((_33_ + 68), _32_);
        this._storeDouble((_33_ + 56), (this._loadDouble((_33_ + 80))));
        this._storeDouble((_33_ + 48), (this._loadDouble((_33_ + 72))));
        this._storeLong((_33_ + 44), (((this._loadLong((_33_ + 56))) >>> 52L) & 2047L));
        this._storeLong((_33_ + 40), (((this._loadLong((_33_ + 48))) >>> 52L) & 2047L));
        this._storeLong((_33_ + 36), ((this._loadLong((_33_ + 56))) >>> 63L));
        this._storeLong((_33_ + 32), ((this._loadLong((_33_ + 48))) >>> 63L));
        this._storeLong((_33_ + 8), (this._loadLong((_33_ + 56))));
        this._storeInt((this._loadInt((_33_ + 68))), 0);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadLong((_33_ + 48))) << 1L) == 0) {
                        break label$2;
                    }
                    if ((((__DOUBLE_BITS$2e$215((this._loadDouble((_33_ + 72))))) & 9223372036854775807L) & 4294967295L) > (9218868437227405312L & 4294967295L)) {
                        break label$2;
                    }
                    if ((this._loadInt((_33_ + 44))) != 2047) {
                        break label$1;
                    }
                }
                while (false);
                this._storeDouble((_33_ + 88), ((_31_ = (this._loadDouble((_33_ + 80))) * (this._loadDouble((_33_ + 72)))) / _31_));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    label$5:
                    do {
                        if (((this._loadLong((_33_ + 56))) << 1L) == 0L) {
                            break label$5;
                        }
                        if ((this._loadInt((_33_ + 44))) == 0) {
                            break label$4;
                        }
                        this._storeLong((_33_ + 8), ((this._storeLong((_33_ + 8), ((this._loadLong((_33_ + 8))) & 4503599627370495L))) | 4503599627370496L));
                        break label$3;
                    }
                    while (false);
                    this._storeDouble((_33_ + 88), (this._loadDouble((_33_ + 80))));
                    break label$0;
                }
                while (false);
                this._storeLong((_33_ + 16), ((this._loadLong((_33_ + 8))) << 12L));
                label$7:
                do {
                    label$6:
                    while (true) {
                        if (((this._loadLong((_33_ + 16))) >>> 63L) != 0L) {
                            break label$7;
                        }
                        this._storeInt((_33_ + 44), ((this._loadInt((_33_ + 44))) + -1));
                        this._storeLong((_33_ + 16), ((this._loadLong((_33_ + 16))) << 1L));
                        continue label$6;
                    }
                }
                while (false);
                this._storeLong((_33_ + 8), ((this._loadLong((_33_ + 8))) << ((1 - (this._loadInt((_33_ + 44)))) & 4294967295L)));
            }
            while (false);
            label$8:
            do {
                label$9:
                do {
                    if ((this._loadInt((_33_ + 40))) == 0) {
                        break label$9;
                    }
                    this._storeLong((_33_ + 48), ((this._storeLong((_33_ + 48), ((this._loadLong((_33_ + 48))) & 4503599627370495L))) | 4503599627370496L));
                    break label$8;
                }
                while (false);
                this._storeLong((_33_ + 16), ((this._loadLong((_33_ + 48))) << 12L));
                label$11:
                do {
                    label$10:
                    while (true) {
                        if (((this._loadLong((_33_ + 16))) >>> 63L) != 0L) {
                            break label$11;
                        }
                        this._storeInt((_33_ + 40), ((this._loadInt((_33_ + 40))) + -1));
                        this._storeLong((_33_ + 16), ((this._loadLong((_33_ + 16))) << 1L));
                        continue label$10;
                    }
                }
                while (false);
                this._storeLong((_33_ + 48), ((this._loadLong((_33_ + 48))) << ((1 - (this._loadInt((_33_ + 40)))) & 4294967295L)));
            }
            while (false);
            this._storeInt((_33_ + 28), 0);
            label$12:
            do {
                label$13:
                do {
                    if ((this._loadInt((_33_ + 44))) >= (this._loadInt((_33_ + 40)))) {
                        break label$13;
                    }
                    if (((this._loadInt((_33_ + 44))) + 1) == (this._loadInt((_33_ + 40)))) {
                        break label$12;
                    }
                    this._storeDouble((_33_ + 88), (this._loadDouble((_33_ + 80))));
                    break label$0;
                }
                while (false);
                label$15:
                do {
                    label$14:
                    while (true) {
                        if ((this._loadInt((_33_ + 44))) <= (this._loadInt((_33_ + 40)))) {
                            break label$15;
                        }
                        label$16:
                        do {
                            if (((this._storeLong((_33_ + 16), ((this._loadLong((_33_ + 8))) - (this._loadLong((_33_ + 48)))))) >>> 63L) != 0L) {
                                break label$16;
                            }
                            this._storeLong((_33_ + 8), (this._loadLong((_33_ + 16))));
                            this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + 1));
                        }
                        while (false);
                        this._storeLong((_33_ + 8), ((this._loadLong((_33_ + 8))) << 1L));
                        this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) << 1));
                        this._storeInt((_33_ + 44), ((this._loadInt((_33_ + 44))) + -1));
                        continue label$14;
                    }
                }
                while (false);
                label$17:
                do {
                    if (((this._storeLong((_33_ + 16), ((this._loadLong((_33_ + 8))) - (this._loadLong((_33_ + 48)))))) >>> 63L) != 0L) {
                        break label$17;
                    }
                    this._storeLong((_33_ + 8), (this._loadLong((_33_ + 16))));
                    this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + 1));
                }
                while (false);
                label$18:
                do {
                    if ((this._loadLong((_33_ + 8))) == 0L) {
                        break label$18;
                    }
                    label$19:
                    while (true) {
                        if (((this._loadLong((_33_ + 8))) >>> 52L) != 0L) {
                            break label$12;
                        }
                        this._storeLong((_33_ + 8), ((this._loadLong((_33_ + 8))) << 1L));
                        this._storeInt((_33_ + 44), ((this._loadInt((_33_ + 44))) + -1));
                        continue label$19;
                    }
                }
                while (false);
                this._storeInt((_33_ + 44), -60);
            }
            while (false);
            label$21:
            do {
                label$22:
                do {
                    if ((this._loadInt((_33_ + 44))) < 1) {
                        break label$22;
                    }
                    this._storeLong((_33_ + 8), ((this._storeLong((_33_ + 8), ((this._loadLong((_33_ + 8))) + -4503599627370496L))) | ((this._loadLong((_33_ + 44))) << 52L)));
                    break label$21;
                }
                while (false);
                this._storeLong((_33_ + 8), ((this._loadLong((_33_ + 8))) >>> ((1 - (this._loadInt((_33_ + 44)))) & 4294967295L)));
            }
            while (false);
            this._storeLong((_33_ + 56), (this._loadLong((_33_ + 8))));
            this._storeDouble((_33_ + 80), (this._loadDouble((_33_ + 56))));
            label$23:
            do {
                if ((this._loadInt((_33_ + 32))) == 0) {
                    break label$23;
                }
                this._storeDouble((_33_ + 72), (-(this._loadDouble((_33_ + 72)))));
            }
            while (false);
            label$24:
            do {
                label$25:
                do {
                    if ((this._loadInt((_33_ + 44))) == (this._loadInt((_33_ + 40)))) {
                        break label$25;
                    }
                    if (((this._loadInt((_33_ + 44))) + 1) != (this._loadInt((_33_ + 40)))) {
                        break label$24;
                    }
                    if (((_31_ = this._loadDouble((_33_ + 80))) + _31_) > (this._loadDouble((_33_ + 72)))) {
                        break label$25;
                    }
                    if (((_31_ = this._loadDouble((_33_ + 80))) + _31_) != (this._loadDouble((_33_ + 72)))) {
                        break label$24;
                    }
                    if (((this._loadInt((_33_ + 28))) & 1) == 0) {
                        break label$24;
                    }
                }
                while (false);
                this._storeDouble((_33_ + 80), ((this._loadDouble((_33_ + 80))) - (this._loadDouble((_33_ + 72)))));
                this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + 1));
            }
            while (false);
            this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) & 2147483647));
            label$26:
            do {
                label$27:
                do {
                    if (((this._loadInt((_33_ + 36))) ^ (this._loadInt((_33_ + 32)))) == 0) {
                        break label$27;
                    }
                    _32_ = 0 - (this._loadInt((_33_ + 28)));
                    break label$26;
                }
                while (false);
                _32_ = this._loadInt((_33_ + 28));
            }
            while (false);
            this._storeInt((this._loadInt((_33_ + 68))), _32_);
            label$28:
            do {
                label$29:
                do {
                    if ((this._loadInt((_33_ + 36))) == 0) {
                        break label$29;
                    }
                    _31_ = -(this._loadDouble((_33_ + 80)));
                    break label$28;
                }
                while (false);
                _31_ = this._loadDouble((_33_ + 80));
            }
            while (false);
            this._storeDouble((_33_ + 88), _31_);
        }
        while (false);
        _31_ = this._loadDouble((_33_ + 88));
        this._storeInt((0 + 4), (_33_ + 96));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$214(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$215(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float remquof(float _30_, float _31_, int _32_)
    {
        int _33_ = 0;
        this._storeFloat(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 56), _30_);
        this._storeFloat((_33_ + 52), _31_);
        this._storeInt((_33_ + 48), _32_);
        this._storeFloat((_33_ + 40), (this._loadFloat((_33_ + 56))));
        this._storeFloat((_33_ + 32), (this._loadFloat((_33_ + 52))));
        this._storeInt((_33_ + 28), (((this._loadInt((_33_ + 40))) >>> 23) & 255));
        this._storeInt((_33_ + 24), (((this._loadInt((_33_ + 32))) >>> 23) & 255));
        this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 40))) >>> 31));
        this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 32))) >>> 31));
        this._storeInt((_33_ + 4), (this._loadInt((_33_ + 40))));
        this._storeInt((this._loadInt((_33_ + 48))), 0);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if (((this._loadInt((_33_ + 32))) << 1) == 0) {
                        break label$2;
                    }
                    if ((((__FLOAT_BITS$2e$218((this._loadFloat((_33_ + 52))))) & 2147483647) & 4294967295L) > (2139095040 & 4294967295L)) {
                        break label$2;
                    }
                    if ((this._loadInt((_33_ + 28))) != 255) {
                        break label$1;
                    }
                }
                while (false);
                this._storeFloat((_33_ + 60), ((_31_ = (this._loadFloat((_33_ + 56))) * (this._loadFloat((_33_ + 52)))) / _31_));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    label$5:
                    do {
                        if (((this._loadInt((_33_ + 40))) << 1) == 0) {
                            break label$5;
                        }
                        if ((this._loadInt((_33_ + 28))) == 0) {
                            break label$4;
                        }
                        this._storeInt((_33_ + 4), ((this._storeInt((_33_ + 4), ((this._loadInt((_33_ + 4))) & 8388607))) | 8388608));
                        break label$3;
                    }
                    while (false);
                    this._storeFloat((_33_ + 60), (this._loadFloat((_33_ + 56))));
                    break label$0;
                }
                while (false);
                this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 4))) << 9));
                label$7:
                do {
                    label$6:
                    while (true) {
                        if (((this._loadInt((_33_ + 8))) >>> 31) != 0) {
                            break label$7;
                        }
                        this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + -1));
                        this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) << 1));
                        continue label$6;
                    }
                }
                while (false);
                this._storeInt((_33_ + 4), ((this._loadInt((_33_ + 4))) << (1 - (this._loadInt((_33_ + 28))))));
            }
            while (false);
            label$8:
            do {
                label$9:
                do {
                    if ((this._loadInt((_33_ + 24))) == 0) {
                        break label$9;
                    }
                    this._storeInt((_33_ + 32), ((this._storeInt((_33_ + 32), ((this._loadInt((_33_ + 32))) & 8388607))) | 8388608));
                    break label$8;
                }
                while (false);
                this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 32))) << 9));
                label$11:
                do {
                    label$10:
                    while (true) {
                        if (((this._loadInt((_33_ + 8))) >>> 31) != 0) {
                            break label$11;
                        }
                        this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + -1));
                        this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) << 1));
                        continue label$10;
                    }
                }
                while (false);
                this._storeInt((_33_ + 32), ((this._loadInt((_33_ + 32))) << (1 - (this._loadInt((_33_ + 24))))));
            }
            while (false);
            this._storeInt((_33_ + 12), 0);
            label$12:
            do {
                label$13:
                do {
                    if ((this._loadInt((_33_ + 28))) >= (this._loadInt((_33_ + 24)))) {
                        break label$13;
                    }
                    if (((this._loadInt((_33_ + 28))) + 1) == (this._loadInt((_33_ + 24)))) {
                        break label$12;
                    }
                    this._storeFloat((_33_ + 60), (this._loadFloat((_33_ + 56))));
                    break label$0;
                }
                while (false);
                label$15:
                do {
                    label$14:
                    while (true) {
                        if ((this._loadInt((_33_ + 28))) <= (this._loadInt((_33_ + 24)))) {
                            break label$15;
                        }
                        label$16:
                        do {
                            if (((this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 4))) - (this._loadInt((_33_ + 32)))))) >>> 31) != 0) {
                                break label$16;
                            }
                            this._storeInt((_33_ + 4), (this._loadInt((_33_ + 8))));
                            this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 1));
                        }
                        while (false);
                        this._storeInt((_33_ + 4), ((this._loadInt((_33_ + 4))) << 1));
                        this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) << 1));
                        this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + -1));
                        continue label$14;
                    }
                }
                while (false);
                label$17:
                do {
                    if (((this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 4))) - (this._loadInt((_33_ + 32)))))) >>> 31) != 0) {
                        break label$17;
                    }
                    this._storeInt((_33_ + 4), (this._loadInt((_33_ + 8))));
                    this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 1));
                }
                while (false);
                label$18:
                do {
                    if ((this._loadInt((_33_ + 4))) == 0) {
                        break label$18;
                    }
                    label$19:
                    while (true) {
                        if (((this._loadInt((_33_ + 4))) >>> 23) != 0) {
                            break label$12;
                        }
                        this._storeInt((_33_ + 4), ((this._loadInt((_33_ + 4))) << 1));
                        this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + -1));
                        continue label$19;
                    }
                }
                while (false);
                this._storeInt((_33_ + 28), -30);
            }
            while (false);
            label$21:
            do {
                label$22:
                do {
                    if ((this._loadInt((_33_ + 28))) < 1) {
                        break label$22;
                    }
                    this._storeInt((_33_ + 4), ((this._storeInt((_33_ + 4), ((this._loadInt((_33_ + 4))) + -8388608))) | ((this._loadInt((_33_ + 28))) << 23)));
                    break label$21;
                }
                while (false);
                this._storeInt((_33_ + 4), ((this._loadInt((_33_ + 4))) >>> (1 - (this._loadInt((_33_ + 28))))));
            }
            while (false);
            this._storeInt((_33_ + 40), (this._loadInt((_33_ + 4))));
            this._storeFloat((_33_ + 56), (this._loadFloat((_33_ + 40))));
            label$23:
            do {
                if ((this._loadInt((_33_ + 16))) == 0) {
                    break label$23;
                }
                this._storeFloat((_33_ + 52), (-(this._loadFloat((_33_ + 52)))));
            }
            while (false);
            label$24:
            do {
                label$25:
                do {
                    if ((this._loadInt((_33_ + 28))) == (this._loadInt((_33_ + 24)))) {
                        break label$25;
                    }
                    if (((this._loadInt((_33_ + 28))) + 1) != (this._loadInt((_33_ + 24)))) {
                        break label$24;
                    }
                    if (((_31_ = this._loadFloat((_33_ + 56))) + _31_) > (this._loadFloat((_33_ + 52)))) {
                        break label$25;
                    }
                    if (((_31_ = this._loadFloat((_33_ + 56))) + _31_) != (this._loadFloat((_33_ + 52)))) {
                        break label$24;
                    }
                    if (((this._loadInt((_33_ + 12))) & 1) == 0) {
                        break label$24;
                    }
                }
                while (false);
                this._storeFloat((_33_ + 56), ((this._loadFloat((_33_ + 56))) - (this._loadFloat((_33_ + 52)))));
                this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 1));
            }
            while (false);
            this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) & 2147483647));
            label$26:
            do {
                label$27:
                do {
                    if (((this._loadInt((_33_ + 20))) ^ (this._loadInt((_33_ + 16)))) == 0) {
                        break label$27;
                    }
                    _32_ = 0 - (this._loadInt((_33_ + 12)));
                    break label$26;
                }
                while (false);
                _32_ = this._loadInt((_33_ + 12));
            }
            while (false);
            this._storeInt((this._loadInt((_33_ + 48))), _32_);
            label$28:
            do {
                label$29:
                do {
                    if ((this._loadInt((_33_ + 20))) == 0) {
                        break label$29;
                    }
                    _31_ = -(this._loadFloat((_33_ + 56)));
                    break label$28;
                }
                while (false);
                _31_ = this._loadFloat((_33_ + 56));
            }
            while (false);
            this._storeFloat((_33_ + 60), _31_);
        }
        while (false);
        _31_ = this._loadFloat((_33_ + 60));
        this._storeInt((0 + 4), (_33_ + 64));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$218(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$219(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final void remquol(
            int _30_,
            long _31_,
            long _32_,
            long _33_,
            long _34_,
            int _35_)
    {
        int _36_ = 0;
        double _37_ = 0.0;
        this._storeLong(((_36_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 48), _31_);
        this._storeLong((_36_ + 32), _33_);
        this._storeLong((_36_ + 56), _32_);
        this._storeInt((_36_ + 28), _35_);
        this._storeLong((_36_ + 40), _34_);
        _37_ = this.__trunctfdf2.invoke((this._loadLong((_36_ + 32))), _34_);
        this.__extenddftf2.invoke((_36_ + 8), (remquo((this.__trunctfdf2.invoke((this._loadLong((_36_ + 48))), (this._loadLong((_36_ + 56))))), _37_, _35_)));
        this._storeLong((_30_ + 8), (this._loadLong(((_36_ + 8) + 8))));
        this._storeLong(_30_, (this._loadLong((_36_ + 8))));
        this._storeInt((0 + 4), (_36_ + 64));
        return;
    }

    public final int rename(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __syscall_ret((this.__syscall2.invoke(38, (this._loadInt((_32_ + 12))), _31_)));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int renameat(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_34_ + 8), _31_);
        this._storeInt((_34_ + 4), _32_);
        this._storeInt(_34_, _33_);
        _33_ = __syscall_ret((this.__syscall4.invoke(302, (this._loadInt((_34_ + 12))), (this._loadInt((_34_ + 8))), (this._loadInt((_34_ + 4))), _33_)));
        this._storeInt((0 + 4), (_34_ + 16));
        return _33_;
    }

    public final void rewind(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)) + 76))) < 0) {
                break label$0;
            }
            _32_ = this.__lockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        this._storeInt((_31_ + 8), _32_);
        __fseeko_unlocked((this._loadInt((_31_ + 12))), 0L, 0);
        this._storeInt((_32_ = this._loadInt((_31_ + 12))), ((this._loadInt(_32_)) & -33));
        label$1:
        do {
            if ((this._loadInt((_31_ + 8))) == 0) {
                break label$1;
            }
            this.__unlockfile.invoke((this._loadInt((_31_ + 12))));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int rindex(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = strrchr((this._loadInt((_32_ + 12))), _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final double rint(double _30_)
    {
        int _31_ = 0;
        double _temp$0 = 0.0;
        double _temp$1 = 0.0;
        double _temp$2 = 0.0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 48) + 24), (this._storeDouble((_31_ + 32), _30_)));
        this._storeLong((_31_ + 20), (((this._loadLong((_31_ + 24))) >>> 52L) & 2047L));
        this._storeLong((_31_ + 16), ((this._loadLong((_31_ + 24))) >>> 63L));
        label$0:
        do {
            if ((this._loadInt((_31_ + 20))) < 1075) {
                break label$0;
            }
            this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 32))));
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                if ((this._loadInt((_31_ + 16))) == 0) {
                    break label$2;
                }
                this._storeDouble((_31_ + 8), (((this._loadDouble((_31_ + 32))) - 4.503599627370496E15) + 4.503599627370496E15));
                break label$1;
            }
            while (false);
            this._storeDouble((_31_ + 8), (((this._loadDouble((_31_ + 32))) + 4.503599627370496E15) - 4.503599627370496E15));
        }
        while (false);
        label$3:
        do {
            if ((this._loadDouble((_31_ + 8))) != 0.0) {
                break label$3;
            }
            _temp$0 = -0.0;
            _temp$1 = 0.0;
            _temp$2 = ((this._loadInt((_31_ + 16))) != 0) ? _temp$0 : _temp$1;
            this._storeDouble((_31_ + 40), _temp$2);
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 8))));
        return (this._loadDouble((_31_ + 40)));
    }

    public final float rintf(float _30_)
    {
        int _31_ = 0;
        float _temp$0 = 0.0f;
        float _temp$1 = 0.0f;
        float _temp$2 = 0.0f;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 32) + 16), (this._storeFloat((_31_ + 24), _30_)));
        this._storeInt((_31_ + 12), (((this._loadInt((_31_ + 16))) >>> 23) & 255));
        this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 16))) >>> 31));
        label$0:
        do {
            if ((this._loadInt((_31_ + 12))) < 150) {
                break label$0;
            }
            this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
            return (this._loadFloat((_31_ + 28)));
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                if ((this._loadInt((_31_ + 8))) == 0) {
                    break label$2;
                }
                this._storeFloat((_31_ + 4), (((this._loadFloat((_31_ + 24))) - 8388608.0f) + 8388608.0f));
                break label$1;
            }
            while (false);
            this._storeFloat((_31_ + 4), (((this._loadFloat((_31_ + 24))) + 8388608.0f) - 8388608.0f));
        }
        while (false);
        label$3:
        do {
            if ((this._loadFloat((_31_ + 4))) != 0.0f) {
                break label$3;
            }
            _temp$0 = -0.0f;
            _temp$1 = 0.0f;
            _temp$2 = ((this._loadInt((_31_ + 8))) != 0) ? _temp$0 : _temp$1;
            this._storeFloat((_31_ + 28), _temp$2);
            return (this._loadFloat((_31_ + 28)));
        }
        while (false);
        this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 4))));
        return (this._loadFloat((_31_ + 28)));
    }

    public final void rintl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (Math.round((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int rmdir(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(40, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double round(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 48) + 24), (this._storeDouble((_31_ + 32), _30_)));
        label$0:
        do {
            if ((this._storeInt((_31_ + 20), ((int) (((this._loadLong((_31_ + 24))) >>> 52L) & 2047L)))) < 1075) {
                break label$0;
            }
            this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 32))));
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        label$1:
        do {
            if (((this._loadLong((_31_ + 24))) >>> 63L) == 0) {
                break label$1;
            }
            this._storeDouble((_31_ + 32), (-(this._loadDouble((_31_ + 32)))));
        }
        while (false);
        label$2:
        do {
            if ((this._loadInt((_31_ + 20))) > 1021) {
                break label$2;
            }
            this._storeDouble(_31_, ((this._loadDouble((_31_ + 32))) + 4.503599627370496E15));
            this._storeDouble((_31_ + 40), ((this._loadDouble((_31_ + 24))) * 0.0));
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        label$3:
        do {
            label$4:
            do {
                if (((((_30_ = this._storeDouble((_31_ + 8), ((((_30_ = this._loadDouble((_31_ + 32))) + 4.503599627370496E15) - 4.503599627370496E15) - _30_))) <= 0.5) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$4;
                }
                this._storeDouble((_31_ + 8), (((this._loadDouble((_31_ + 8))) + (this._loadDouble((_31_ + 32)))) + -1.0));
                break label$3;
            }
            while (false);
            label$5:
            do {
                if (((((_30_ = this._loadDouble((_31_ + 8))) > -0.5) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$5;
                }
                this._storeDouble((_31_ + 8), (((this._loadDouble((_31_ + 8))) + (this._loadDouble((_31_ + 32)))) + 1.0));
                break label$3;
            }
            while (false);
            this._storeDouble((_31_ + 8), ((this._loadDouble((_31_ + 8))) + (this._loadDouble((_31_ + 32)))));
        }
        while (false);
        label$6:
        do {
            if (((this._loadLong((_31_ + 24))) >>> 63L) == 0) {
                break label$6;
            }
            this._storeDouble((_31_ + 8), (-(this._loadDouble((_31_ + 8)))));
        }
        while (false);
        this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 8))));
        return (this._loadDouble((_31_ + 40)));
    }

    public final float roundf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 32) + 16), (this._storeFloat((_31_ + 24), _30_)));
        label$0:
        do {
            if ((this._storeInt((_31_ + 12), (((this._loadInt((_31_ + 16))) >>> 23) & 255))) < 150) {
                break label$0;
            }
            this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
            return (this._loadFloat((_31_ + 28)));
        }
        while (false);
        label$1:
        do {
            if (((this._loadInt((_31_ + 16))) >>> 31) == 0) {
                break label$1;
            }
            this._storeFloat((_31_ + 24), (-(this._loadFloat((_31_ + 24)))));
        }
        while (false);
        label$2:
        do {
            if ((this._loadInt((_31_ + 12))) > 125) {
                break label$2;
            }
            this._storeFloat((_31_ + 4), ((this._loadFloat((_31_ + 24))) + 8388608.0f));
            this._storeFloat((_31_ + 28), ((this._loadFloat((_31_ + 16))) * 0.0f));
            return (this._loadFloat((_31_ + 28)));
        }
        while (false);
        label$3:
        do {
            label$4:
            do {
                if (((((_30_ = this._storeFloat((_31_ + 8), ((((_30_ = this._loadFloat((_31_ + 24))) + 8388608.0f) - 8388608.0f) - _30_))) <= 0.5f) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$4;
                }
                this._storeFloat((_31_ + 8), (((this._loadFloat((_31_ + 8))) + (this._loadFloat((_31_ + 24)))) + -1.0f));
                break label$3;
            }
            while (false);
            label$5:
            do {
                if (((((_30_ = this._loadFloat((_31_ + 8))) > -0.5f) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$5;
                }
                this._storeFloat((_31_ + 8), (((this._loadFloat((_31_ + 8))) + (this._loadFloat((_31_ + 24)))) + 1.0f));
                break label$3;
            }
            while (false);
            this._storeFloat((_31_ + 8), ((this._loadFloat((_31_ + 8))) + (this._loadFloat((_31_ + 24)))));
        }
        while (false);
        label$6:
        do {
            if (((this._loadInt((_31_ + 16))) >>> 31) == 0) {
                break label$6;
            }
            this._storeFloat((_31_ + 8), (-(this._loadFloat((_31_ + 8)))));
        }
        while (false);
        this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 8))));
        return (this._loadFloat((_31_ + 28)));
    }

    public final void roundl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (round((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final double scalb(double _30_, double _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 16), _30_);
        this._storeDouble((_32_ + 8), _31_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((__DOUBLE_BITS$2e$231((this._loadDouble((_32_ + 16))))) & 9223372036854775807L) & 4294967295L) > (9218868437227405312L & 4294967295L)) {
                        break label$2;
                    }
                    if ((((__DOUBLE_BITS$2e$231((this._loadDouble((_32_ + 8))))) & 9223372036854775807L) & 4294967295L) < (9218868437227405313L & 4294967295L)) {
                        break label$1;
                    }
                }
                while (false);
                this._storeDouble((_32_ + 24), ((this._loadDouble((_32_ + 16))) * (this._loadDouble((_32_ + 8)))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if ((((__DOUBLE_BITS$2e$231((this._loadDouble((_32_ + 8))))) & 9223372036854775807L) & 4294967295L) >= (9218868437227405312L & 4294967295L)) {
                        break label$4;
                    }
                    if ((Math.round((_31_ = this._loadDouble((_32_ + 8))))) == _31_) {
                        break label$3;
                    }
                    this._storeDouble((_32_ + 24), ((_31_ = (_31_ = this._loadDouble((_32_ + 8))) - _31_) / _31_));
                    break label$0;
                }
                while (false);
                label$5:
                do {
                    if (((((_31_ = this._loadDouble((_32_ + 8))) <= 0.0) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                        break label$5;
                    }
                    this._storeDouble((_32_ + 24), ((this._loadDouble((_32_ + 16))) * (this._loadDouble((_32_ + 8)))));
                    break label$0;
                }
                while (false);
                this._storeDouble((_32_ + 24), ((this._loadDouble((_32_ + 16))) / (-(this._loadDouble((_32_ + 8))))));
                break label$0;
            }
            while (false);
            label$6:
            do {
                if (((((_31_ = this._loadDouble((_32_ + 8))) <= 65000.0) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                    break label$6;
                }
                this._storeDouble((_32_ + 24), (scalbn((this._loadDouble((_32_ + 16))), 65000)));
                break label$0;
            }
            while (false);
            label$7:
            do {
                if (((((_31_ = -(this._loadDouble((_32_ + 8)))) <= 65000.0) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                    break label$7;
                }
                this._storeDouble((_32_ + 24), (scalbn((this._loadDouble((_32_ + 16))), -65000)));
                break label$0;
            }
            while (false);
            this._storeDouble((_32_ + 24), (scalbn((this._loadDouble((_32_ + 16))), (_truncateDoubleToSignedInteger((this._loadDouble((_32_ + 8))))))));
        }
        while (false);
        _31_ = this._loadDouble((_32_ + 24));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$230(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$231(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final float scalbf(float _30_, float _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeFloat((_32_ + 4), _31_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((((__FLOAT_BITS$2e$232((this._loadFloat((_32_ + 8))))) & 2147483647) & 4294967295L) > (2139095040 & 4294967295L)) {
                        break label$2;
                    }
                    if ((((__FLOAT_BITS$2e$232((this._loadFloat((_32_ + 4))))) & 2147483647) & 4294967295L) < (2139095041 & 4294967295L)) {
                        break label$1;
                    }
                }
                while (false);
                this._storeFloat((_32_ + 12), ((this._loadFloat((_32_ + 8))) * (this._loadFloat((_32_ + 4)))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                label$4:
                do {
                    if ((((__FLOAT_BITS$2e$232((this._loadFloat((_32_ + 4))))) & 2147483647) & 4294967295L) >= (2139095040 & 4294967295L)) {
                        break label$4;
                    }
                    if ((Math.round((_31_ = this._loadFloat((_32_ + 4))))) == _31_) {
                        break label$3;
                    }
                    this._storeFloat((_32_ + 12), ((_31_ = (_31_ = this._loadFloat((_32_ + 4))) - _31_) / _31_));
                    break label$0;
                }
                while (false);
                label$5:
                do {
                    if (((((_31_ = this._loadFloat((_32_ + 4))) <= 0.0f) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                        break label$5;
                    }
                    this._storeFloat((_32_ + 12), ((this._loadFloat((_32_ + 8))) * (this._loadFloat((_32_ + 4)))));
                    break label$0;
                }
                while (false);
                this._storeFloat((_32_ + 12), ((this._loadFloat((_32_ + 8))) / (-(this._loadFloat((_32_ + 4))))));
                break label$0;
            }
            while (false);
            label$6:
            do {
                if (((((_31_ = this._loadFloat((_32_ + 4))) <= 65000.0f) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                    break label$6;
                }
                this._storeFloat((_32_ + 12), (scalbnf((this._loadFloat((_32_ + 8))), 65000)));
                break label$0;
            }
            while (false);
            label$7:
            do {
                if (((((_31_ = -(this._loadFloat((_32_ + 4)))) <= 65000.0f) ? 1 : 0) | ((_31_ != _31_) ? 1 : 0)) != 0) {
                    break label$7;
                }
                this._storeFloat((_32_ + 12), (scalbnf((this._loadFloat((_32_ + 8))), -65000)));
                break label$0;
            }
            while (false);
            this._storeFloat((_32_ + 12), (scalbnf((this._loadFloat((_32_ + 8))), (_truncateFloatToSignedInteger((this._loadFloat((_32_ + 4))))))));
        }
        while (false);
        _31_ = this._loadFloat((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int __FLOAT_BITS$2e$232(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), (this._storeFloat((_31_ + 12), _30_)));
        return (this._loadInt((_31_ + 8)));
    }

    public final long __DOUBLE_BITS$2e$233(double _30_)
    {
        int _31_ = 0;
        this._storeDouble((_31_ = (this._loadInt((0 + 4))) - 16), (this._storeDouble((_31_ + 8), _30_)));
        return (this._loadLong(_31_));
    }

    public final double scalbln(double _30_, int _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_32_ + 4), _31_);
        label$0:
        do {
            label$1:
            do {
                if (1 != 0) {
                    break label$1;
                }
                this._storeInt((_32_ + 4), 2147483647);
                break label$0;
            }
            while (false);
            if (1 != 0) {
                break label$0;
            }
            this._storeInt((_32_ + 4), -2147483648);
        }
        while (false);
        _30_ = scalbn((this._loadDouble((_32_ + 8))), (this._loadInt((_32_ + 4))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _30_;
    }

    public final float scalblnf(float _30_, int _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        label$0:
        do {
            label$1:
            do {
                if (1 != 0) {
                    break label$1;
                }
                this._storeInt((_32_ + 8), 2147483647);
                break label$0;
            }
            while (false);
            if (1 != 0) {
                break label$0;
            }
            this._storeInt((_32_ + 8), -2147483648);
        }
        while (false);
        _30_ = scalbnf((this._loadFloat((_32_ + 12))), (this._loadInt((_32_ + 8))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _30_;
    }

    public final void scalblnl(int _30_, long _31_, long _32_, int _33_)
    {
        int _34_ = 0;
        this._storeLong(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeInt((_34_ + 28), _33_);
        this._storeLong((_34_ + 40), _32_);
        this.__extenddftf2.invoke((_34_ + 8), (scalbln((this.__trunctfdf2.invoke((this._loadLong((_34_ + 32))), _32_)), _33_)));
        this._storeLong((_30_ + 8), (this._loadLong(((_34_ + 8) + 8))));
        this._storeLong(_30_, (this._loadLong((_34_ + 8))));
        this._storeInt((0 + 4), (_34_ + 48));
        return;
    }

    public final double scalbn(double _30_, int _31_)
    {
        int _32_ = 0;
        this._storeDouble(((_32_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        this._storeDouble(_32_, (this._loadDouble((_32_ + 24))));
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_32_ + 20))) < 1024) {
                    break label$1;
                }
                this._storeDouble(_32_, ((this._loadDouble(_32_)) * 8.98846567431158E307));
                if ((this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + -1023))) < 1024) {
                    break label$0;
                }
                this._storeDouble(_32_, ((this._loadDouble(_32_)) * 8.98846567431158E307));
                if ((this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + -1023))) < 1024) {
                    break label$0;
                }
                this._storeInt((_32_ + 20), 1023);
                break label$0;
            }
            while (false);
            if ((this._loadInt((_32_ + 20))) > -1023) {
                break label$0;
            }
            this._storeDouble(_32_, ((this._loadDouble(_32_)) * 2.2250738585072014E-308));
            if ((this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + 1022))) > -1023) {
                break label$0;
            }
            this._storeDouble(_32_, ((this._loadDouble(_32_)) * 2.2250738585072014E-308));
            if ((this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + 1022))) > -1023) {
                break label$0;
            }
            this._storeInt((_32_ + 20), -1022);
        }
        while (false);
        this._storeLong((_32_ + 8), ((((this._loadInt((_32_ + 20))) + 1023) & 4294967295L) << 52L));
        return (this._storeDouble((_32_ + 24), ((this._loadDouble(_32_)) * (this._loadDouble((_32_ + 8))))));
    }

    public final float scalbnf(float _30_, int _31_)
    {
        int _32_ = 0;
        this._storeFloat(((_32_ = (this._loadInt((0 + 4))) - 32) + 28), _30_);
        this._storeInt((_32_ + 24), _31_);
        this._storeFloat((_32_ + 12), (this._loadFloat((_32_ + 28))));
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_32_ + 24))) < 128) {
                    break label$1;
                }
                this._storeFloat((_32_ + 12), ((this._loadFloat((_32_ + 12))) * 1.7014118E38f));
                if ((this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) + -127))) < 128) {
                    break label$0;
                }
                this._storeFloat((_32_ + 12), ((this._loadFloat((_32_ + 12))) * 1.7014118E38f));
                if ((this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) + -127))) < 128) {
                    break label$0;
                }
                this._storeInt((_32_ + 24), 127);
                break label$0;
            }
            while (false);
            if ((this._loadInt((_32_ + 24))) > -127) {
                break label$0;
            }
            this._storeFloat((_32_ + 12), ((this._loadFloat((_32_ + 12))) * 1.17549435E-38f));
            if ((this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) + 126))) > -127) {
                break label$0;
            }
            this._storeFloat((_32_ + 12), ((this._loadFloat((_32_ + 12))) * 1.17549435E-38f));
            if ((this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) + 126))) > -127) {
                break label$0;
            }
            this._storeInt((_32_ + 24), -126);
        }
        while (false);
        this._storeInt((_32_ + 16), (((this._loadInt((_32_ + 24))) << 23) + 1065353216));
        return (this._storeFloat((_32_ + 28), ((this._loadFloat((_32_ + 12))) * (this._loadFloat((_32_ + 16))))));
    }

    public final void scalbnl(int _30_, long _31_, long _32_, int _33_)
    {
        int _34_ = 0;
        this._storeLong(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), _31_);
        this._storeInt((_34_ + 28), _33_);
        this._storeLong((_34_ + 40), _32_);
        this.__extenddftf2.invoke((_34_ + 8), (scalbn((this.__trunctfdf2.invoke((this._loadLong((_34_ + 32))), _32_)), _33_)));
        this._storeLong((_30_ + 8), (this._loadLong(((_34_ + 8) + 8))));
        this._storeLong(_30_, (this._loadLong((_34_ + 8))));
        this._storeInt((0 + 4), (_34_ + 48));
        return;
    }

    public final int seed48(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        memcpy(14755, 4220, 6);
        memcpy(4220, (this._loadInt((_31_ + 12))), 6);
        this._storeInt((0 + 4), (_31_ + 16));
        return 14755;
    }

    public final void setbuf(int _30_, int _31_)
    {
        int _32_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _temp$0 = 0;
        _temp$1 = 2;
        _temp$2 = (_31_ != 0) ? _temp$0 : _temp$1;
        setvbuf((this._loadInt((_32_ + 12))), _31_, _temp$2, 1024);
        this._storeInt((0 + 4), (_32_ + 16));
        return;
    }

    public final void setbuffer(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        int _temp$0 = 0;
        int _temp$1 = 0;
        int _temp$2 = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _temp$0 = 0;
        _temp$1 = 2;
        _temp$2 = (_31_ != 0) ? _temp$0 : _temp$1;
        setvbuf((this._loadInt((_33_ + 12))), (_31_ = this._loadInt((_33_ + 8))), _temp$2, _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return;
    }

    public final int setegid(int _30_)
    {
        int _31_ = 0;
        _30_ = __setxid(170, -1, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), -1);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int setenv(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._loadInt((_33_ + 24))) == 0) {
                        break label$2;
                    }
                    if ((this._loadInt((this._loadInt((_33_ + 24))))) == 0) {
                        break label$2;
                    }
                    if ((strchr((this._loadInt((_33_ + 24))), 61)) == 0) {
                        break label$1;
                    }
                }
                while (false);
                this._storeInt((__errno_location()), 22);
                this._storeInt((_33_ + 28), -1);
                break label$0;
            }
            while (false);
            label$3:
            do {
                if ((this._loadInt((_33_ + 16))) != 0) {
                    break label$3;
                }
                if ((getenv((this._loadInt((_33_ + 24))))) == 0) {
                    break label$3;
                }
                this._storeInt((_33_ + 28), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 8), (strlen((this._loadInt((_33_ + 24))))));
            label$4:
            do {
                label$5:
                do {
                    if ((this._storeInt((_33_ + 12), (malloc((((this._storeInt((_33_ + 4), (strlen((this._loadInt((_33_ + 20))))))) + (this._loadInt((_33_ + 8)))) + 2))))) == 0) {
                        break label$5;
                    }
                    memcpy((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 24))), (this._loadInt((_33_ + 8))));
                    this._storeInt((_32_ = (this._loadInt((_33_ + 12))) + (this._loadInt((_33_ + 8)))), 61);
                    memcpy((_32_ + 1), (this._loadInt((_33_ + 20))), (this._loadInt((_33_ + 4))));
                    _31_ = this._storeInt((((_32_ = this._loadInt((_33_ + 12))) + ((this._loadInt((_33_ + 8))) + (this._loadInt((_33_ + 4))))) + 1), 0);
                    if ((__putenv(_32_, 1)) == 0) {
                        break label$4;
                    }
                }
                while (false);
                free((this._loadInt((_33_ + 12))));
                this._storeInt((_33_ + 28), -1);
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 28), _31_);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int seteuid(int _30_)
    {
        int _31_ = 0;
        _30_ = __setxid(164, -1, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), -1);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int setgid(int _30_)
    {
        int _31_ = 0;
        _30_ = __setxid(46, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 0, 0);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final void setlinebuf(int _30_)
    {
        int _31_ = 0;
        setvbuf((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 0, 1, 0);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int setpgid(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __syscall_ret((this.__syscall2.invoke(57, (this._loadInt((_32_ + 12))), _31_)));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int setpgrp()
    {
        return (setpgid(0, 0));
    }

    public final int setregid(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __setxid(71, (this._loadInt((_32_ + 12))), _31_, 0);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int setresgid(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __setxid(170, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int setresuid(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __setxid(164, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int setreuid(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __setxid(70, (this._loadInt((_32_ + 12))), _31_, 0);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int setsid()
    {
        return (__syscall_ret((this.__syscall0.invoke(66))));
    }

    public final int setuid(int _30_)
    {
        int _31_ = 0;
        _30_ = __setxid(23, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), 0, 0);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int setvbuf(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_34_ + 8), _31_);
        this._storeInt((_34_ + 4), _32_);
        this._storeInt(_34_, _33_);
        this._storeInt(((this._loadInt((_34_ + 12))) + 75), 255);
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_34_ + 4))) != 2) {
                    break label$1;
                }
                this._storeInt(((this._loadInt((_34_ + 12))) + 48), 0);
                break label$0;
            }
            while (false);
            if ((this._loadInt((_34_ + 4))) != 1) {
                break label$0;
            }
            this._storeInt(((this._loadInt((_34_ + 12))) + 75), 10);
        }
        while (false);
        this._storeInt((_34_ = this._loadInt((_34_ + 12))), ((this._loadInt(_34_)) | 64));
        return 0;
    }

    public final int __setxid(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_34_ + 36), _31_);
        this._storeInt((_34_ + 32), _32_);
        this._storeInt((_34_ + 28), _33_);
        this._storeInt((_34_ + 8), (this._loadInt((_34_ + 36))));
        this._storeInt((_34_ + 12), (this._loadInt((_34_ + 32))));
        this._storeInt((_34_ + 16), (this._loadInt((_34_ + 28))));
        this._storeInt((_34_ + 20), (this._loadInt((_34_ + 40))));
        this._storeInt((_34_ + 24), -1);
        this.__synccall.invoke(9, (_34_ + 8));
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_34_ + 24))) == 0) {
                    break label$1;
                }
                label$2:
                do {
                    if ((this._loadInt((_34_ + 24))) < 1) {
                        break label$2;
                    }
                    _33_ = this._loadInt((_34_ + 24));
                    this._storeInt((__errno_location()), _33_);
                }
                while (false);
                this._storeInt((_34_ + 44), -1);
                break label$0;
            }
            while (false);
            this._storeInt((_34_ + 44), 0);
        }
        while (false);
        _33_ = this._loadInt((_34_ + 44));
        this._storeInt((0 + 4), (_34_ + 48));
        return _33_;
    }

    public final void do_setxid(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((this._loadInt(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), (this._storeInt((_31_ + 12), _30_)))) + 16))) > 0) {
                break label$0;
            }
            label$1:
            do {
                if ((this._storeInt((_31_ + 4), (0 - (this.__syscall3.invoke((this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 12))), (this._loadInt(_30_)), (this._loadInt((_30_ + 4))), (this._loadInt((_30_ + 8)))))))) == 0) {
                    break label$1;
                }
                if ((this._loadInt(((this._loadInt((_31_ + 8))) + 16))) != 0) {
                    break label$1;
                }
                this.__block_all_sigs.invoke(0);
                this.__syscall2.invoke(37, (this.__syscall0.invoke(20)), 9);
            }
            while (false);
            this._storeInt(((this._loadInt((_31_ + 8))) + 16), (this._loadInt((_31_ + 4))));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final void __shlim(int _30_, long _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeLong(_32_, _31_);
        this._storeLong(((_30_ = this._loadInt((_32_ + 12))) + 112), _31_);
        this._storeLong((_30_ + 120), ((long) ((this._loadInt((_30_ + 8))) - (this._loadInt((_30_ + 4))))));
        label$0:
        do {
            if (_31_ == 0) {
                break label$0;
            }
            if ((this._loadLong(((this._loadInt((_32_ + 12))) + 120))) <= (this._loadLong(_32_))) {
                break label$0;
            }
            this._storeInt(((_30_ = this._loadInt((_32_ + 12))) + 104), ((this._loadInt((_30_ + 4))) + (this._loadInt(_32_))));
            return;
        }
        while (false);
        this._storeInt(((_32_ = this._loadInt((_32_ + 12))) + 104), (this._loadInt((_32_ + 8))));
        return;
    }

    public final int __shgetc(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            if ((this._loadLong(((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)) + 112))) == 0) {
                                break label$4;
                            }
                            if ((this._loadLong(((_30_ = this._loadInt((_31_ + 8))) + 120))) >= (this._loadLong((_30_ + 112)))) {
                                break label$3;
                            }
                        }
                        while (false);
                        if ((this._storeInt((_31_ + 4), (__uflow((this._loadInt((_31_ + 8))))))) <= -1) {
                            break label$3;
                        }
                        if ((this._loadLong(((this._loadInt((_31_ + 8))) + 112))) == 0) {
                            break label$2;
                        }
                        if (((long) ((this._loadInt(((_30_ = this._loadInt((_31_ + 8))) + 8))) - (this._loadInt((_30_ + 4))))) <= (((this._loadLong((_30_ + 112))) - (this._loadLong((_30_ + 120)))) + -1L)) {
                            break label$2;
                        }
                        this._storeInt(((_30_ = this._loadInt((_31_ + 8))) + 104), ((this._loadInt((_30_ + 4))) + ((int) (((this._loadLong((_30_ + 112))) - (this._loadLong((_30_ + 120)))) + -1L))));
                        break label$1;
                    }
                    while (false);
                    this._storeInt(((this._loadInt((_31_ + 8))) + 104), 0);
                    this._storeInt((_31_ + 12), -1);
                    break label$0;
                }
                while (false);
                this._storeInt(((_30_ = this._loadInt((_31_ + 8))) + 104), (this._loadInt((_30_ + 8))));
            }
            while (false);
            label$5:
            do {
                if ((this._loadInt(((this._loadInt((_31_ + 8))) + 8))) == 0) {
                    break label$5;
                }
                this._storeLong(((_30_ = this._loadInt((_31_ + 8))) + 120), ((this._loadLong((_30_ + 120))) + ((long) (((this._loadInt((_30_ + 8))) - (this._loadInt((_30_ + 4)))) + 1))));
            }
            while (false);
            label$6:
            do {
                if ((this._loadInt(((this._loadInt(((this._loadInt((_31_ + 8))) + 4))) + -1))) == (this._loadInt((_31_ + 4)))) {
                    break label$6;
                }
                this._storeInt(((this._loadInt(((this._loadInt((_31_ + 8))) + 4))) + -1), (this._loadInt((_31_ + 4))));
            }
            while (false);
            this._storeInt((_31_ + 12), (this._loadInt((_31_ + 4))));
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double significand(double _30_)
    {
        int _31_ = 0;
        _30_ = scalbn((_30_ = this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)), (0 - (ilogb(_30_))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final float significandf(float _30_)
    {
        int _31_ = 0;
        _30_ = scalbnf((_30_ = this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), (0 - (ilogbf(_30_))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double sin(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 16), (this._storeDouble((_31_ + 48), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            if (((this._storeInt((_31_ + 28), ((this._storeInt((_31_ + 28), (this._loadInt((_31_ + 20))))) & 2147483647))) & 4294967295L) > (1072243195 & 4294967295L)) {
                                                break label$8;
                                            }
                                            if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1045430271 & 4294967295L)) {
                                                break label$7;
                                            }
                                            if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1048575 & 4294967295L)) {
                                                break label$5;
                                            }
                                            _30_ = (this._loadDouble((_31_ + 48))) / 1.3292279957849159E36;
                                            break label$4;
                                        }
                                        while (false);
                                        if (((this._loadInt((_31_ + 28))) & 4294967295L) < (2146435072 & 4294967295L)) {
                                            break label$6;
                                        }
                                        this._storeDouble((_31_ + 56), ((_30_ = this._loadDouble((_31_ + 48))) - _30_));
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeDouble((_31_ + 56), (__sin((this._loadDouble((_31_ + 48))), 0.0, 0)));
                                    break label$0;
                                }
                                while (false);
                                if ((_32_ = (this._storeInt((_31_ + 24), (__rem_pio2((this._loadDouble((_31_ + 48))), (_31_ + 32))))) & 3) == 2) {
                                    break label$3;
                                }
                                if (_32_ == 1) {
                                    break label$2;
                                }
                                if (_32_ != 0) {
                                    break label$1;
                                }
                                this._storeDouble((_31_ + 56), (__sin((this._loadDouble((_31_ + 32))), (this._loadDouble((_31_ + 40))), 1)));
                                break label$0;
                            }
                            while (false);
                            _30_ = (this._loadDouble((_31_ + 48))) + 1.3292279957849159E36;
                        }
                        while (false);
                        this._storeDouble((_31_ + 8), _30_);
                        this._storeDouble((_31_ + 56), (this._loadDouble((_31_ + 48))));
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_31_ + 56), (-(__sin((this._loadDouble((_31_ + 32))), (this._loadDouble((_31_ + 40))), 1))));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 56), (__cos((this._loadDouble((_31_ + 32))), (this._loadDouble((_31_ + 40))))));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 56), (-(__cos((this._loadDouble((_31_ + 32))), (this._loadDouble((_31_ + 40)))))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 56));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final void sincos(double _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeDouble(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 72), _30_);
        this._storeInt((_33_ + 68), _31_);
        this._storeInt((_33_ + 64), _32_);
        this._storeDouble((_33_ + 16), (this._loadDouble((_33_ + 72))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            if (((this._storeInt((_33_ + 28), ((this._storeInt((_33_ + 28), (this._loadInt((_33_ + 20))))) & 2147483647))) & 4294967295L) > (1072243195 & 4294967295L)) {
                                                break label$8;
                                            }
                                            if (((this._loadInt((_33_ + 28))) & 4294967295L) > (1044816029 & 4294967295L)) {
                                                break label$7;
                                            }
                                            if (((this._loadInt((_33_ + 28))) & 4294967295L) > (1048575 & 4294967295L)) {
                                                break label$5;
                                            }
                                            _30_ = (this._loadDouble((_33_ + 72))) / 1.3292279957849159E36;
                                            break label$4;
                                        }
                                        while (false);
                                        if (((this._loadInt((_33_ + 28))) & 4294967295L) < (2146435072 & 4294967295L)) {
                                            break label$6;
                                        }
                                        _30_ = this._storeDouble((this._loadInt((_33_ + 64))), ((_30_ = this._loadDouble((_33_ + 72))) - _30_));
                                        this._storeDouble((this._loadInt((_33_ + 68))), _30_);
                                        break label$0;
                                    }
                                    while (false);
                                    _30_ = __sin((this._loadDouble((_33_ + 72))), 0.0, 0);
                                    this._storeDouble((this._loadInt((_33_ + 68))), _30_);
                                    _30_ = __cos((this._loadDouble((_33_ + 72))), 0.0);
                                    this._storeDouble((this._loadInt((_33_ + 64))), _30_);
                                    break label$0;
                                }
                                while (false);
                                this._storeInt((_33_ + 24), (__rem_pio2((this._loadDouble((_33_ + 72))), (_33_ + 48))));
                                this._storeDouble((_33_ + 40), (__sin((this._loadDouble((_33_ + 48))), (this._loadDouble((_33_ + 56))), 1)));
                                this._storeDouble((_33_ + 32), (__cos((this._loadDouble((_33_ + 48))), (this._loadDouble((_33_ + 56))))));
                                if ((_32_ = (this._loadInt((_33_ + 24))) & 3) == 2) {
                                    break label$3;
                                }
                                if (_32_ == 1) {
                                    break label$2;
                                }
                                if (_32_ != 0) {
                                    break label$1;
                                }
                                this._storeDouble((this._loadInt((_33_ + 68))), (this._loadDouble((_33_ + 40))));
                                this._storeDouble((this._loadInt((_33_ + 64))), (this._loadDouble((_33_ + 32))));
                                break label$0;
                            }
                            while (false);
                            _30_ = (this._loadDouble((_33_ + 72))) + 1.3292279957849159E36;
                        }
                        while (false);
                        this._storeDouble((_33_ + 8), _30_);
                        this._storeDouble((this._loadInt((_33_ + 68))), (this._loadDouble((_33_ + 72))));
                        this._storeLong((this._loadInt((_33_ + 64))), 4607182418800017408L);
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((this._loadInt((_33_ + 68))), (-(this._loadDouble((_33_ + 40)))));
                    this._storeDouble((this._loadInt((_33_ + 64))), (-(this._loadDouble((_33_ + 32)))));
                    break label$0;
                }
                while (false);
                this._storeDouble((this._loadInt((_33_ + 68))), (this._loadDouble((_33_ + 32))));
                this._storeDouble((this._loadInt((_33_ + 64))), (-(this._loadDouble((_33_ + 40)))));
                break label$0;
            }
            while (false);
            this._storeDouble((this._loadInt((_33_ + 68))), (-(this._loadDouble((_33_ + 32)))));
            this._storeDouble((this._loadInt((_33_ + 64))), (this._loadDouble((_33_ + 40))));
        }
        while (false);
        this._storeInt((0 + 4), (_33_ + 80));
        return;
    }

    public final void sincosf(float _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        double _34_ = 0.0;
        this._storeFloat(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 60), _30_);
        this._storeInt((_33_ + 56), _31_);
        this._storeInt((_33_ + 52), _32_);
        this._storeFloat((_33_ + 16), (this._loadFloat((_33_ + 60))));
        this._storeInt((_33_ + 20), ((this._storeInt((_33_ + 28), (this._loadInt((_33_ + 16))))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            label$9:
                                            do {
                                                label$10:
                                                do {
                                                    label$11:
                                                    do {
                                                        label$12:
                                                        do {
                                                            label$13:
                                                            do {
                                                                label$14:
                                                                do {
                                                                    label$15:
                                                                    do {
                                                                        label$16:
                                                                        do {
                                                                            label$17:
                                                                            do {
                                                                                label$18:
                                                                                do {
                                                                                    if (((this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) & 2147483647))) & 4294967295L) > (1061752794 & 4294967295L)) {
                                                                                        break label$18;
                                                                                    }
                                                                                    if (((this._loadInt((_33_ + 28))) & 4294967295L) > (964689919 & 4294967295L)) {
                                                                                        break label$17;
                                                                                    }
                                                                                    if (((this._loadInt((_33_ + 28))) & 4294967295L) > (1048575 & 4294967295L)) {
                                                                                        break label$15;
                                                                                    }
                                                                                    _30_ = (this._loadFloat((_33_ + 60))) / 1.329228E36f;
                                                                                    break label$14;
                                                                                }
                                                                                while (false);
                                                                                if (((this._loadInt((_33_ + 28))) & 4294967295L) > (1081824209 & 4294967295L)) {
                                                                                    break label$16;
                                                                                }
                                                                                if (((this._loadInt((_33_ + 28))) & 4294967295L) > (1075235811 & 4294967295L)) {
                                                                                    break label$13;
                                                                                }
                                                                                if ((this._loadInt((_33_ + 20))) == 0) {
                                                                                    break label$9;
                                                                                }
                                                                                _30_ = __cosdf((((double) (this._loadFloat((_33_ + 60)))) + 1.5707963267948966));
                                                                                this._storeFloat((this._loadInt((_33_ + 56))), (-_30_));
                                                                                _30_ = __sindf((((double) (this._loadFloat((_33_ + 60)))) + 1.5707963267948966));
                                                                                this._storeFloat((this._loadInt((_33_ + 52))), _30_);
                                                                                break label$0;
                                                                            }
                                                                            while (false);
                                                                            _30_ = __sindf(((double) (this._loadFloat((_33_ + 60)))));
                                                                            this._storeFloat((this._loadInt((_33_ + 56))), _30_);
                                                                            _30_ = __cosdf(((double) (this._loadFloat((_33_ + 60)))));
                                                                            this._storeFloat((this._loadInt((_33_ + 52))), _30_);
                                                                            break label$0;
                                                                        }
                                                                        while (false);
                                                                        if (((this._loadInt((_33_ + 28))) & 4294967295L) > (1088565717 & 4294967295L)) {
                                                                            break label$12;
                                                                        }
                                                                        if (((this._loadInt((_33_ + 28))) & 4294967295L) > (1085271519 & 4294967295L)) {
                                                                            break label$11;
                                                                        }
                                                                        if ((this._loadInt((_33_ + 20))) == 0) {
                                                                            break label$6;
                                                                        }
                                                                        _30_ = __cosdf((((double) (this._loadFloat((_33_ + 60)))) + 4.71238898038469));
                                                                        this._storeFloat((this._loadInt((_33_ + 56))), _30_);
                                                                        _30_ = __sindf((((double) (this._loadFloat((_33_ + 60)))) + 4.71238898038469));
                                                                        this._storeFloat((this._loadInt((_33_ + 52))), (-_30_));
                                                                        break label$0;
                                                                    }
                                                                    while (false);
                                                                    _30_ = (this._loadFloat((_33_ + 60))) + 1.329228E36f;
                                                                }
                                                                while (false);
                                                                this._storeFloat((_33_ + 12), _30_);
                                                                this._storeFloat((this._loadInt((_33_ + 56))), (this._loadFloat((_33_ + 60))));
                                                                this._storeInt((this._loadInt((_33_ + 52))), 1065353216);
                                                                break label$0;
                                                            }
                                                            while (false);
                                                            if ((this._loadInt((_33_ + 20))) == 0) {
                                                                break label$8;
                                                            }
                                                            _34_ = ((double) (this._loadFloat((_33_ + 60)))) + 3.141592653589793;
                                                            break label$7;
                                                        }
                                                        while (false);
                                                        if (((this._loadInt((_33_ + 28))) & 4294967295L) < (2139095040 & 4294967295L)) {
                                                            break label$10;
                                                        }
                                                        _30_ = this._storeFloat((this._loadInt((_33_ + 52))), ((_30_ = this._loadFloat((_33_ + 60))) - _30_));
                                                        this._storeFloat((this._loadInt((_33_ + 56))), _30_);
                                                        break label$0;
                                                    }
                                                    while (false);
                                                    if ((this._loadInt((_33_ + 20))) == 0) {
                                                        break label$5;
                                                    }
                                                    _34_ = ((double) (this._loadFloat((_33_ + 60)))) + 6.283185307179586;
                                                    break label$4;
                                                }
                                                while (false);
                                                this._storeInt((_33_ + 24), (__rem_pio2f((this._loadFloat((_33_ + 60))), (_33_ + 40))));
                                                this._storeFloat((_33_ + 36), (__sindf((this._loadDouble((_33_ + 40))))));
                                                this._storeFloat((_33_ + 32), (__cosdf((this._loadDouble((_33_ + 40))))));
                                                if ((_32_ = (this._loadInt((_33_ + 24))) & 3) == 2) {
                                                    break label$3;
                                                }
                                                if (_32_ == 1) {
                                                    break label$2;
                                                }
                                                if (_32_ != 0) {
                                                    break label$1;
                                                }
                                                this._storeFloat((this._loadInt((_33_ + 56))), (this._loadFloat((_33_ + 36))));
                                                this._storeFloat((this._loadInt((_33_ + 52))), (this._loadFloat((_33_ + 32))));
                                                break label$0;
                                            }
                                            while (false);
                                            _30_ = __cosdf((1.5707963267948966 - ((double) (this._loadFloat((_33_ + 60))))));
                                            this._storeFloat((this._loadInt((_33_ + 56))), _30_);
                                            _30_ = __sindf((1.5707963267948966 - ((double) (this._loadFloat((_33_ + 60))))));
                                            this._storeFloat((this._loadInt((_33_ + 52))), _30_);
                                            break label$0;
                                        }
                                        while (false);
                                        _34_ = ((double) (this._loadFloat((_33_ + 60)))) + -3.141592653589793;
                                    }
                                    while (false);
                                    _30_ = __sindf(_34_);
                                    this._storeFloat((this._loadInt((_33_ + 56))), (-_30_));
                                    label$19:
                                    do {
                                        label$20:
                                        do {
                                            if ((this._loadInt((_33_ + 20))) == 0) {
                                                break label$20;
                                            }
                                            _34_ = ((double) (this._loadFloat((_33_ + 60)))) + 3.141592653589793;
                                            break label$19;
                                        }
                                        while (false);
                                        _34_ = ((double) (this._loadFloat((_33_ + 60)))) + -3.141592653589793;
                                    }
                                    while (false);
                                    _30_ = __cosdf(_34_);
                                    this._storeFloat((this._loadInt((_33_ + 52))), (-_30_));
                                    break label$0;
                                }
                                while (false);
                                _30_ = __cosdf((((double) (this._loadFloat((_33_ + 60)))) - 4.71238898038469));
                                this._storeFloat((this._loadInt((_33_ + 56))), (-_30_));
                                _30_ = __sindf((((double) (this._loadFloat((_33_ + 60)))) - 4.71238898038469));
                                this._storeFloat((this._loadInt((_33_ + 52))), _30_);
                                break label$0;
                            }
                            while (false);
                            _34_ = ((double) (this._loadFloat((_33_ + 60)))) + -6.283185307179586;
                        }
                        while (false);
                        _30_ = __sindf(_34_);
                        this._storeFloat((this._loadInt((_33_ + 56))), _30_);
                        label$21:
                        do {
                            label$22:
                            do {
                                if ((this._loadInt((_33_ + 20))) == 0) {
                                    break label$22;
                                }
                                _34_ = ((double) (this._loadFloat((_33_ + 60)))) + 6.283185307179586;
                                break label$21;
                            }
                            while (false);
                            _34_ = ((double) (this._loadFloat((_33_ + 60)))) + -6.283185307179586;
                        }
                        while (false);
                        _30_ = __cosdf(_34_);
                        this._storeFloat((this._loadInt((_33_ + 52))), _30_);
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((this._loadInt((_33_ + 56))), (-(this._loadFloat((_33_ + 36)))));
                    this._storeFloat((this._loadInt((_33_ + 52))), (-(this._loadFloat((_33_ + 32)))));
                    break label$0;
                }
                while (false);
                this._storeFloat((this._loadInt((_33_ + 56))), (this._loadFloat((_33_ + 32))));
                this._storeFloat((this._loadInt((_33_ + 52))), (-(this._loadFloat((_33_ + 36)))));
                break label$0;
            }
            while (false);
            this._storeFloat((this._loadInt((_33_ + 56))), (-(this._loadFloat((_33_ + 32)))));
            this._storeFloat((this._loadInt((_33_ + 52))), (this._loadFloat((_33_ + 36))));
        }
        while (false);
        this._storeInt((0 + 4), (_33_ + 64));
        return;
    }

    public final void sincosl(long _30_, long _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeLong(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 64), _30_);
        this._storeInt((_34_ + 60), _32_);
        this._storeInt((_34_ + 56), _33_);
        this._storeLong((_34_ + 72), _31_);
        sincos((this.__trunctfdf2.invoke((this._loadLong((_34_ + 64))), _31_)), (_34_ + 48), (_34_ + 40));
        this.__extenddftf2.invoke((_34_ + 8), (this._loadDouble((_34_ + 48))));
        this._storeLong(((_33_ = this._loadInt((_34_ + 60))) + 8), (this._loadLong(((_34_ + 8) + 8))));
        this._storeLong(_33_, (this._loadLong((_34_ + 8))));
        this.__extenddftf2.invoke((_34_ + 24), (this._loadDouble((_34_ + 40))));
        this._storeLong(((_33_ = this._loadInt((_34_ + 56))) + 8), (this._loadLong(((_34_ + 24) + 8))));
        this._storeLong(_33_, (this._loadLong((_34_ + 24))));
        this._storeInt((0 + 4), (_34_ + 80));
        return;
    }

    public final float sinf(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        double _33_ = 0.0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 16), (this._storeFloat((_31_ + 40), _30_)));
        this._storeInt((_31_ + 20), ((this._storeInt((_31_ + 28), (this._loadInt((_31_ + 16))))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            label$9:
                                            do {
                                                label$10:
                                                do {
                                                    label$11:
                                                    do {
                                                        label$12:
                                                        do {
                                                            label$13:
                                                            do {
                                                                label$14:
                                                                do {
                                                                    label$15:
                                                                    do {
                                                                        label$16:
                                                                        do {
                                                                            label$17:
                                                                            do {
                                                                                label$18:
                                                                                do {
                                                                                    if (((this._storeInt((_31_ + 28), ((this._loadInt((_31_ + 28))) & 2147483647))) & 4294967295L) > (1061752794 & 4294967295L)) {
                                                                                        break label$18;
                                                                                    }
                                                                                    if (((this._loadInt((_31_ + 28))) & 4294967295L) > (964689919 & 4294967295L)) {
                                                                                        break label$17;
                                                                                    }
                                                                                    if (((this._loadInt((_31_ + 28))) & 4294967295L) > (8388607 & 4294967295L)) {
                                                                                        break label$15;
                                                                                    }
                                                                                    _30_ = (this._loadFloat((_31_ + 40))) / 1.329228E36f;
                                                                                    break label$14;
                                                                                }
                                                                                while (false);
                                                                                if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1081824209 & 4294967295L)) {
                                                                                    break label$16;
                                                                                }
                                                                                if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1075235811 & 4294967295L)) {
                                                                                    break label$13;
                                                                                }
                                                                                if ((this._loadInt((_31_ + 20))) == 0) {
                                                                                    break label$9;
                                                                                }
                                                                                this._storeFloat((_31_ + 44), (-(__cosdf((((double) (this._loadFloat((_31_ + 40)))) + 1.5707963267948966)))));
                                                                                break label$0;
                                                                            }
                                                                            while (false);
                                                                            this._storeFloat((_31_ + 44), (__sindf(((double) (this._loadFloat((_31_ + 40)))))));
                                                                            break label$0;
                                                                        }
                                                                        while (false);
                                                                        if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1088565717 & 4294967295L)) {
                                                                            break label$12;
                                                                        }
                                                                        if (((this._loadInt((_31_ + 28))) & 4294967295L) > (1085271519 & 4294967295L)) {
                                                                            break label$11;
                                                                        }
                                                                        if ((this._loadInt((_31_ + 20))) == 0) {
                                                                            break label$6;
                                                                        }
                                                                        this._storeFloat((_31_ + 44), (__cosdf((((double) (this._loadFloat((_31_ + 40)))) + 4.71238898038469))));
                                                                        break label$0;
                                                                    }
                                                                    while (false);
                                                                    _30_ = (this._loadFloat((_31_ + 40))) + 1.329228E36f;
                                                                }
                                                                while (false);
                                                                this._storeFloat((_31_ + 12), _30_);
                                                                this._storeFloat((_31_ + 44), (this._loadFloat((_31_ + 40))));
                                                                break label$0;
                                                            }
                                                            while (false);
                                                            if ((this._loadInt((_31_ + 20))) == 0) {
                                                                break label$8;
                                                            }
                                                            _33_ = -(((double) (this._loadFloat((_31_ + 40)))) + 3.141592653589793);
                                                            break label$7;
                                                        }
                                                        while (false);
                                                        if (((this._loadInt((_31_ + 28))) & 4294967295L) < (2139095040 & 4294967295L)) {
                                                            break label$10;
                                                        }
                                                        this._storeFloat((_31_ + 44), ((_30_ = this._loadFloat((_31_ + 40))) - _30_));
                                                        break label$0;
                                                    }
                                                    while (false);
                                                    if ((this._loadInt((_31_ + 20))) == 0) {
                                                        break label$5;
                                                    }
                                                    _33_ = ((double) (this._loadFloat((_31_ + 40)))) + 6.283185307179586;
                                                    break label$4;
                                                }
                                                while (false);
                                                if ((_32_ = (this._storeInt((_31_ + 24), (__rem_pio2f((this._loadFloat((_31_ + 40))), (_31_ + 32))))) & 3) == 2) {
                                                    break label$3;
                                                }
                                                if (_32_ == 1) {
                                                    break label$2;
                                                }
                                                if (_32_ != 0) {
                                                    break label$1;
                                                }
                                                this._storeFloat((_31_ + 44), (__sindf((this._loadDouble((_31_ + 32))))));
                                                break label$0;
                                            }
                                            while (false);
                                            this._storeFloat((_31_ + 44), (__cosdf((((double) (this._loadFloat((_31_ + 40)))) + -1.5707963267948966))));
                                            break label$0;
                                        }
                                        while (false);
                                        _33_ = -(((double) (this._loadFloat((_31_ + 40)))) + -3.141592653589793);
                                    }
                                    while (false);
                                    this._storeFloat((_31_ + 44), (__sindf(_33_)));
                                    break label$0;
                                }
                                while (false);
                                this._storeFloat((_31_ + 44), (-(__cosdf((((double) (this._loadFloat((_31_ + 40)))) + -4.71238898038469)))));
                                break label$0;
                            }
                            while (false);
                            _33_ = ((double) (this._loadFloat((_31_ + 40)))) + -6.283185307179586;
                        }
                        while (false);
                        this._storeFloat((_31_ + 44), (__sindf(_33_)));
                        break label$0;
                    }
                    while (false);
                    this._storeFloat((_31_ + 44), (__sindf((-(this._loadDouble((_31_ + 32)))))));
                    break label$0;
                }
                while (false);
                this._storeFloat((_31_ + 44), (__cosdf((this._loadDouble((_31_ + 32))))));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 44), (-(__cosdf((this._loadDouble((_31_ + 32)))))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 44));
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final double sinh(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 40), (this._storeDouble((_31_ + 48), _30_)));
        this._storeLong((_31_ + 16), 4602678819172646912L);
        label$0:
        do {
            if (((this._loadLong((_31_ + 40))) >>> 63L) == 0) {
                break label$0;
            }
            this._storeDouble((_31_ + 16), (-(this._loadDouble((_31_ + 16)))));
        }
        while (false);
        this._storeLong((_31_ + 40), ((this._loadLong((_31_ + 40))) & 9223372036854775807L));
        this._storeDouble((_31_ + 8), (this._loadDouble((_31_ + 40))));
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        if (((this._storeInt((_31_ + 36), (this._loadInt((_31_ + 44))))) & 4294967295L) > (1082535489 & 4294967295L)) {
                            break label$4;
                        }
                        this._storeDouble((_31_ + 24), (expm1((this._loadDouble((_31_ + 8))))));
                        if (((this._loadInt((_31_ + 36))) & 4294967295L) > (1072693247 & 4294967295L)) {
                            break label$3;
                        }
                        if (((this._loadInt((_31_ + 36))) & 4294967295L) > (1045430271 & 4294967295L)) {
                            break label$2;
                        }
                        this._storeDouble((_31_ + 56), (this._loadDouble((_31_ + 48))));
                        break label$1;
                    }
                    while (false);
                    this._storeDouble((_31_ + 56), (this._storeDouble((_31_ + 24), (((_30_ = this._loadDouble((_31_ + 16))) + _30_) * (__expo2((this._loadDouble((_31_ + 8)))))))));
                    break label$1;
                }
                while (false);
                this._storeDouble((_31_ + 56), ((this._loadDouble((_31_ + 16))) * ((_30_ = this._loadDouble((_31_ + 24))) + (_30_ / (_30_ + 1.0)))));
                break label$1;
            }
            while (false);
            this._storeDouble((_31_ + 56), ((this._loadDouble((_31_ + 16))) * (((_30_ = this._loadDouble((_31_ + 24))) + _30_) - ((_30_ * _30_) / (_30_ + 1.0)))));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 56));
        this._storeInt((0 + 4), (_31_ + 64));
        return _30_;
    }

    public final float sinhf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 16), (this._storeFloat((_31_ + 24), _30_)));
        this._storeInt((_31_ + 4), 1056964608);
        label$0:
        do {
            if (((this._loadInt((_31_ + 16))) >>> 31) == 0) {
                break label$0;
            }
            this._storeFloat((_31_ + 4), (-(this._loadFloat((_31_ + 4)))));
        }
        while (false);
        this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 16))) & 2147483647));
        this._storeFloat(_31_, (this._loadFloat((_31_ + 16))));
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        if (((this._storeInt((_31_ + 12), (this._loadInt((_31_ + 16))))) & 4294967295L) > (1118925334 & 4294967295L)) {
                            break label$4;
                        }
                        this._storeFloat((_31_ + 8), (expm1f((this._loadFloat(_31_)))));
                        if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1065353215 & 4294967295L)) {
                            break label$3;
                        }
                        if (((this._loadInt((_31_ + 12))) & 4294967295L) > (964689919 & 4294967295L)) {
                            break label$2;
                        }
                        this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
                        break label$1;
                    }
                    while (false);
                    this._storeFloat((_31_ + 28), (this._storeFloat((_31_ + 8), (((_30_ = this._loadFloat((_31_ + 4))) + _30_) * (__expo2f((this._loadFloat(_31_))))))));
                    break label$1;
                }
                while (false);
                this._storeFloat((_31_ + 28), ((this._loadFloat((_31_ + 4))) * ((_30_ = this._loadFloat((_31_ + 8))) + (_30_ / (_30_ + 1.0f)))));
                break label$1;
            }
            while (false);
            this._storeFloat((_31_ + 28), ((this._loadFloat((_31_ + 4))) * (((_30_ = this._loadFloat((_31_ + 8))) + _30_) - ((_30_ * _30_) / (_30_ + 1.0f)))));
        }
        while (false);
        _30_ = this._loadFloat((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final void sinhl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (sinh((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void sinl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (sin((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int sleep(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        _31_ = this._storeInt((_32_ + 4), 0);
        this._storeInt(_32_, _30_);
        label$0:
        do {
            label$1:
            do {
                if ((this.nanosleep.invoke(_32_, _32_)) == 0) {
                    break label$1;
                }
                this._storeInt((_32_ + 12), (this._loadInt(_32_)));
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 12), _31_);
        }
        while (false);
        _30_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _30_;
    }

    public final double sqrt(double _30_)
    {
        long _31_ = 0L;
        int _32_ = 0;
        int _33_ = 0;
        this._storeDouble(((_33_ = (this._loadInt((0 + 4))) - 96) + 80), _30_);
        this._storeInt((_33_ + 68), -2147483648);
        this._storeDouble((_33_ + 16), (this._loadDouble((_33_ + 80))));
        this._storeLong((_33_ + 64), (this._loadLong((_33_ + 20))));
        this._storeLong((_33_ + 28), (this._loadLong((_33_ + 16))));
        label$0:
        do {
            if (((this._loadInt((_33_ + 64))) & 2146435072) != 2146435072) {
                break label$0;
            }
            this._storeDouble((_33_ + 88), (((_30_ = this._loadDouble((_33_ + 80))) * _30_) + _30_));
            return (this._loadDouble((_33_ + 88)));
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            label$6:
                            do {
                                if ((this._loadInt((_33_ + 64))) > 0) {
                                    break label$6;
                                }
                                if ((((this._loadInt((_33_ + 64))) & ((this._loadInt((_33_ + 68))) ^ -1)) | (this._loadInt((_33_ + 28)))) == 0) {
                                    break label$5;
                                }
                                if ((this._loadInt((_33_ + 64))) <= -1) {
                                    break label$4;
                                }
                            }
                            while (false);
                            label$7:
                            do {
                                if ((this._storeInt((_33_ + 52), ((this._loadInt((_33_ + 64))) >> 20))) != 0) {
                                    break label$7;
                                }
                                label$9:
                                do {
                                    label$8:
                                    while (true) {
                                        if ((this._loadInt((_33_ + 64))) != 0) {
                                            break label$9;
                                        }
                                        this._storeInt((_33_ + 52), ((this._loadInt((_33_ + 52))) + -21));
                                        this._storeInt((_33_ + 64), ((this._loadInt((_33_ + 64))) | ((this._loadInt((_33_ + 28))) >>> 11)));
                                        this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) << 21));
                                        continue label$8;
                                    }
                                }
                                while (false);
                                this._storeInt((_33_ + 44), 0);
                                label$11:
                                do {
                                    label$10:
                                    while (true) {
                                        if (((this._loadInt((_33_ + 66))) & 16) != 0) {
                                            break label$11;
                                        }
                                        this._storeInt((_33_ + 64), ((this._loadInt((_33_ + 64))) << 1));
                                        this._storeInt((_33_ + 44), ((this._loadInt((_33_ + 44))) + 1));
                                        continue label$10;
                                    }
                                }
                                while (false);
                                this._storeInt((_33_ + 52), ((this._loadInt((_33_ + 52))) - ((this._loadInt((_33_ + 44))) + -1)));
                                this._storeInt((_33_ + 64), ((this._loadInt((_33_ + 64))) | ((this._loadInt((_33_ + 28))) >>> (32 - (this._loadInt((_33_ + 44)))))));
                                this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) << (this._loadInt((_33_ + 44)))));
                            }
                            while (false);
                            this._storeInt((_33_ + 52), ((this._loadInt((_33_ + 52))) + -1023));
                            this._storeInt((_33_ + 64), (((this._loadInt((_33_ + 64))) & 1048575) | 1048576));
                            label$12:
                            do {
                                if (((this._loadInt((_33_ + 52))) & 1) == 0) {
                                    break label$12;
                                }
                                this._storeInt((_33_ + 64), ((_32_ = this._loadInt((_33_ + 64))) + (_32_ + (((this._loadInt((_33_ + 28))) & (this._loadInt((_33_ + 68)))) >>> 31))));
                                this._storeInt((_33_ + 28), ((_32_ = this._loadInt((_33_ + 28))) + _32_));
                            }
                            while (false);
                            this._storeInt((_33_ + 52), ((this._loadInt((_33_ + 52))) >> 1));
                            this._storeInt((_33_ + 64), ((_32_ = this._loadInt((_33_ + 64))) + (_32_ + (((this._loadInt((_33_ + 28))) & (this._loadInt((_33_ + 68)))) >>> 31))));
                            this._storeInt((_33_ + 28), ((_32_ = this._loadInt((_33_ + 28))) + _32_));
                            this._storeInt((_33_ + 56), (this._storeInt((_33_ + 24), (this._storeInt((_33_ + 60), (this._storeInt((_33_ + 32), 0)))))));
                            this._storeInt((_33_ + 40), 2097152);
                            label$14:
                            do {
                                label$13:
                                while (true) {
                                    if ((this._loadInt((_33_ + 40))) == 0) {
                                        break label$14;
                                    }
                                    label$15:
                                    do {
                                        if ((this._storeInt((_33_ + 48), ((this._loadInt((_33_ + 60))) + (this._loadInt((_33_ + 40)))))) > (this._loadInt((_33_ + 64)))) {
                                            break label$15;
                                        }
                                        this._storeInt((_33_ + 60), ((this._loadInt((_33_ + 48))) + (this._loadInt((_33_ + 40)))));
                                        this._storeInt((_33_ + 64), ((this._loadInt((_33_ + 64))) - (this._loadInt((_33_ + 48)))));
                                        this._storeInt((_33_ + 56), ((this._loadInt((_33_ + 56))) + (this._loadInt((_33_ + 40)))));
                                    }
                                    while (false);
                                    this._storeInt((_33_ + 64), ((_32_ = this._loadInt((_33_ + 64))) + (_32_ + (((this._loadInt((_33_ + 28))) & (this._loadInt((_33_ + 68)))) >>> 31))));
                                    this._storeInt((_33_ + 28), ((_32_ = this._loadInt((_33_ + 28))) + _32_));
                                    this._storeInt((_33_ + 40), ((this._loadInt((_33_ + 40))) >>> 1));
                                    continue label$13;
                                }
                            }
                            while (false);
                            this._storeInt((_33_ + 40), (this._loadInt((_33_ + 68))));
                            label$17:
                            do {
                                label$16:
                                while (true) {
                                    if ((this._loadInt((_33_ + 40))) == 0) {
                                        break label$17;
                                    }
                                    this._storeInt((_33_ + 36), ((this._loadInt((_33_ + 32))) + (this._loadInt((_33_ + 40)))));
                                    label$18:
                                    do {
                                        label$19:
                                        do {
                                            if ((this._storeInt((_33_ + 48), (this._loadInt((_33_ + 60))))) < (this._loadInt((_33_ + 64)))) {
                                                break label$19;
                                            }
                                            if ((this._loadInt((_33_ + 48))) != (this._loadInt((_33_ + 64)))) {
                                                break label$18;
                                            }
                                            if (((this._loadInt((_33_ + 36))) & 4294967295L) > ((this._loadInt((_33_ + 28))) & 4294967295L)) {
                                                break label$18;
                                            }
                                        }
                                        while (false);
                                        this._storeInt((_33_ + 32), ((this._loadInt((_33_ + 36))) + (this._loadInt((_33_ + 40)))));
                                        label$20:
                                        do {
                                            if (((this._loadInt((_33_ + 36))) & (_32_ = this._loadInt((_33_ + 68)))) != _32_) {
                                                break label$20;
                                            }
                                            if (((this._loadInt((_33_ + 32))) & (this._loadInt((_33_ + 68)))) != 0) {
                                                break label$20;
                                            }
                                            this._storeInt((_33_ + 60), ((this._loadInt((_33_ + 60))) + 1));
                                        }
                                        while (false);
                                        this._storeInt((_33_ + 64), ((this._loadInt((_33_ + 64))) - (this._loadInt((_33_ + 48)))));
                                        label$21:
                                        do {
                                            if (((this._loadInt((_33_ + 28))) & 4294967295L) >= ((this._loadInt((_33_ + 36))) & 4294967295L)) {
                                                break label$21;
                                            }
                                            this._storeInt((_33_ + 64), ((this._loadInt((_33_ + 64))) + -1));
                                        }
                                        while (false);
                                        this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) - (this._loadInt((_33_ + 36)))));
                                        this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + (this._loadInt((_33_ + 40)))));
                                    }
                                    while (false);
                                    this._storeInt((_33_ + 64), ((_32_ = this._loadInt((_33_ + 64))) + (_32_ + (((this._loadInt((_33_ + 28))) & (this._loadInt((_33_ + 68)))) >>> 31))));
                                    this._storeInt((_33_ + 28), ((_32_ = this._loadInt((_33_ + 28))) + _32_));
                                    this._storeInt((_33_ + 40), ((this._loadInt((_33_ + 40))) >>> 1));
                                    continue label$16;
                                }
                            }
                            while (false);
                            if (((this._loadInt((_33_ + 64))) | (this._loadInt((_33_ + 28)))) == 0) {
                                break label$1;
                            }
                            _31_ = this._storeLong((_33_ + 72), 4607182418800017408L);
                            if (0 != 0) {
                                break label$1;
                            }
                            this._storeLong((_33_ + 72), _31_);
                            if ((this._loadInt((_33_ + 24))) == -1) {
                                break label$3;
                            }
                            if (((((_30_ = this._loadDouble((_33_ + 72))) <= 1.0) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                                break label$2;
                            }
                            label$22:
                            do {
                                if ((this._loadInt((_33_ + 24))) != -2) {
                                    break label$22;
                                }
                                this._storeInt((_33_ + 56), ((this._loadInt((_33_ + 56))) + 1));
                            }
                            while (false);
                            this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + 2));
                            break label$1;
                        }
                        while (false);
                        this._storeDouble((_33_ + 88), (this._loadDouble((_33_ + 80))));
                        return (this._loadDouble((_33_ + 88)));
                    }
                    while (false);
                    this._storeDouble((_33_ + 88), ((_30_ = (_30_ = this._loadDouble((_33_ + 80))) - _30_) / _30_));
                    return (this._loadDouble((_33_ + 88)));
                }
                while (false);
                this._storeInt((_33_ + 24), 0);
                this._storeInt((_33_ + 56), ((this._loadInt((_33_ + 56))) + 1));
                break label$1;
            }
            while (false);
            this._storeInt((_33_ + 24), ((_32_ = this._loadInt((_33_ + 24))) + (_32_ & 1)));
        }
        while (false);
        this._storeInt((_33_ + 64), (((this._loadInt((_33_ + 56))) >> 1) + 1071644672));
        this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 24))) >>> 1));
        label$23:
        do {
            if (((this._loadInt((_33_ + 56))) & 1) == 0) {
                break label$23;
            }
            this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) | (this._loadInt((_33_ + 68)))));
        }
        while (false);
        this._storeInt((_33_ + 64), ((this._loadInt((_33_ + 64))) + ((this._loadInt((_33_ + 52))) << 20)));
        this._storeLong((_33_ + 8), (((this._loadLong((_33_ + 64))) << 32L) | (this._loadLong((_33_ + 28)))));
        this._storeDouble((_33_ + 88), (this._storeDouble((_33_ + 72), (this._loadDouble((_33_ + 8))))));
        return (this._loadDouble((_33_ + 88)));
    }

    public final float sqrtf(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeFloat(((_32_ = (this._loadInt((0 + 4))) - 64) + 56), _30_);
        this._storeInt((_32_ + 48), -2147483648);
        this._storeFloat((_32_ + 16), (this._loadFloat((_32_ + 56))));
        label$0:
        do {
            if (((this._storeInt((_32_ + 44), (this._loadInt((_32_ + 16))))) & 2139095040) != 2139095040) {
                break label$0;
            }
            this._storeFloat((_32_ + 60), (((_30_ = this._loadFloat((_32_ + 56))) * _30_) + _30_));
            return (this._loadFloat((_32_ + 60)));
        }
        while (false);
        label$1:
        do {
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            if ((this._loadInt((_32_ + 44))) > 0) {
                                break label$5;
                            }
                            if (((this._loadInt((_32_ + 44))) & ((this._loadInt((_32_ + 48))) ^ -1)) == 0) {
                                break label$4;
                            }
                            if ((this._loadInt((_32_ + 44))) <= -1) {
                                break label$3;
                            }
                        }
                        while (false);
                        label$6:
                        do {
                            if ((this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 44))) >> 23))) != 0) {
                                break label$6;
                            }
                            this._storeInt((_32_ + 24), 0);
                            label$8:
                            do {
                                label$7:
                                while (true) {
                                    if (((this._loadInt((_32_ + 46))) >>> 7) != 0) {
                                        break label$8;
                                    }
                                    this._storeInt((_32_ + 44), ((this._loadInt((_32_ + 44))) << 1));
                                    this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) + 1));
                                    continue label$7;
                                }
                            }
                            while (false);
                            this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 32))) - ((this._loadInt((_32_ + 24))) + -1)));
                        }
                        while (false);
                        this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 32))) + -127));
                        this._storeInt((_32_ + 44), (((this._loadInt((_32_ + 44))) & 8388607) | 8388608));
                        label$9:
                        do {
                            if (((this._loadInt((_32_ + 32))) & 1) == 0) {
                                break label$9;
                            }
                            this._storeInt((_32_ + 44), ((_31_ = this._loadInt((_32_ + 44))) + _31_));
                        }
                        while (false);
                        this._storeInt((_32_ + 32), ((this._loadInt((_32_ + 32))) >> 1));
                        this._storeInt((_32_ + 44), ((_31_ = this._loadInt((_32_ + 44))) + _31_));
                        this._storeInt((_32_ + 36), (this._storeInt((_32_ + 40), 0)));
                        this._storeInt((_32_ + 20), 16777216);
                        label$11:
                        do {
                            label$10:
                            while (true) {
                                if ((this._loadInt((_32_ + 20))) == 0) {
                                    break label$11;
                                }
                                label$12:
                                do {
                                    if ((this._storeInt((_32_ + 28), ((this._loadInt((_32_ + 40))) + (this._loadInt((_32_ + 20)))))) > (this._loadInt((_32_ + 44)))) {
                                        break label$12;
                                    }
                                    this._storeInt((_32_ + 40), ((this._loadInt((_32_ + 28))) + (this._loadInt((_32_ + 20)))));
                                    this._storeInt((_32_ + 44), ((this._loadInt((_32_ + 44))) - (this._loadInt((_32_ + 28)))));
                                    this._storeInt((_32_ + 36), ((this._loadInt((_32_ + 36))) + (this._loadInt((_32_ + 20)))));
                                }
                                while (false);
                                this._storeInt((_32_ + 44), ((_31_ = this._loadInt((_32_ + 44))) + _31_));
                                this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) >>> 1));
                                continue label$10;
                            }
                        }
                        while (false);
                        if ((this._loadInt((_32_ + 44))) == 0) {
                            break label$1;
                        }
                        _31_ = this._storeInt((_32_ + 52), 1065353216);
                        if (0 != 0) {
                            break label$1;
                        }
                        this._storeInt((_32_ + 52), _31_);
                        if (1 != 0) {
                            break label$2;
                        }
                        this._storeInt((_32_ + 36), ((this._loadInt((_32_ + 36))) + 2));
                        break label$1;
                    }
                    while (false);
                    this._storeFloat((_32_ + 60), (this._loadFloat((_32_ + 56))));
                    return (this._loadFloat((_32_ + 60)));
                }
                while (false);
                this._storeFloat((_32_ + 60), ((_30_ = (_30_ = this._loadFloat((_32_ + 56))) - _30_) / _30_));
                return (this._loadFloat((_32_ + 60)));
            }
            while (false);
            this._storeInt((_32_ + 36), ((_31_ = this._loadInt((_32_ + 36))) + (_31_ & 1)));
        }
        while (false);
        this._storeInt((_32_ + 8), (this._storeInt((_32_ + 44), ((this._storeInt((_32_ + 44), (((this._loadInt((_32_ + 36))) >> 1) + 1056964608))) + ((this._loadInt((_32_ + 32))) << 23)))));
        this._storeFloat((_32_ + 60), (this._storeFloat((_32_ + 52), (this._loadFloat((_32_ + 8))))));
        return (this._loadFloat((_32_ + 60)));
    }

    public final void sqrtl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (Math.sqrt((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void srand48(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_31_ + 10), (this._loadInt((_31_ + 14))));
        this._storeInt((_31_ + 6), 13070);
        this._storeInt((_31_ + 8), (this._loadInt((_31_ + 12))));
        seed48((_31_ + 6));
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int __stpcpy(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        label$0:
        do {
            if (((this._storeInt((_32_ + 20), _31_)) & 3) != ((this._loadInt((_32_ + 24))) & 3)) {
                break label$0;
            }
            label$1:
            do {
                label$3:
                do {
                    label$2:
                    while (true) {
                        if (((this._loadInt((_32_ + 20))) & 3) == 0) {
                            break label$1;
                        }
                        if ((this._storeInt((this._loadInt((_32_ + 24))), (this._loadInt((this._loadInt((_32_ + 20))))))) == 0) {
                            break label$3;
                        }
                        this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + 1));
                        this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) + 1));
                        continue label$2;
                    }
                }
                while (false);
                this._storeInt((_32_ + 28), (this._loadInt((_32_ + 24))));
                return (this._loadInt((_32_ + 28)));
            }
            while (false);
            this._storeInt((_32_ + 16), (this._loadInt((_32_ + 24))));
            this._storeInt((_32_ + 12), (this._loadInt((_32_ + 20))));
            label$5:
            do {
                label$4:
                while (true) {
                    if (((((_31_ = this._loadInt((this._loadInt((_32_ + 12))))) + -16843009) & (_31_ ^ -1)) & -2139062144) != 0) {
                        break label$5;
                    }
                    this._storeInt((_32_ + 12), ((_31_ = this._loadInt((_32_ + 12))) + 4));
                    this._storeInt((_30_ = this._loadInt((_32_ + 16))), (this._loadInt(_31_)));
                    this._storeInt((_32_ + 16), (_30_ + 4));
                    continue label$4;
                }
            }
            while (false);
            this._storeInt((_32_ + 24), (this._loadInt((_32_ + 16))));
            this._storeInt((_32_ + 20), (this._loadInt((_32_ + 12))));
        }
        while (false);
        label$7:
        do {
            label$6:
            while (true) {
                if ((this._storeInt((this._loadInt((_32_ + 24))), (this._loadInt((this._loadInt((_32_ + 20))))))) == 0) {
                    break label$7;
                }
                this._storeInt((_32_ + 20), ((this._loadInt((_32_ + 20))) + 1));
                this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) + 1));
                continue label$6;
            }
        }
        while (false);
        this._storeInt((_32_ + 28), (this._loadInt((_32_ + 24))));
        return (this._loadInt((_32_ + 28)));
    }

    public final int __stpncpy(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_33_ + 24))) & 3) != ((this._loadInt((_33_ + 28))) & 3)) {
                    break label$1;
                }
                label$3:
                do {
                    label$2:
                    while (true) {
                        _32_ = 0;
                        label$4:
                        do {
                            if (((this._loadInt((_33_ + 24))) & 3) == 0) {
                                break label$4;
                            }
                            _32_ = 0;
                            if ((this._loadInt((_33_ + 20))) == 0) {
                                break label$4;
                            }
                            _32_ = ((this._storeInt((this._loadInt((_33_ + 28))), (this._loadInt((this._loadInt((_33_ + 24))))))) != 0) ? 1 : 0;
                        }
                        while (false);
                        if (_32_ == 0) {
                            break label$3;
                        }
                        this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                        this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + 1));
                        this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + 1));
                        continue label$2;
                    }
                }
                while (false);
                if ((this._loadInt((_33_ + 20))) == 0) {
                    break label$0;
                }
                if ((this._loadInt((this._loadInt((_33_ + 24))))) == 0) {
                    break label$0;
                }
                this._storeInt((_33_ + 16), (this._loadInt((_33_ + 28))));
                this._storeInt((_33_ + 12), (this._loadInt((_33_ + 24))));
                label$6:
                do {
                    label$5:
                    while (true) {
                        _32_ = 0;
                        label$7:
                        do {
                            if (((this._loadInt((_33_ + 20))) & 4294967295L) < (4 & 4294967295L)) {
                                break label$7;
                            }
                            _32_ = (((((_32_ = this._loadInt((this._loadInt((_33_ + 12))))) + -16843009) & (_32_ ^ -1)) & -2139062144) == 0) ? 1 : 0;
                        }
                        while (false);
                        if (_32_ == 0) {
                            break label$6;
                        }
                        this._storeInt((this._loadInt((_33_ + 16))), (this._loadInt((this._loadInt((_33_ + 12))))));
                        this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -4));
                        this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 4));
                        this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + 4));
                        continue label$5;
                    }
                }
                while (false);
                this._storeInt((_33_ + 28), (this._loadInt((_33_ + 16))));
                this._storeInt((_33_ + 24), (this._loadInt((_33_ + 12))));
            }
            while (false);
            label$9:
            do {
                label$8:
                while (true) {
                    _32_ = 0;
                    label$10:
                    do {
                        if ((this._loadInt((_33_ + 20))) == 0) {
                            break label$10;
                        }
                        _32_ = ((this._storeInt((this._loadInt((_33_ + 28))), (this._loadInt((this._loadInt((_33_ + 24))))))) != 0) ? 1 : 0;
                    }
                    while (false);
                    if (_32_ == 0) {
                        break label$9;
                    }
                    this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                    this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + 1));
                    this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + 1));
                    continue label$8;
                }
            }
            while (false);
        }
        while (false);
        memset((this._loadInt((_33_ + 28))), 0, (this._loadInt((_33_ + 20))));
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int strcasecmp(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        this._storeInt((_32_ + 4), (this._loadInt((_32_ + 12))));
        this._storeInt(_32_, (this._loadInt((_32_ + 8))));
        label$1:
        do {
            label$0:
            while (true) {
                _31_ = 0;
                label$2:
                do {
                    if ((this._loadInt((this._loadInt((_32_ + 4))))) == 0) {
                        break label$2;
                    }
                    if ((this._loadInt((this._loadInt(_32_)))) == 0) {
                        break label$2;
                    }
                    _31_ = 1;
                    if ((this._loadInt((this._loadInt((_32_ + 4))))) == (this._loadInt((this._loadInt(_32_))))) {
                        break label$2;
                    }
                    _31_ = ((tolower((this._loadInt((this._loadInt((_32_ + 4))))))) == (tolower((this._loadInt((this._loadInt(_32_))))))) ? 1 : 0;
                }
                while (false);
                if (_31_ == 0) {
                    break label$1;
                }
                this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) + 1));
                this._storeInt(_32_, ((this._loadInt(_32_)) + 1));
                continue label$0;
            }
        }
        while (false);
        _31_ = tolower((this._loadInt((this._loadInt((_32_ + 4))))));
        _30_ = tolower((this._loadInt((this._loadInt(_32_)))));
        this._storeInt((0 + 4), (_32_ + 16));
        return (_31_ - _30_);
    }

    public final int __strcasecmp_l(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = strcasecmp((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int strcasestr(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt(_32_, (strlen((this._storeInt((_32_ + 4), _31_)))));
        label$0:
        do {
            label$1:
            do {
                label$3:
                do {
                    label$2:
                    while (true) {
                        if ((this._loadInt((this._loadInt((_32_ + 8))))) == 0) {
                            break label$1;
                        }
                        if ((strncasecmp((this._loadInt((_32_ + 8))), (this._loadInt((_32_ + 4))), (this._loadInt(_32_)))) == 0) {
                            break label$3;
                        }
                        this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 8))) + 1));
                        continue label$2;
                    }
                }
                while (false);
                this._storeInt((_32_ + 12), (this._loadInt((_32_ + 8))));
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 12), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int strcat(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        strcpy(((_31_ = this._loadInt((_32_ + 12))) + (strlen(_31_))), (this._loadInt((_32_ + 8))));
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int strchr(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        _30_ = this._storeInt((_32_ + 8), _31_);
        _31_ = 0;
        label$0:
        do {
            if ((this._loadInt((this._storeInt((_32_ + 4), (__strchrnul((this._loadInt((_32_ + 12))), _30_)))))) != (this._loadInt((_32_ + 8)))) {
                break label$0;
            }
            _31_ = this._loadInt((_32_ + 4));
        }
        while (false);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int __strchrnul(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._storeInt((_32_ + 20), (this._loadInt((_32_ + 20))))) == 0) {
                        break label$2;
                    }
                    label$4:
                    do {
                        label$3:
                        while (true) {
                            if (((this._loadInt((_32_ + 24))) & 3) == 0) {
                                break label$1;
                            }
                            if ((this._loadInt((this._loadInt((_32_ + 24))))) == 0) {
                                break label$4;
                            }
                            if ((this._loadInt((this._loadInt((_32_ + 24))))) == (this._loadInt((_32_ + 20)))) {
                                break label$4;
                            }
                            this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) + 1));
                            continue label$3;
                        }
                    }
                    while (false);
                    this._storeInt((_32_ + 28), (this._loadInt((_32_ + 24))));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 28), ((_31_ = this._loadInt((_32_ + 24))) + (strlen(_31_))));
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 20))) * 16843009));
            this._storeInt((_32_ + 16), (this._loadInt((_32_ + 24))));
            label$6:
            do {
                label$5:
                while (true) {
                    _31_ = 0;
                    label$7:
                    do {
                        if (((((_30_ = this._loadInt((this._loadInt((_32_ + 16))))) + -16843009) & (_30_ ^ -1)) & -2139062144) != 0) {
                            break label$7;
                        }
                        _31_ = (((((_31_ = (this._loadInt((this._loadInt((_32_ + 16))))) ^ (this._loadInt((_32_ + 12)))) + -16843009) & (_31_ ^ -1)) & -2139062144) == 0) ? 1 : 0;
                    }
                    while (false);
                    if (_31_ == 0) {
                        break label$6;
                    }
                    this._storeInt((_32_ + 16), ((this._loadInt((_32_ + 16))) + 4));
                    continue label$5;
                }
            }
            while (false);
            this._storeInt((_32_ + 24), (this._loadInt((_32_ + 16))));
            label$9:
            do {
                label$8:
                while (true) {
                    _31_ = 0;
                    label$10:
                    do {
                        if ((this._loadInt((this._loadInt((_32_ + 24))))) == 0) {
                            break label$10;
                        }
                        _31_ = ((this._loadInt((this._loadInt((_32_ + 24))))) != (this._loadInt((_32_ + 20)))) ? 1 : 0;
                    }
                    while (false);
                    if (_31_ == 0) {
                        break label$9;
                    }
                    this._storeInt((_32_ + 24), ((this._loadInt((_32_ + 24))) + 1));
                    continue label$8;
                }
            }
            while (false);
            this._storeInt((_32_ + 28), (this._loadInt((_32_ + 24))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int strcmp(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        label$1:
        do {
            label$0:
            while (true) {
                _31_ = 0;
                label$2:
                do {
                    if ((this._loadInt((this._loadInt((_32_ + 12))))) != (this._loadInt((this._loadInt((_32_ + 8)))))) {
                        break label$2;
                    }
                    _31_ = ((this._loadInt((this._loadInt((_32_ + 12))))) != 0) ? 1 : 0;
                }
                while (false);
                if (_31_ == 0) {
                    break label$1;
                }
                this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 12))) + 1));
                this._storeInt((_32_ + 8), ((this._loadInt((_32_ + 8))) + 1));
                continue label$0;
            }
        }
        while (false);
        return ((this._loadInt((this._loadInt((_32_ + 12))))) - (this._loadInt((this._loadInt((_32_ + 8))))));
    }

    public final int strcpy(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        __stpcpy((this._loadInt((_32_ + 12))), _31_);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int strcspn(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_32_ + 36), _31_);
        this._storeInt((_32_ + 32), (this._loadInt((_32_ + 40))));
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((this._loadInt((_32_ + 36))))) == 0) {
                    break label$1;
                }
                if ((this._loadInt(((this._loadInt((_32_ + 36))) + 1))) == 0) {
                    break label$1;
                }
                memset(_32_, 0, 32);
                label$3:
                do {
                    label$2:
                    while (true) {
                        _31_ = 0;
                        label$4:
                        do {
                            if ((this._loadInt((this._loadInt((_32_ + 36))))) == 0) {
                                break label$4;
                            }
                            _31_ = ((this._storeInt((_30_ = _32_ + (((_31_ = this._loadInt((this._loadInt((_32_ + 36))))) >>> 3) & 28)), ((this._loadInt(_30_)) | (1 << (_31_ & 31))))) != 0) ? 1 : 0;
                        }
                        while (false);
                        if (_31_ == 0) {
                            break label$3;
                        }
                        this._storeInt((_32_ + 36), ((this._loadInt((_32_ + 36))) + 1));
                        continue label$2;
                    }
                }
                while (false);
                label$6:
                do {
                    label$5:
                    while (true) {
                        _31_ = 0;
                        label$7:
                        do {
                            if ((this._loadInt((this._loadInt((_32_ + 40))))) == 0) {
                                break label$7;
                            }
                            _31_ = (((this._loadInt((_32_ + (((_31_ = this._loadInt((this._loadInt((_32_ + 40))))) >>> 3) & 28)))) & (1 << (_31_ & 31))) == 0) ? 1 : 0;
                        }
                        while (false);
                        if (_31_ == 0) {
                            break label$6;
                        }
                        this._storeInt((_32_ + 40), ((this._loadInt((_32_ + 40))) + 1));
                        continue label$5;
                    }
                }
                while (false);
                this._storeInt((_32_ + 44), ((this._loadInt((_32_ + 40))) - (this._loadInt((_32_ + 32)))));
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 44), ((__strchrnul((this._loadInt((_32_ + 40))), (this._loadInt((this._loadInt((_32_ + 36))))))) - (this._loadInt((_32_ + 32)))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 44));
        this._storeInt((0 + 4), (_32_ + 48));
        return _31_;
    }

    public final int __strdup(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), (malloc(((this._storeInt((_31_ + 4), (strlen((this._storeInt((_31_ + 8), _30_)))))) + 1))))) == 0) {
                    break label$1;
                }
                this._storeInt((_31_ + 12), (memcpy((this._loadInt(_31_)), (this._loadInt((_31_ + 8))), ((this._loadInt((_31_ + 4))) + 1))));
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 12), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __strerror_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        this._storeInt(_32_, 0);
        label$1:
        do {
            label$0:
            while (true) {
                _31_ = 0;
                label$2:
                do {
                    if ((this._loadInt(((this._loadInt(_32_)) + 17312))) == 0) {
                        break label$2;
                    }
                    _31_ = ((this._loadInt(((this._loadInt(_32_)) + 17312))) != (this._loadInt((_32_ + 12)))) ? 1 : 0;
                }
                while (false);
                if (_31_ == 0) {
                    break label$1;
                }
                this._storeInt(_32_, ((this._loadInt(_32_)) + 1));
                continue label$0;
            }
        }
        while (false);
        this._storeInt((_32_ + 4), 17408);
        label$3:
        while (true) {
            label$5:
            do {
                label$6:
                do {
                    if ((this._loadInt(_32_)) == 0) {
                        break label$6;
                    }
                    label$7:
                    while (true) {
                        if ((this._loadInt((this._loadInt((_32_ + 4))))) == 0) {
                            break label$5;
                        }
                        this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) + 1));
                        continue label$7;
                    }
                }
                while (false);
                _31_ = this._loadInt(((this._loadInt((_32_ + 8))) + 20));
                _31_ = this.__lctrans.invoke((this._loadInt((_32_ + 4))), _31_);
                this._storeInt((0 + 4), (_32_ + 16));
                return _31_;
            }
            while (false);
            this._storeInt((_32_ + 4), ((this._loadInt((_32_ + 4))) + 1));
            this._storeInt(_32_, ((this._loadInt(_32_)) + -1));
            continue label$3;
        }
//        throw (new UnreachableException());
    }

    public final int strerror(int _30_)
    {
        int _31_ = 0;
        _30_ = __strerror_l((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)), (this._loadInt(((__pthread_self$2e$284()) + 156))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int __pthread_self$2e$284()
    {
        return (this.pthread_self.invoke());
    }

    public final int strerror_r(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt((_33_ + 8), (strlen((this._storeInt((_33_ + 12), (strerror((this._loadInt((_33_ + 24))))))))))) & 4294967295L) < ((this._loadInt((_33_ + 16))) & 4294967295L)) {
                    break label$1;
                }
                label$2:
                do {
                    if ((this._loadInt((_33_ + 16))) == 0) {
                        break label$2;
                    }
                    memcpy((this._loadInt((_33_ + 20))), (this._loadInt((_33_ + 12))), ((this._loadInt((_33_ + 16))) + -1));
                    this._storeInt((((this._loadInt((_33_ + 20))) + (this._loadInt((_33_ + 16)))) + -1), 0);
                }
                while (false);
                this._storeInt((_33_ + 28), 34);
                break label$0;
            }
            while (false);
            memcpy((this._loadInt((_33_ + 20))), (this._loadInt((_33_ + 12))), ((this._loadInt((_33_ + 8))) + 1));
            this._storeInt((_33_ + 28), 0);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int strlcat(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_33_ + 12), (strnlen((this._loadInt((_33_ + 24))), _32_)))) != (this._loadInt((_33_ + 16)))) {
                    break label$1;
                }
                this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 12))) + (strlen((this._loadInt((_33_ + 20)))))));
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 28), ((_32_ = this._loadInt((_33_ + 12))) + (strlcpy((_32_ + (this._loadInt((_33_ + 24)))), (this._loadInt((_33_ + 20))), ((this._loadInt((_33_ + 16))) - _32_)))));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int strlcpy(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        this._storeInt((_33_ + 16), (this._loadInt((_33_ + 28))));
        this._storeInt((_33_ + 20), ((_32_ = this._loadInt((_33_ + 20))) + -1));
        label$0:
        do {
            if (_32_ == 0) {
                break label$0;
            }
            label$1:
            do {
                if (((this._loadInt((_33_ + 24))) & 3) != ((this._loadInt((_33_ + 28))) & 3)) {
                    break label$1;
                }
                label$3:
                do {
                    label$2:
                    while (true) {
                        _32_ = 0;
                        label$4:
                        do {
                            if (((this._loadInt((_33_ + 24))) & 3) == 0) {
                                break label$4;
                            }
                            _32_ = 0;
                            if ((this._loadInt((_33_ + 20))) == 0) {
                                break label$4;
                            }
                            _32_ = ((this._storeInt((this._loadInt((_33_ + 28))), (this._loadInt((this._loadInt((_33_ + 24))))))) != 0) ? 1 : 0;
                        }
                        while (false);
                        if (_32_ == 0) {
                            break label$3;
                        }
                        this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                        this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + 1));
                        this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + 1));
                        continue label$2;
                    }
                }
                while (false);
                if ((this._loadInt((_33_ + 20))) == 0) {
                    break label$1;
                }
                if ((this._loadInt((this._loadInt((_33_ + 24))))) == 0) {
                    break label$1;
                }
                this._storeInt((_33_ + 12), (this._loadInt((_33_ + 28))));
                this._storeInt((_33_ + 8), (this._loadInt((_33_ + 24))));
                label$6:
                do {
                    label$5:
                    while (true) {
                        _32_ = 0;
                        label$7:
                        do {
                            if (((this._loadInt((_33_ + 20))) & 4294967295L) < (4 & 4294967295L)) {
                                break label$7;
                            }
                            _32_ = (((((_32_ = this._loadInt((this._loadInt((_33_ + 8))))) + -16843009) & (_32_ ^ -1)) & -2139062144) == 0) ? 1 : 0;
                        }
                        while (false);
                        if (_32_ == 0) {
                            break label$6;
                        }
                        this._storeInt((this._loadInt((_33_ + 12))), (this._loadInt((this._loadInt((_33_ + 8))))));
                        this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -4));
                        this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 4));
                        this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 4));
                        continue label$5;
                    }
                }
                while (false);
                this._storeInt((_33_ + 28), (this._loadInt((_33_ + 12))));
                this._storeInt((_33_ + 24), (this._loadInt((_33_ + 8))));
            }
            while (false);
            label$9:
            do {
                label$8:
                while (true) {
                    _32_ = 0;
                    label$10:
                    do {
                        if ((this._loadInt((_33_ + 20))) == 0) {
                            break label$10;
                        }
                        _32_ = ((this._storeInt((this._loadInt((_33_ + 28))), (this._loadInt((this._loadInt((_33_ + 24))))))) != 0) ? 1 : 0;
                    }
                    while (false);
                    if (_32_ == 0) {
                        break label$9;
                    }
                    this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -1));
                    this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + 1));
                    this._storeInt((_33_ + 28), ((this._loadInt((_33_ + 28))) + 1));
                    continue label$8;
                }
            }
            while (false);
            this._storeInt((this._loadInt((_33_ + 28))), 0);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 16));
        _31_ = this._loadInt((_33_ + 28));
        _30_ = strlen((this._loadInt((_33_ + 24))));
        this._storeInt((0 + 4), (_33_ + 32));
        return (_30_ + (_31_ - _32_));
    }

    public final int strlen(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = (this._loadInt((0 + 4))) - 16) + 4), (this._storeInt((_31_ + 8), _30_)));
        label$0:
        do {
            label$2:
            do {
                label$1:
                while (true) {
                    if (((this._loadInt((_31_ + 8))) & 3) == 0) {
                        break label$0;
                    }
                    if ((this._loadInt((this._loadInt((_31_ + 8))))) == 0) {
                        break label$2;
                    }
                    this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) + 1));
                    continue label$1;
                }
            }
            while (false);
            this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 8))) - (this._loadInt((_31_ + 4)))));
            return (this._loadInt((_31_ + 12)));
        }
        while (false);
        this._storeInt(_31_, (this._loadInt((_31_ + 8))));
        label$4:
        do {
            label$3:
            while (true) {
                if (((((_30_ = this._loadInt((this._loadInt(_31_)))) + -16843009) & (_30_ ^ -1)) & -2139062144) != 0) {
                    break label$4;
                }
                this._storeInt(_31_, ((this._loadInt(_31_)) + 4));
                continue label$3;
            }
        }
        while (false);
        this._storeInt((_31_ + 8), (this._loadInt(_31_)));
        label$6:
        do {
            label$5:
            while (true) {
                if ((this._loadInt((this._loadInt((_31_ + 8))))) == 0) {
                    break label$6;
                }
                this._storeInt((_31_ + 8), ((this._loadInt((_31_ + 8))) + 1));
                continue label$5;
            }
        }
        while (false);
        this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 8))) - (this._loadInt((_31_ + 4)))));
        return (this._loadInt((_31_ + 12)));
    }

    public final int strncasecmp(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this._storeInt((_33_ + 12), (this._loadInt((_33_ + 24))));
        this._storeInt((_33_ + 8), (this._loadInt((_33_ + 20))));
        this._storeInt((_33_ + 16), ((_32_ = this._loadInt((_33_ + 16))) + -1));
        label$0:
        do {
            label$1:
            do {
                if (_32_ == 0) {
                    break label$1;
                }
                label$3:
                do {
                    label$2:
                    while (true) {
                        _32_ = 0;
                        label$4:
                        do {
                            if ((this._loadInt((this._loadInt((_33_ + 12))))) == 0) {
                                break label$4;
                            }
                            if ((this._loadInt((this._loadInt((_33_ + 8))))) == 0) {
                                break label$4;
                            }
                            if ((this._loadInt((_33_ + 16))) == 0) {
                                break label$4;
                            }
                            _32_ = 1;
                            if ((this._loadInt((this._loadInt((_33_ + 12))))) == (this._loadInt((this._loadInt((_33_ + 8)))))) {
                                break label$4;
                            }
                            _32_ = ((tolower((this._loadInt((this._loadInt((_33_ + 12))))))) == (tolower((this._loadInt((this._loadInt((_33_ + 8)))))))) ? 1 : 0;
                        }
                        while (false);
                        if (_32_ == 0) {
                            break label$3;
                        }
                        this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 1));
                        this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 1));
                        this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -1));
                        continue label$2;
                    }
                }
                while (false);
                this._storeInt((_33_ + 28), ((tolower((this._loadInt((this._loadInt((_33_ + 12))))))) - (tolower((this._loadInt((this._loadInt((_33_ + 8)))))))));
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 28), 0);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int __strncasecmp_l(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_34_ + 8), _31_);
        this._storeInt((_34_ + 4), _32_);
        this._storeInt(_34_, _33_);
        _33_ = strncasecmp((this._loadInt((_34_ + 12))), (this._loadInt((_34_ + 8))), (this._loadInt((_34_ + 4))));
        this._storeInt((0 + 4), (_34_ + 16));
        return _33_;
    }

    public final int strncat(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        this._storeInt(_33_, (this._loadInt((_33_ + 12))));
        this._storeInt((_33_ + 12), ((strlen((this._loadInt((_33_ + 12))))) + (this._loadInt((_33_ + 12)))));
        label$1:
        do {
            label$0:
            while (true) {
                _32_ = 0;
                label$2:
                do {
                    if ((this._loadInt((_33_ + 4))) == 0) {
                        break label$2;
                    }
                    _32_ = ((this._loadInt((this._loadInt((_33_ + 8))))) != 0) ? 1 : 0;
                }
                while (false);
                if (_32_ == 0) {
                    break label$1;
                }
                this._storeInt((_33_ + 4), ((this._loadInt((_33_ + 4))) + -1));
                this._storeInt((_33_ + 8), ((_32_ = this._loadInt((_33_ + 8))) + 1));
                this._storeInt((_33_ + 12), ((_31_ = this._loadInt((_33_ + 12))) + 1));
                this._storeInt(_31_, (this._loadInt(_32_)));
                continue label$0;
            }
        }
        while (false);
        this._storeInt((_32_ = this._loadInt((_33_ + 12))), 0);
        this._storeInt((_33_ + 12), (_32_ + 1));
        _32_ = this._loadInt(_33_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int strncmp(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        this._storeInt((_33_ + 12), (this._loadInt((_33_ + 24))));
        this._storeInt((_33_ + 8), (this._loadInt((_33_ + 20))));
        this._storeInt((_33_ + 16), ((_32_ = this._loadInt((_33_ + 16))) + -1));
        label$0:
        do {
            if (_32_ == 0) {
                break label$0;
            }
            label$2:
            do {
                label$1:
                while (true) {
                    _32_ = 0;
                    label$3:
                    do {
                        if ((this._loadInt((this._loadInt((_33_ + 12))))) == 0) {
                            break label$3;
                        }
                        if ((this._loadInt((this._loadInt((_33_ + 8))))) == 0) {
                            break label$3;
                        }
                        if ((this._loadInt((_33_ + 16))) == 0) {
                            break label$3;
                        }
                        _32_ = ((this._loadInt((this._loadInt((_33_ + 12))))) == (this._loadInt((this._loadInt((_33_ + 8)))))) ? 1 : 0;
                    }
                    while (false);
                    if (_32_ == 0) {
                        break label$2;
                    }
                    this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 1));
                    this._storeInt((_33_ + 8), ((this._loadInt((_33_ + 8))) + 1));
                    this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + -1));
                    continue label$1;
                }
            }
            while (false);
            this._storeInt((_33_ + 28), ((this._loadInt((this._loadInt((_33_ + 12))))) - (this._loadInt((this._loadInt((_33_ + 8)))))));
            return (this._loadInt((_33_ + 28)));
        }
        while (false);
        this._storeInt((_33_ + 28), 0);
        return (this._loadInt((_33_ + 28)));
    }

    public final int strncpy(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        __stpncpy((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        _32_ = this._loadInt((_33_ + 12));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int strndup(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_32_ + 12), (malloc(((this._storeInt((_32_ + 16), (strnlen((this._loadInt((_32_ + 24))), _31_)))) + 1))))) == 0) {
                    break label$1;
                }
                memcpy((this._loadInt((_32_ + 12))), (this._loadInt((_32_ + 24))), (this._loadInt((_32_ + 16))));
                this._storeInt(((_31_ = this._loadInt((_32_ + 12))) + (this._loadInt((_32_ + 16)))), 0);
                this._storeInt((_32_ + 28), _31_);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 28), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int strnlen(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_32_ + 4), (memchr((this._loadInt((_32_ + 12))), 0, _31_)))) == 0) {
                    break label$1;
                }
                _31_ = (this._loadInt((_32_ + 4))) - (this._loadInt((_32_ + 12)));
                break label$0;
            }
            while (false);
            _31_ = this._loadInt((_32_ + 8));
        }
        while (false);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int strpbrk(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        _30_ = this._storeInt((_32_ + 8), _31_);
        _31_ = 0;
        label$0:
        do {
            if ((this._loadInt((this._storeInt((_32_ + 12), ((strcspn((this._loadInt((_32_ + 12))), _30_)) + (this._loadInt((_32_ + 12)))))))) == 0) {
                break label$0;
            }
            _31_ = this._loadInt((_32_ + 12));
        }
        while (false);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int strrchr(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __memrchr((_30_ = this._loadInt((_32_ + 12))), _31_, ((strlen(_30_)) + 1));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int strsep(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_32_ + 20), _31_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((this._storeInt((_32_ + 16), (this._loadInt((this._loadInt((_32_ + 24))))))) == 0) {
                            break label$3;
                        }
                        if ((this._loadInt((this._storeInt((_32_ + 12), ((_31_ = this._loadInt((_32_ + 16))) + (strcspn(_31_, (this._loadInt((_32_ + 20)))))))))) == 0) {
                            break label$2;
                        }
                        this._storeInt((_31_ = this._loadInt((_32_ + 12))), 0);
                        this._storeInt((_32_ + 12), (_31_ + 1));
                        break label$1;
                    }
                    while (false);
                    this._storeInt((_32_ + 28), 0);
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 12), 0);
            }
            while (false);
            this._storeInt((this._loadInt((_32_ + 24))), (this._loadInt((_32_ + 12))));
            this._storeInt((_32_ + 28), (this._loadInt((_32_ + 16))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 28));
        this._storeInt((0 + 4), (_32_ + 32));
        return _31_;
    }

    public final int strspn(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeLong(((_32_ = (this._loadInt((0 + 4))) - 48) + 16), (this._storeLong((_32_ + 24), 0L)));
        this._storeInt((_32_ + 40), _30_);
        this._storeInt((_32_ + 36), _31_);
        this._storeInt((_32_ + 32), (this._loadInt((_32_ + 40))));
        _31_ = this._storeInt((_32_ + 4), (this._storeInt((_32_ + 8), (this._storeInt((_32_ + 12), (this._storeInt(_32_, 0)))))));
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((this._loadInt((_32_ + 36))))) == 0) {
                    break label$1;
                }
                if ((this._loadInt(((this._loadInt((_32_ + 36))) + 1))) == 0) {
                    break label$0;
                }
                label$3:
                do {
                    label$2:
                    while (true) {
                        _31_ = 0;
                        label$4:
                        do {
                            if ((this._loadInt((this._loadInt((_32_ + 36))))) == 0) {
                                break label$4;
                            }
                            _31_ = ((this._storeInt((_30_ = _32_ + (((_31_ = this._loadInt((this._loadInt((_32_ + 36))))) >>> 3) & 28)), ((this._loadInt(_30_)) | (1 << (_31_ & 31))))) != 0) ? 1 : 0;
                        }
                        while (false);
                        if (_31_ == 0) {
                            break label$3;
                        }
                        this._storeInt((_32_ + 36), ((this._loadInt((_32_ + 36))) + 1));
                        continue label$2;
                    }
                }
                while (false);
                label$6:
                do {
                    label$5:
                    while (true) {
                        _31_ = 0;
                        label$7:
                        do {
                            if ((this._loadInt((this._loadInt((_32_ + 40))))) == 0) {
                                break label$7;
                            }
                            _31_ = (((this._loadInt((_32_ + (((_31_ = this._loadInt((this._loadInt((_32_ + 40))))) >>> 3) & 28)))) & (1 << (_31_ & 31))) != 0) ? 1 : 0;
                        }
                        while (false);
                        if (_31_ == 0) {
                            break label$6;
                        }
                        this._storeInt((_32_ + 40), ((this._loadInt((_32_ + 40))) + 1));
                        continue label$5;
                    }
                }
                while (false);
                this._storeInt((_32_ + 44), ((this._loadInt((_32_ + 40))) - (this._loadInt((_32_ + 32)))));
                return (this._loadInt((_32_ + 44)));
            }
            while (false);
            this._storeInt((_32_ + 44), _31_);
            return (this._loadInt((_32_ + 44)));
        }
        while (false);
        label$9:
        do {
            label$8:
            while (true) {
                if ((this._loadInt((this._loadInt((_32_ + 40))))) != (this._loadInt((this._loadInt((_32_ + 36)))))) {
                    break label$9;
                }
                this._storeInt((_32_ + 40), ((this._loadInt((_32_ + 40))) + 1));
                continue label$8;
            }
        }
        while (false);
        this._storeInt((_32_ + 44), ((this._loadInt((_32_ + 40))) - (this._loadInt((_32_ + 32)))));
        return (this._loadInt((_32_ + 44)));
    }

    public final int strstr(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        if ((this._loadInt((this._storeInt((_32_ + 4), _31_)))) == 0) {
                                            break label$7;
                                        }
                                        label$8:
                                        do {
                                            if ((this._storeInt((_32_ + 8), (strchr((this._loadInt((_32_ + 8))), (this._loadInt((this._loadInt((_32_ + 4))))))))) == 0) {
                                                break label$8;
                                            }
                                            if ((this._loadInt(((this._loadInt((_32_ + 4))) + 1))) == 0) {
                                                break label$8;
                                            }
                                            if ((this._loadInt(((this._loadInt((_32_ + 8))) + 1))) == 0) {
                                                break label$6;
                                            }
                                            if ((this._loadInt(((this._loadInt((_32_ + 4))) + 2))) == 0) {
                                                break label$5;
                                            }
                                            if ((this._loadInt(((this._loadInt((_32_ + 8))) + 2))) == 0) {
                                                break label$4;
                                            }
                                            if ((this._loadInt(((this._loadInt((_32_ + 4))) + 3))) == 0) {
                                                break label$3;
                                            }
                                            if ((this._loadInt(((this._loadInt((_32_ + 8))) + 3))) == 0) {
                                                break label$2;
                                            }
                                            if ((this._loadInt(((this._loadInt((_32_ + 4))) + 4))) == 0) {
                                                break label$1;
                                            }
                                            this._storeInt((_32_ + 12), (twoway_strstr((this._loadInt((_32_ + 8))), (this._loadInt((_32_ + 4))))));
                                            break label$0;
                                        }
                                        while (false);
                                        this._storeInt((_32_ + 12), (this._loadInt((_32_ + 8))));
                                        break label$0;
                                    }
                                    while (false);
                                    this._storeInt((_32_ + 12), (this._loadInt((_32_ + 8))));
                                    break label$0;
                                }
                                while (false);
                                this._storeInt((_32_ + 12), 0);
                                break label$0;
                            }
                            while (false);
                            this._storeInt((_32_ + 12), (twobyte_strstr((this._loadInt((_32_ + 8))), (this._loadInt((_32_ + 4))))));
                            break label$0;
                        }
                        while (false);
                        this._storeInt((_32_ + 12), 0);
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_32_ + 12), (threebyte_strstr((this._loadInt((_32_ + 8))), (this._loadInt((_32_ + 4))))));
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 12), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 12), (fourbyte_strstr((this._loadInt((_32_ + 8))), (this._loadInt((_32_ + 4))))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int twobyte_strstr(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_32_ + 6), (((this._loadInt((_31_ = this._storeInt((_32_ + 8), _31_)))) << 8) | (this._loadInt((_31_ + 1)))));
        this._storeInt((_32_ + 4), (((this._loadInt((_31_ = this._loadInt((_32_ + 12))))) << 8) | (this._loadInt((_31_ + 1)))));
        this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 12))) + 1));
        label$1:
        do {
            label$0:
            while (true) {
                _31_ = 0;
                label$2:
                do {
                    if ((this._loadInt((this._loadInt((_32_ + 12))))) == 0) {
                        break label$2;
                    }
                    _31_ = ((this._loadInt((_32_ + 4))) != (this._loadInt((_32_ + 6)))) ? 1 : 0;
                }
                while (false);
                if (_31_ == 0) {
                    break label$1;
                }
                _31_ = this._loadInt((_32_ + 4));
                this._storeInt((_32_ + 12), ((_30_ = this._loadInt((_32_ + 12))) + 1));
                this._storeInt((_32_ + 4), ((_31_ << 8) | (this._loadInt((_30_ + 1)))));
                continue label$0;
            }
        }
        while (false);
        _31_ = 0;
        label$3:
        do {
            if ((this._loadInt((this._loadInt((_32_ + 12))))) == 0) {
                break label$3;
            }
            _31_ = (this._loadInt((_32_ + 12))) + -1;
        }
        while (false);
        return _31_;
    }

    public final int threebyte_strstr(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_32_ + 4), ((((this._loadInt((_31_ = this._storeInt((_32_ + 8), _31_)))) << 24) | ((this._loadInt((_31_ + 1))) << 16)) | ((this._loadInt((_31_ + 2))) << 8)));
        this._storeInt(_32_, ((((this._loadInt((_31_ = this._loadInt((_32_ + 12))))) << 24) | ((this._loadInt((_31_ + 1))) << 16)) | ((this._loadInt((_31_ + 2))) << 8)));
        this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 12))) + 2));
        label$1:
        do {
            label$0:
            while (true) {
                _31_ = 0;
                label$2:
                do {
                    if ((this._loadInt((this._loadInt((_32_ + 12))))) == 0) {
                        break label$2;
                    }
                    _31_ = ((this._loadInt(_32_)) != (this._loadInt((_32_ + 4)))) ? 1 : 0;
                }
                while (false);
                if (_31_ == 0) {
                    break label$1;
                }
                _31_ = this._loadInt(_32_);
                this._storeInt((_32_ + 12), ((_30_ = this._loadInt((_32_ + 12))) + 1));
                this._storeInt(_32_, ((_31_ | (this._loadInt((_30_ + 1)))) << 8));
                continue label$0;
            }
        }
        while (false);
        _31_ = 0;
        label$3:
        do {
            if ((this._loadInt((this._loadInt((_32_ + 12))))) == 0) {
                break label$3;
            }
            _31_ = (this._loadInt((_32_ + 12))) + -2;
        }
        while (false);
        return _31_;
    }

    public final int fourbyte_strstr(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = (this._loadInt((0 + 4))) - 16) + 12), _30_);
        this._storeInt((_32_ + 4), (((((this._loadInt((_31_ = this._storeInt((_32_ + 8), _31_)))) << 24) | ((this._loadInt((_31_ + 1))) << 16)) | ((this._loadInt((_31_ + 2))) << 8)) | (this._loadInt((_31_ + 3)))));
        this._storeInt(_32_, (((((this._loadInt((_31_ = this._loadInt((_32_ + 12))))) << 24) | ((this._loadInt((_31_ + 1))) << 16)) | ((this._loadInt((_31_ + 2))) << 8)) | (this._loadInt((_31_ + 3)))));
        this._storeInt((_32_ + 12), ((this._loadInt((_32_ + 12))) + 3));
        label$1:
        do {
            label$0:
            while (true) {
                _31_ = 0;
                label$2:
                do {
                    if ((this._loadInt((this._loadInt((_32_ + 12))))) == 0) {
                        break label$2;
                    }
                    _31_ = ((this._loadInt(_32_)) != (this._loadInt((_32_ + 4)))) ? 1 : 0;
                }
                while (false);
                if (_31_ == 0) {
                    break label$1;
                }
                _31_ = this._loadInt(_32_);
                this._storeInt((_32_ + 12), ((_30_ = this._loadInt((_32_ + 12))) + 1));
                this._storeInt(_32_, ((_31_ << 8) | (this._loadInt((_30_ + 1)))));
                continue label$0;
            }
        }
        while (false);
        _31_ = 0;
        label$3:
        do {
            if ((this._loadInt((this._loadInt((_32_ + 12))))) == 0) {
                break label$3;
            }
            _31_ = (this._loadInt((_32_ + 12))) + -3;
        }
        while (false);
        return _31_;
    }

    public final int twoway_strstr(int _30_, int _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        int _34_ = 0;
        this._storeLong(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 1136))) + 1056), (this._storeLong((_33_ + 1064), 0L)));
        this._storeInt((_33_ + 1128), _30_);
        this._storeInt((_33_ + 1124), _31_);
        _32_ = this._storeInt((_33_ + 1116), (this._storeInt((_33_ + 1044), (this._storeInt((_33_ + 1048), (this._storeInt((_33_ + 1052), (this._storeInt((_33_ + 1040), 0)))))))));
        label$1:
        do {
            label$0:
            while (true) {
                _31_ = 0;
                label$2:
                do {
                    if ((this._loadInt(((this._loadInt((_33_ + 1124))) + (this._loadInt((_33_ + 1116)))))) == 0) {
                        break label$2;
                    }
                    _31_ = ((this._loadInt(((this._loadInt((_33_ + 1128))) + (this._loadInt((_33_ + 1116)))))) != _32_) ? 1 : 0;
                }
                while (false);
                if (_31_ == 0) {
                    break label$1;
                }
                this._storeInt((_34_ = (_33_ + 1040) + (((_31_ = this._loadInt(((this._loadInt((_33_ + 1124))) + (_30_ = this._loadInt((_33_ + 1116)))))) >>> 3) & 28)), ((this._loadInt(_34_)) | (1 << (_31_ & 31))));
                this._storeInt(((_33_ + 16) + (_31_ << 2)), (_30_ + 1));
                this._storeInt((_33_ + 1116), ((this._loadInt((_33_ + 1116))) + 1));
                continue label$0;
            }
        }
        while (false);
        label$3:
        do {
            label$4:
            do {
                if ((this._loadInt(((this._loadInt((_33_ + 1124))) + (this._loadInt((_33_ + 1116)))))) == 0) {
                    break label$4;
                }
                this._storeInt((_33_ + 1132), 0);
                break label$3;
            }
            while (false);
            this._storeInt((_33_ + 1112), -1);
            this._storeInt((_33_ + 1108), 0);
            _34_ = this._storeInt((_33_ + 1104), (this._storeInt((_33_ + 1100), 1)));
            label$6:
            do {
                label$5:
                while (true) {
                    if ((((this._loadInt((_33_ + 1108))) + (this._loadInt((_33_ + 1104)))) & 4294967295L) >= ((this._loadInt((_33_ + 1116))) & 4294967295L)) {
                        break label$6;
                    }
                    label$7:
                    do {
                        label$8:
                        do {
                            if ((this._loadInt(((_31_ = this._loadInt((_33_ + 1124))) + ((this._loadInt((_33_ + 1112))) + (_30_ = this._loadInt((_33_ + 1104))))))) != (this._loadInt((_31_ + ((this._loadInt((_33_ + 1108))) + _30_))))) {
                                break label$8;
                            }
                            if ((this._loadInt((_33_ + 1104))) != (this._loadInt((_33_ + 1100)))) {
                                break label$7;
                            }
                            this._storeInt((_33_ + 1108), ((this._loadInt((_33_ + 1108))) + (this._loadInt((_33_ + 1100)))));
                            this._storeInt((_33_ + 1104), _34_);
                            continue label$5;
                        }
                        while (false);
                        label$9:
                        do {
                            if ((this._loadInt(((_31_ = this._loadInt((_33_ + 1124))) + ((this._loadInt((_33_ + 1112))) + (_30_ = this._loadInt((_33_ + 1104))))))) > (this._loadInt((_31_ + ((this._loadInt((_33_ + 1108))) + _30_))))) {
                                break label$9;
                            }
                            this._storeInt((_33_ + 1108), ((_31_ = this._loadInt((_33_ + 1108))) + _34_));
                            this._storeInt((_33_ + 1112), _31_);
                            this._storeInt((_33_ + 1104), (this._storeInt((_33_ + 1100), _34_)));
                            continue label$5;
                        }
                        while (false);
                        this._storeInt((_33_ + 1108), ((this._loadInt((_33_ + 1108))) + (this._loadInt((_33_ + 1104)))));
                        this._storeInt((_33_ + 1104), _34_);
                        this._storeInt((_33_ + 1100), ((this._loadInt((_33_ + 1108))) - (this._loadInt((_33_ + 1112)))));
                        continue label$5;
                    }
                    while (false);
                    this._storeInt((_33_ + 1104), ((this._loadInt((_33_ + 1104))) + _34_));
                    continue label$5;
                }
            }
            while (false);
            this._storeInt((_33_ + 1096), (this._loadInt((_33_ + 1112))));
            this._storeInt((_33_ + 1092), (this._loadInt((_33_ + 1100))));
            this._storeInt((_33_ + 1112), -1);
            this._storeInt((_33_ + 1108), 0);
            _34_ = this._storeInt((_33_ + 1104), (this._storeInt((_33_ + 1100), 1)));
            label$11:
            do {
                label$10:
                while (true) {
                    if ((((this._loadInt((_33_ + 1108))) + (this._loadInt((_33_ + 1104)))) & 4294967295L) >= ((this._loadInt((_33_ + 1116))) & 4294967295L)) {
                        break label$11;
                    }
                    label$12:
                    do {
                        label$13:
                        do {
                            if ((this._loadInt(((_31_ = this._loadInt((_33_ + 1124))) + ((this._loadInt((_33_ + 1112))) + (_30_ = this._loadInt((_33_ + 1104))))))) != (this._loadInt((_31_ + ((this._loadInt((_33_ + 1108))) + _30_))))) {
                                break label$13;
                            }
                            if ((this._loadInt((_33_ + 1104))) != (this._loadInt((_33_ + 1100)))) {
                                break label$12;
                            }
                            this._storeInt((_33_ + 1108), ((this._loadInt((_33_ + 1108))) + (this._loadInt((_33_ + 1100)))));
                            this._storeInt((_33_ + 1104), _34_);
                            continue label$10;
                        }
                        while (false);
                        label$14:
                        do {
                            if ((this._loadInt(((_31_ = this._loadInt((_33_ + 1124))) + ((this._loadInt((_33_ + 1112))) + (_30_ = this._loadInt((_33_ + 1104))))))) < (this._loadInt((_31_ + ((this._loadInt((_33_ + 1108))) + _30_))))) {
                                break label$14;
                            }
                            this._storeInt((_33_ + 1108), ((_31_ = this._loadInt((_33_ + 1108))) + _34_));
                            this._storeInt((_33_ + 1112), _31_);
                            this._storeInt((_33_ + 1104), (this._storeInt((_33_ + 1100), _34_)));
                            continue label$10;
                        }
                        while (false);
                        this._storeInt((_33_ + 1108), ((this._loadInt((_33_ + 1108))) + (this._loadInt((_33_ + 1104)))));
                        this._storeInt((_33_ + 1104), _34_);
                        this._storeInt((_33_ + 1100), ((this._loadInt((_33_ + 1108))) - (this._loadInt((_33_ + 1112)))));
                        continue label$10;
                    }
                    while (false);
                    this._storeInt((_33_ + 1104), ((this._loadInt((_33_ + 1104))) + _34_));
                    continue label$10;
                }
            }
            while (false);
            label$15:
            do {
                label$16:
                do {
                    if ((((this._loadInt((_33_ + 1112))) + 1) & 4294967295L) <= (((this._loadInt((_33_ + 1096))) + 1) & 4294967295L)) {
                        break label$16;
                    }
                    this._storeInt((_33_ + 1096), (this._loadInt((_33_ + 1112))));
                    break label$15;
                }
                while (false);
                this._storeInt((_33_ + 1100), (this._loadInt((_33_ + 1092))));
            }
            while (false);
            label$17:
            do {
                label$18:
                do {
                    label$19:
                    do {
                        label$20:
                        do {
                            if ((memcmp((_31_ = this._loadInt((_33_ + 1124))), (_31_ + (this._loadInt((_33_ + 1100)))), ((this._loadInt((_33_ + 1096))) + 1))) == 0) {
                                break label$20;
                            }
                            this._storeInt((_33_ + 1084), 0);
                            if (((_31_ = this._loadInt((_33_ + 1096))) & 4294967295L) <= ((((this._loadInt((_33_ + 1116))) - _31_) + -1) & 4294967295L)) {
                                break label$19;
                            }
                            _31_ = this._loadInt((_33_ + 1096));
                            break label$18;
                        }
                        while (false);
                        this._storeInt((_33_ + 1084), ((this._loadInt((_33_ + 1116))) - (this._loadInt((_33_ + 1100)))));
                        break label$17;
                    }
                    while (false);
                    _31_ = ((this._loadInt((_33_ + 1116))) - (this._loadInt((_33_ + 1096)))) + -1;
                }
                while (false);
                this._storeInt((_33_ + 1100), (_31_ + 1));
            }
            while (false);
            _30_ = this._storeInt((_33_ + 1088), 0);
            this._storeInt((_33_ + 1120), (this._loadInt((_33_ + 1128))));
            label$21:
            do {
                label$23:
                do {
                    label$22:
                    while (true) {
                        label$24:
                        do {
                            if ((((this._loadInt((_33_ + 1120))) - (this._loadInt((_33_ + 1128)))) & 4294967295L) >= ((this._loadInt((_33_ + 1116))) & 4294967295L)) {
                                break label$24;
                            }
                            _31_ = this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 1116))) | 63));
                            label$25:
                            do {
                                if ((this._storeInt((_33_ + 8), (memchr((this._loadInt((_33_ + 1120))), _30_, _31_)))) == 0) {
                                    break label$25;
                                }
                                if ((((this._storeInt((_33_ + 1120), (this._loadInt((_33_ + 8))))) - (this._loadInt((_33_ + 1128)))) & 4294967295L) >= ((this._loadInt((_33_ + 1116))) & 4294967295L)) {
                                    break label$24;
                                }
                                break label$23;
                            }
                            while (false);
                            this._storeInt((_33_ + 1120), ((this._loadInt((_33_ + 1120))) + (this._loadInt((_33_ + 12)))));
                        }
                        while (false);
                        label$26:
                        do {
                            label$27:
                            do {
                                if (((this._loadInt(((_33_ + 1040) + (((_31_ = this._loadInt((((this._loadInt((_33_ + 1128))) + (this._loadInt((_33_ + 1116)))) + -1))) >>> 3) & 28)))) & (1 << (_31_ & 31))) == 0) {
                                    break label$27;
                                }
                                if ((this._storeInt((_33_ + 1104), ((_31_ = this._loadInt((_33_ + 1116))) - (this._loadInt(((_33_ + 16) + ((this._loadInt(((_31_ + (this._loadInt((_33_ + 1128)))) + -1))) << 2))))))) == 0) {
                                    break label$26;
                                }
                                label$28:
                                do {
                                    if ((this._loadInt((_33_ + 1084))) == 0) {
                                        break label$28;
                                    }
                                    if ((this._loadInt((_33_ + 1088))) == 0) {
                                        break label$28;
                                    }
                                    if (((this._loadInt((_33_ + 1104))) & 4294967295L) >= ((this._loadInt((_33_ + 1100))) & 4294967295L)) {
                                        break label$28;
                                    }
                                    this._storeInt((_33_ + 1104), ((this._loadInt((_33_ + 1116))) - (this._loadInt((_33_ + 1100)))));
                                }
                                while (false);
                                this._storeInt((_33_ + 1128), ((this._loadInt((_33_ + 1128))) + (this._loadInt((_33_ + 1104)))));
                                this._storeInt((_33_ + 1088), _30_);
                                continue label$22;
                            }
                            while (false);
                            this._storeInt((_33_ + 1128), ((this._loadInt((_33_ + 1128))) + (this._loadInt((_33_ + 1116)))));
                            this._storeInt((_33_ + 1088), _30_);
                            continue label$22;
                        }
                        while (false);
                        label$29:
                        do {
                            label$30:
                            do {
                                if ((((this._loadInt((_33_ + 1096))) + 1) & 4294967295L) <= ((this._loadInt((_33_ + 1088))) & 4294967295L)) {
                                    break label$30;
                                }
                                _31_ = (this._loadInt((_33_ + 1096))) + 1;
                                break label$29;
                            }
                            while (false);
                            _31_ = this._loadInt((_33_ + 1088));
                        }
                        while (false);
                        this._storeInt((_33_ + 1104), _31_);
                        label$32:
                        do {
                            label$31:
                            while (true) {
                                _31_ = 0;
                                label$33:
                                do {
                                    if ((this._loadInt(((this._loadInt((_33_ + 1124))) + (this._loadInt((_33_ + 1104)))))) == 0) {
                                        break label$33;
                                    }
                                    _31_ = ((this._loadInt(((this._loadInt((_33_ + 1124))) + (_31_ = this._loadInt((_33_ + 1104)))))) == (this._loadInt(((this._loadInt((_33_ + 1128))) + _31_)))) ? 1 : 0;
                                }
                                while (false);
                                if (_31_ == 0) {
                                    break label$32;
                                }
                                this._storeInt((_33_ + 1104), ((this._loadInt((_33_ + 1104))) + 1));
                                continue label$31;
                            }
                        }
                        while (false);
                        label$34:
                        do {
                            if ((this._loadInt(((this._loadInt((_33_ + 1124))) + (this._loadInt((_33_ + 1104)))))) == 0) {
                                break label$34;
                            }
                            this._storeInt((_33_ + 1128), ((this._loadInt((_33_ + 1128))) + ((this._loadInt((_33_ + 1104))) - (this._loadInt((_33_ + 1096))))));
                            this._storeInt((_33_ + 1088), _30_);
                            continue label$22;
                        }
                        while (false);
                        this._storeInt((_33_ + 1104), ((this._loadInt((_33_ + 1096))) + 1));
                        label$36:
                        do {
                            label$35:
                            while (true) {
                                _31_ = 0;
                                label$37:
                                do {
                                    if (((this._loadInt((_33_ + 1104))) & 4294967295L) <= ((this._loadInt((_33_ + 1088))) & 4294967295L)) {
                                        break label$37;
                                    }
                                    _31_ = ((this._loadInt(((this._loadInt((_33_ + 1124))) + (_31_ = (this._loadInt((_33_ + 1104))) + -1)))) == (this._loadInt(((this._loadInt((_33_ + 1128))) + _31_)))) ? 1 : 0;
                                }
                                while (false);
                                if (_31_ == 0) {
                                    break label$36;
                                }
                                this._storeInt((_33_ + 1104), ((this._loadInt((_33_ + 1104))) + -1));
                                continue label$35;
                            }
                        }
                        while (false);
                        if (((this._loadInt((_33_ + 1104))) & 4294967295L) <= ((this._loadInt((_33_ + 1088))) & 4294967295L)) {
                            break label$21;
                        }
                        this._storeInt((_33_ + 1128), ((this._loadInt((_33_ + 1128))) + (this._loadInt((_33_ + 1100)))));
                        this._storeInt((_33_ + 1088), (this._loadInt((_33_ + 1084))));
                        continue label$22;
                    }
                }
                while (false);
                this._storeInt((_33_ + 1132), 0);
                break label$3;
            }
            while (false);
            this._storeInt((_33_ + 1132), (this._loadInt((_33_ + 1128))));
        }
        while (false);
        _31_ = this._loadInt((_33_ + 1132));
        this._storeInt((0 + 4), (_33_ + 1136));
        return _31_;
    }

    public final float strtof(int _30_, int _31_)
    {
        int _32_ = 0;
        float _33_ = 0.0f;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_32_ + 24), _31_);
        strtox(_32_, (this._loadInt((_32_ + 28))), _31_, 0);
        _33_ = this.__trunctfsf2.invoke((this._loadLong(_32_)), (this._loadLong((_32_ + 8))));
        this._storeInt((0 + 4), (_32_ + 32));
        return _33_;
    }

    public final void strtox(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 208))) + 204), _31_);
        this._storeInt((_34_ + 200), _32_);
        this._storeInt((_34_ + 196), _33_);
        memset((_34_ + 48), 0, 144);
        this._storeInt((_34_ + 124), (this._storeInt((_34_ + 56), -1)));
        this._storeInt((_34_ + 92), (this._storeInt((_34_ + 52), (this._loadInt((_34_ + 204))))));
        __shlim((_34_ + 48), 0L);
        this.__floatscan.invoke(_34_, (_34_ + 48), (this._loadInt((_34_ + 196))), 1);
        this._storeLong((_34_ + 32), (this._loadLong(_34_)));
        this._storeLong((_34_ + 40), (this._loadLong((_34_ + 8))));
        this._storeLong((_34_ + 24), ((this._loadLong((_34_ + 168))) + ((long) ((this._loadInt((_34_ + 52))) - (this._loadInt((_34_ + 56)))))));
        label$0:
        do {
            if ((this._loadInt((_34_ + 200))) == 0) {
                break label$0;
            }
            label$1:
            do {
                label$2:
                do {
                    if ((this._loadLong((_34_ + 24))) == 0) {
                        break label$2;
                    }
                    _33_ = (this._loadInt((_34_ + 204))) + (this._loadInt((_34_ + 24)));
                    break label$1;
                }
                while (false);
                _33_ = this._loadInt((_34_ + 204));
            }
            while (false);
            this._storeInt((this._loadInt((_34_ + 200))), _33_);
        }
        while (false);
        this._storeLong(_30_, (this._loadLong((_34_ + 32))));
        this._storeLong((_30_ + 8), (this._loadLong((_34_ + 40))));
        this._storeInt((0 + 4), (_34_ + 208));
        return;
    }

    public final double strtod(int _30_, int _31_)
    {
        int _32_ = 0;
        double _33_ = 0.0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_32_ + 24), _31_);
        strtox(_32_, (this._loadInt((_32_ + 28))), _31_, 1);
        _33_ = this.__trunctfdf2.invoke((this._loadLong(_32_)), (this._loadLong((_32_ + 8))));
        this._storeInt((0 + 4), (_32_ + 32));
        return _33_;
    }

    public final void strtold(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _31_);
        this._storeInt((_33_ + 24), _32_);
        strtox(_33_, (this._loadInt((_33_ + 28))), _32_, 2);
        _34_ = this._loadLong(_33_);
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, _34_);
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int strtok(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_32_ + 4), _31_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._loadInt((_32_ + 8))) != 0) {
                        break label$2;
                    }
                    if ((this._storeInt((_32_ + 8), (this._loadInt((0 + 19212))))) == 0) {
                        break label$1;
                    }
                }
                while (false);
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            if ((this._loadInt((this._storeInt((_32_ + 8), ((strspn((this._loadInt((_32_ + 8))), (this._loadInt((_32_ + 4))))) + (this._loadInt((_32_ + 8)))))))) == 0) {
                                break label$5;
                            }
                            if ((this._loadInt((this._storeInt((0 + 19212), ((_31_ = this._loadInt((_32_ + 8))) + (strcspn(_31_, (this._loadInt((_32_ + 4)))))))))) == 0) {
                                break label$4;
                            }
                            this._storeInt((0 + 19212), ((_31_ = this._loadInt((0 + 19212))) + 1));
                            this._storeInt(_31_, 0);
                            break label$3;
                        }
                        while (false);
                        this._storeInt(((_31_ = this._storeInt((_32_ + 12), 0)) + 19212), _31_);
                        break label$0;
                    }
                    while (false);
                    this._storeInt((0 + 19212), 0);
                }
                while (false);
                this._storeInt((_32_ + 12), (this._loadInt((_32_ + 8))));
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 12), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int strtok_r(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_33_ + 4), _31_);
        this._storeInt(_33_, _32_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._loadInt((_33_ + 8))) != 0) {
                        break label$2;
                    }
                    if ((this._storeInt((_33_ + 8), (this._loadInt((this._loadInt(_33_)))))) == 0) {
                        break label$1;
                    }
                }
                while (false);
                label$3:
                do {
                    label$4:
                    do {
                        label$5:
                        do {
                            if ((this._loadInt((this._storeInt((_33_ + 8), ((strspn((this._loadInt((_33_ + 8))), (this._loadInt((_33_ + 4))))) + (this._loadInt((_33_ + 8)))))))) == 0) {
                                break label$5;
                            }
                            _31_ = strcspn((_32_ = this._loadInt((_33_ + 8))), (this._loadInt((_33_ + 4))));
                            if ((this._loadInt((this._storeInt((this._loadInt(_33_)), (_32_ + _31_))))) == 0) {
                                break label$4;
                            }
                            this._storeInt((_32_ = this._loadInt(_33_)), ((_32_ = this._loadInt(_32_)) + 1));
                            this._storeInt(_32_, 0);
                            break label$3;
                        }
                        while (false);
                        this._storeInt((_33_ + 12), (this._storeInt((this._loadInt(_33_)), 0)));
                        break label$0;
                    }
                    while (false);
                    this._storeInt((this._loadInt(_33_)), 0);
                }
                while (false);
                this._storeInt((_33_ + 12), (this._loadInt((_33_ + 8))));
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 12), 0);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 12));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final long strtoull(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = strtox$2e$301((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, -1L);
        this._storeInt((0 + 4), (_33_ + 16));
        return _34_;
    }

    public final long strtox$2e$301(int _30_, int _31_, int _32_, long _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 192))) + 188), _30_);
        this._storeInt((_34_ + 184), _31_);
        this._storeInt((_34_ + 180), _32_);
        this._storeLong((_34_ + 168), _33_);
        this._storeInt((_34_ + 24), 0);
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_34_ + 68), (this._storeInt((_34_ + 28), (this._loadInt((_34_ + 188))))))) > -1) {
                    break label$1;
                }
                this._storeInt((_34_ + 32), -1);
                break label$0;
            }
            while (false);
            this._storeInt((_34_ + 32), ((this._loadInt((_34_ + 188))) + 2147483647));
        }
        while (false);
        this._storeInt((_34_ + 100), -1);
        __shlim((_34_ + 24), 0L);
        this._storeLong((_34_ + 16), (__intscan((_34_ + 24), (this._loadInt((_34_ + 180))), 1, (this._loadLong((_34_ + 168))))));
        label$2:
        do {
            if ((this._loadInt((_34_ + 184))) == 0) {
                break label$2;
            }
            _32_ = this._storeInt((_34_ + 12), ((int) ((this._loadLong((_34_ + 144))) + (((this._loadInt((_34_ + 28))) - (this._loadInt((_34_ + 32)))) & 4294967295L))));
            this._storeInt((this._loadInt((_34_ + 184))), (_32_ + (this._loadInt((_34_ + 188)))));
        }
        while (false);
        _33_ = this._loadLong((_34_ + 16));
        this._storeInt((0 + 4), (_34_ + 192));
        return _33_;
    }

    public final long strtoll(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = strtox$2e$301((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, -9223372036854775808L);
        this._storeInt((0 + 4), (_33_ + 16));
        return _34_;
    }

    public final int strtoul(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = strtox$2e$301((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, 4294967295L);
        this._storeInt((0 + 4), (_33_ + 16));
        return ((int) _34_);
    }

    public final int strtol(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = strtox$2e$301((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, 2147483648L);
        this._storeInt((0 + 4), (_33_ + 16));
        return ((int) _34_);
    }

    public final long strtoimax(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = strtoll((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _34_;
    }

    public final long strtoumax(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = strtoull((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _34_;
    }

    public final int strverscmp(int _30_, int _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 48) + 40), _30_);
        this._storeInt((_33_ + 36), _31_);
        this._storeInt((_33_ + 32), (this._loadInt((_33_ + 40))));
        this._storeInt((_33_ + 28), (this._loadInt((_33_ + 36))));
        _30_ = this._storeInt((_33_ + 12), 1);
        _32_ = this._storeInt((_33_ + 20), (this._storeInt((_33_ + 24), 0)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$5:
                        do {
                            label$4:
                            while (true) {
                                if ((this._loadInt(((this._loadInt((_33_ + 32))) + (_31_ = this._loadInt((_33_ + 24)))))) != (this._loadInt(((this._loadInt((_33_ + 28))) + _31_)))) {
                                    break label$5;
                                }
                                if ((this._storeInt((_33_ + 8), (this._loadInt(((this._loadInt((_33_ + 32))) + (this._loadInt((_33_ + 24)))))))) == 0) {
                                    break label$3;
                                }
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        if ((((this._loadInt((_33_ + 8))) + -48) & 4294967295L) >= (10 & 4294967295L)) {
                                            break label$7;
                                        }
                                        if ((this._loadInt((_33_ + 8))) == 48) {
                                            break label$6;
                                        }
                                        this._storeInt((_33_ + 12), _32_);
                                        break label$6;
                                    }
                                    while (false);
                                    this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 24))) + _30_));
                                    this._storeInt((_33_ + 12), _30_);
                                }
                                while (false);
                                this._storeInt((_33_ + 24), ((this._loadInt((_33_ + 24))) + _30_));
                                continue label$4;
                            }
                        }
                        while (false);
                        if ((this._loadInt(((this._loadInt((_33_ + 32))) + (this._loadInt((_33_ + 20)))))) == 48) {
                            break label$2;
                        }
                        if ((this._loadInt(((this._loadInt((_33_ + 28))) + (this._loadInt((_33_ + 20)))))) == 48) {
                            break label$2;
                        }
                        this._storeInt((_33_ + 16), (this._loadInt((_33_ + 24))));
                        label$9:
                        do {
                            label$8:
                            while (true) {
                                if ((((this._loadInt(((this._loadInt((_33_ + 32))) + (this._loadInt((_33_ + 16)))))) + -48) & 4294967295L) > (9 & 4294967295L)) {
                                    break label$1;
                                }
                                if ((((this._loadInt(((this._loadInt((_33_ + 28))) + (this._loadInt((_33_ + 16)))))) + -48) & 4294967295L) >= (10 & 4294967295L)) {
                                    break label$9;
                                }
                                this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + 1));
                                continue label$8;
                            }
                        }
                        while (false);
                        this._storeInt((_33_ + 44), 1);
                        return (this._loadInt((_33_ + 44)));
                    }
                    while (false);
                    this._storeInt((_33_ + 44), 0);
                    return (this._loadInt((_33_ + 44)));
                }
                while (false);
                if ((this._loadInt((_33_ + 12))) == 0) {
                    break label$0;
                }
                if (((this._loadInt((_33_ + 20))) & 4294967295L) >= ((this._loadInt((_33_ + 24))) & 4294967295L)) {
                    break label$0;
                }
                label$10:
                do {
                    if ((((this._loadInt(((this._loadInt((_33_ + 32))) + (this._loadInt((_33_ + 24)))))) + -48) & 4294967295L) < (10 & 4294967295L)) {
                        break label$10;
                    }
                    if ((((this._loadInt(((this._loadInt((_33_ + 28))) + (this._loadInt((_33_ + 24)))))) + -48) & 4294967295L) > (9 & 4294967295L)) {
                        break label$0;
                    }
                }
                while (false);
                this._storeInt((_33_ + 44), ((((this._loadInt(((this._loadInt((_33_ + 32))) + (_31_ = this._loadInt((_33_ + 24)))))) + -48) & 255) - (((this._loadInt(((this._loadInt((_33_ + 28))) + _31_))) + -48) & 255)));
                return (this._loadInt((_33_ + 44)));
            }
            while (false);
            if ((((this._loadInt(((this._loadInt((_33_ + 28))) + (this._loadInt((_33_ + 16)))))) + -48) & 4294967295L) > (9 & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_33_ + 44), -1);
            return (this._loadInt((_33_ + 44)));
        }
        while (false);
        this._storeInt((_33_ + 44), ((this._loadInt(((this._loadInt((_33_ + 32))) + (_31_ = this._loadInt((_33_ + 24)))))) - (this._loadInt(((this._loadInt((_33_ + 28))) + _31_)))));
        return (this._loadInt((_33_ + 44)));
    }

    public final void swab(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 28), _30_);
        this._storeInt((_33_ + 24), _31_);
        this._storeInt((_33_ + 20), _32_);
        this._storeInt((_33_ + 16), (this._loadInt((_33_ + 28))));
        this._storeInt((_33_ + 12), (this._loadInt((_33_ + 24))));
        label$1:
        do {
            label$0:
            while (true) {
                if ((this._loadInt((_33_ + 20))) < 2) {
                    break label$1;
                }
                this._storeInt((_32_ = this._loadInt((_33_ + 12))), (this._loadInt(((_31_ = this._loadInt((_33_ + 16))) + 1))));
                this._storeInt((_32_ + 1), (this._loadInt(_31_)));
                this._storeInt((_33_ + 12), ((this._loadInt((_33_ + 12))) + 2));
                this._storeInt((_33_ + 16), ((this._loadInt((_33_ + 16))) + 2));
                this._storeInt((_33_ + 20), ((this._loadInt((_33_ + 20))) + -2));
                continue label$0;
            }
        }
        while (false);
        return;
    }

    public final int symlink(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = __syscall_ret((this.__syscall2.invoke(83, (this._loadInt((_32_ + 12))), _31_)));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int symlinkat(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __syscall_ret((this.__syscall3.invoke(304, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_)));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final void sync()
    {
        this.__syscall0.invoke(36);
        return;
    }

    public final int __syscall_ret(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if (((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_)) & 4294967295L) < (-4095 & 4294967295L)) {
                    break label$1;
                }
                _30_ = this._loadInt((_31_ + 8));
                this._storeInt((__errno_location()), (0 - _30_));
                this._storeInt((_31_ + 12), -1);
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 12), (this._loadInt((_31_ + 8))));
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final double tan(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        this._storeDouble(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 16), (this._storeDouble((_32_ + 48), _30_)));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                if (((this._storeInt((_32_ + 28), ((this._storeInt((_32_ + 28), (this._loadInt((_32_ + 20))))) & 2147483647))) & 4294967295L) > (1072243195 & 4294967295L)) {
                                    break label$5;
                                }
                                if (((this._loadInt((_32_ + 28))) & 4294967295L) > (1044381695 & 4294967295L)) {
                                    break label$4;
                                }
                                if (((this._loadInt((_32_ + 28))) & 4294967295L) > (1048575 & 4294967295L)) {
                                    break label$2;
                                }
                                _30_ = (this._loadDouble((_32_ + 48))) / 1.3292279957849159E36;
                                break label$1;
                            }
                            while (false);
                            if (((this._loadInt((_32_ + 28))) & 4294967295L) < (2146435072 & 4294967295L)) {
                                break label$3;
                            }
                            this._storeDouble((_32_ + 56), ((_30_ = this._loadDouble((_32_ + 48))) - _30_));
                            break label$0;
                        }
                        while (false);
                        this._storeDouble((_32_ + 56), (__tan((this._loadDouble((_32_ + 48))), 0.0, 0)));
                        break label$0;
                    }
                    while (false);
                    _31_ = this._storeInt((_32_ + 24), (__rem_pio2((this._loadDouble((_32_ + 48))), (_32_ + 32))));
                    this._storeDouble((_32_ + 56), (__tan((this._loadDouble((_32_ + 32))), (this._loadDouble((_32_ + 40))), (_31_ & 1))));
                    break label$0;
                }
                while (false);
                _30_ = (this._loadDouble((_32_ + 48))) + 1.3292279957849159E36;
            }
            while (false);
            this._storeDouble((_32_ + 8), _30_);
            this._storeDouble((_32_ + 56), (this._loadDouble((_32_ + 48))));
        }
        while (false);
        _30_ = this._loadDouble((_32_ + 56));
        this._storeInt((0 + 4), (_32_ + 64));
        return _30_;
    }

    public final float tanf(float _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        double _33_ = 0.0;
        this._storeFloat(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 16), (this._storeFloat((_32_ + 40), _30_)));
        this._storeInt((_32_ + 20), ((this._storeInt((_32_ + 28), (this._loadInt((_32_ + 16))))) >>> 31));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        label$4:
                        do {
                            label$5:
                            do {
                                label$6:
                                do {
                                    label$7:
                                    do {
                                        label$8:
                                        do {
                                            label$9:
                                            do {
                                                label$10:
                                                do {
                                                    label$11:
                                                    do {
                                                        label$12:
                                                        do {
                                                            label$13:
                                                            do {
                                                                label$14:
                                                                do {
                                                                    label$15:
                                                                    do {
                                                                        label$16:
                                                                        do {
                                                                            label$17:
                                                                            do {
                                                                                if (((this._storeInt((_32_ + 28), ((this._loadInt((_32_ + 28))) & 2147483647))) & 4294967295L) > (1061752794 & 4294967295L)) {
                                                                                    break label$17;
                                                                                }
                                                                                if (((this._loadInt((_32_ + 28))) & 4294967295L) > (964689919 & 4294967295L)) {
                                                                                    break label$16;
                                                                                }
                                                                                if (((this._loadInt((_32_ + 28))) & 4294967295L) > (8388607 & 4294967295L)) {
                                                                                    break label$14;
                                                                                }
                                                                                _30_ = (this._loadFloat((_32_ + 40))) / 1.329228E36f;
                                                                                break label$13;
                                                                            }
                                                                            while (false);
                                                                            if (((this._loadInt((_32_ + 28))) & 4294967295L) > (1081824209 & 4294967295L)) {
                                                                                break label$15;
                                                                            }
                                                                            if (((this._loadInt((_32_ + 28))) & 4294967295L) > (1075235811 & 4294967295L)) {
                                                                                break label$12;
                                                                            }
                                                                            if ((this._loadInt((_32_ + 20))) == 0) {
                                                                                break label$8;
                                                                            }
                                                                            _33_ = ((double) (this._loadFloat((_32_ + 40)))) + 1.5707963267948966;
                                                                            break label$7;
                                                                        }
                                                                        while (false);
                                                                        this._storeFloat((_32_ + 44), (__tandf(((double) (this._loadFloat((_32_ + 40)))), 0)));
                                                                        break label$0;
                                                                    }
                                                                    while (false);
                                                                    if (((this._loadInt((_32_ + 28))) & 4294967295L) > (1088565717 & 4294967295L)) {
                                                                        break label$11;
                                                                    }
                                                                    if (((this._loadInt((_32_ + 28))) & 4294967295L) > (1085271519 & 4294967295L)) {
                                                                        break label$10;
                                                                    }
                                                                    if ((this._loadInt((_32_ + 20))) == 0) {
                                                                        break label$4;
                                                                    }
                                                                    _33_ = ((double) (this._loadFloat((_32_ + 40)))) + 4.71238898038469;
                                                                    break label$3;
                                                                }
                                                                while (false);
                                                                _30_ = (this._loadFloat((_32_ + 40))) + 1.329228E36f;
                                                            }
                                                            while (false);
                                                            this._storeFloat((_32_ + 12), _30_);
                                                            this._storeFloat((_32_ + 44), (this._loadFloat((_32_ + 40))));
                                                            break label$0;
                                                        }
                                                        while (false);
                                                        if ((this._loadInt((_32_ + 20))) == 0) {
                                                            break label$6;
                                                        }
                                                        _33_ = ((double) (this._loadFloat((_32_ + 40)))) + 3.141592653589793;
                                                        break label$5;
                                                    }
                                                    while (false);
                                                    if (((this._loadInt((_32_ + 28))) & 4294967295L) < (2139095040 & 4294967295L)) {
                                                        break label$9;
                                                    }
                                                    this._storeFloat((_32_ + 44), ((_30_ = this._loadFloat((_32_ + 40))) - _30_));
                                                    break label$0;
                                                }
                                                while (false);
                                                if ((this._loadInt((_32_ + 20))) == 0) {
                                                    break label$2;
                                                }
                                                _33_ = ((double) (this._loadFloat((_32_ + 40)))) + 6.283185307179586;
                                                break label$1;
                                            }
                                            while (false);
                                            _31_ = this._storeInt((_32_ + 24), (__rem_pio2f((this._loadFloat((_32_ + 40))), (_32_ + 32))));
                                            this._storeFloat((_32_ + 44), (__tandf((this._loadDouble((_32_ + 32))), (_31_ & 1))));
                                            break label$0;
                                        }
                                        while (false);
                                        _33_ = ((double) (this._loadFloat((_32_ + 40)))) + -1.5707963267948966;
                                    }
                                    while (false);
                                    this._storeFloat((_32_ + 44), (__tandf(_33_, 1)));
                                    break label$0;
                                }
                                while (false);
                                _33_ = ((double) (this._loadFloat((_32_ + 40)))) + -3.141592653589793;
                            }
                            while (false);
                            this._storeFloat((_32_ + 44), (__tandf(_33_, 0)));
                            break label$0;
                        }
                        while (false);
                        _33_ = ((double) (this._loadFloat((_32_ + 40)))) + -4.71238898038469;
                    }
                    while (false);
                    this._storeFloat((_32_ + 44), (__tandf(_33_, 1)));
                    break label$0;
                }
                while (false);
                _33_ = ((double) (this._loadFloat((_32_ + 40)))) + -6.283185307179586;
            }
            while (false);
            this._storeFloat((_32_ + 44), (__tandf(_33_, 0)));
        }
        while (false);
        _30_ = this._loadFloat((_32_ + 44));
        this._storeInt((0 + 4), (_32_ + 48));
        return _30_;
    }

    public final double tanh(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 32), (this._storeDouble((_31_ + 40), _30_)));
        this._storeLong((_31_ + 24), ((this._loadLong((_31_ + 32))) >>> 63L));
        this._storeLong((_31_ + 32), ((this._loadLong((_31_ + 32))) & 9223372036854775807L));
        this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 32))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._storeInt((_31_ + 28), (this._loadInt((_31_ + 36))))) & 4294967295L) < (1071748075 & 4294967295L)) {
                            break label$3;
                        }
                        if (((this._loadInt((_31_ + 28))) & 4294967295L) < (1077149697 & 4294967295L)) {
                            break label$2;
                        }
                        this._storeDouble((_31_ + 16), ((-0.0 / (this._loadDouble((_31_ + 40)))) + 1.0));
                        break label$0;
                    }
                    while (false);
                    if (((this._loadInt((_31_ + 28))) & 4294967295L) < (1070618799 & 4294967295L)) {
                        break label$1;
                    }
                    this._storeDouble((_31_ + 16), ((_30_ = this._storeDouble((_31_ + 16), (expm1(((_30_ = this._loadDouble((_31_ + 40))) + _30_))))) / (_30_ + 2.0)));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 16), (1.0 - (2.0 / ((this._storeDouble((_31_ + 16), (expm1(((_30_ = this._loadDouble((_31_ + 40))) + _30_))))) + 2.0))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if (((this._loadInt((_31_ + 28))) & 4294967295L) < (1048576 & 4294967295L)) {
                    break label$4;
                }
                this._storeDouble((_31_ + 16), ((-(_30_ = this._storeDouble((_31_ + 16), (expm1(((this._loadDouble((_31_ + 40))) * -2.0)))))) / (_30_ + 2.0)));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 12), ((float) (this._loadDouble((_31_ + 40)))));
            this._storeDouble((_31_ + 16), (this._loadDouble((_31_ + 40))));
        }
        while (false);
        label$5:
        do {
            label$6:
            do {
                if ((this._loadInt((_31_ + 24))) == 0) {
                    break label$6;
                }
                _30_ = -(this._loadDouble((_31_ + 16)));
                break label$5;
            }
            while (false);
            _30_ = this._loadDouble((_31_ + 16));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 48));
        return _30_;
    }

    public final float tanhf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), (this._storeFloat((_31_ + 28), _30_)));
        this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 24))) >>> 31));
        this._storeInt((_31_ + 24), ((this._loadInt((_31_ + 24))) & 2147483647));
        this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if (((this._storeInt((_31_ + 20), (this._loadInt((_31_ + 24))))) & 4294967295L) < (1057791829 & 4294967295L)) {
                            break label$3;
                        }
                        if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1092616193 & 4294967295L)) {
                            break label$2;
                        }
                        this._storeFloat((_31_ + 12), ((0.0f / (this._loadFloat((_31_ + 28)))) + 1.0f));
                        break label$0;
                    }
                    while (false);
                    if (((this._loadInt((_31_ + 20))) & 4294967295L) < (1048757625 & 4294967295L)) {
                        break label$1;
                    }
                    this._storeFloat((_31_ + 12), ((_30_ = this._storeFloat((_31_ + 12), (expm1f(((_30_ = this._loadFloat((_31_ + 28))) + _30_))))) / (_30_ + 2.0f)));
                    break label$0;
                }
                while (false);
                this._storeFloat((_31_ + 12), (1.0f - (2.0f / ((this._storeFloat((_31_ + 12), (expm1f(((_30_ = this._loadFloat((_31_ + 28))) + _30_))))) + 2.0f))));
                break label$0;
            }
            while (false);
            label$4:
            do {
                if (((this._loadInt((_31_ + 20))) & 4294967295L) < (8388608 & 4294967295L)) {
                    break label$4;
                }
                this._storeFloat((_31_ + 12), ((-(_30_ = this._storeFloat((_31_ + 12), (expm1f(((this._loadFloat((_31_ + 28))) * -2.0f)))))) / (_30_ + 2.0f)));
                break label$0;
            }
            while (false);
            this._storeFloat((_31_ + 8), ((_30_ = this._loadFloat((_31_ + 28))) * _30_));
            this._storeFloat((_31_ + 12), (this._loadFloat((_31_ + 28))));
        }
        while (false);
        label$5:
        do {
            label$6:
            do {
                if ((this._loadInt((_31_ + 16))) == 0) {
                    break label$6;
                }
                _30_ = -(this._loadFloat((_31_ + 12)));
                break label$5;
            }
            while (false);
            _30_ = this._loadFloat((_31_ + 12));
        }
        while (false);
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final void tanhl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (tanh((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final void tanl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (tan((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int tempnam(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 4240))) + 4232), _30_);
        this._storeInt((_32_ + 4228), _31_);
        label$0:
        do {
            if ((this._loadInt((_32_ + 4232))) != 0) {
                break label$0;
            }
            this._storeInt((_32_ + 4232), 19216);
        }
        while (false);
        label$1:
        do {
            if ((this._loadInt((_32_ + 4228))) != 0) {
                break label$1;
            }
            this._storeInt((_32_ + 4228), 19232);
        }
        while (false);
        this._storeInt((_32_ + 120), (strlen((this._loadInt((_32_ + 4232))))));
        label$2:
        do {
            label$3:
            do {
                if (((this._storeInt((_32_ + 124), (((this._storeInt((_32_ + 116), (strlen((this._loadInt((_32_ + 4228))))))) + (this._loadInt((_32_ + 120)))) + 8))) & 4294967295L) < (4096 & 4294967295L)) {
                    break label$3;
                }
                this._storeInt((__errno_location()), 36);
                this._storeInt((_32_ + 4236), 0);
                break label$2;
            }
            while (false);
            memcpy((_32_ + 128), (this._loadInt((_32_ + 4232))), (this._loadInt((_32_ + 120))));
            this._storeInt((_31_ = (_32_ + 128) + (this._loadInt((_32_ + 120)))), 47);
            memcpy((_31_ + 1), (this._loadInt((_32_ + 4228))), (this._loadInt((_32_ + 116))));
            this._storeInt((((_32_ + 128) + ((this._loadInt((_32_ + 120))) + (this._loadInt((_32_ + 116))))) + 1), 95);
            _30_ = this._storeInt((_32_ + 112), (this._storeInt(((_32_ + 128) + (this._loadInt((_32_ + 124)))), 0)));
            label$4:
            do {
                label$6:
                do {
                    label$5:
                    while (true) {
                        if ((this._loadInt((_32_ + 112))) > 99) {
                            break label$4;
                        }
                        this.__randname.invoke((((_32_ + 128) + (this._loadInt((_32_ + 124)))) + -6));
                        this._storeLong((_31_ = memset(_32_, _30_, 104)), 0L);
                        if ((this._storeInt((_31_ + 108), (this.__syscall2.invoke(107, (_31_ + 128), _31_)))) == -2) {
                            break label$6;
                        }
                        this._storeInt((_31_ + 112), ((this._loadInt((_31_ + 112))) + 1));
                        continue label$5;
                    }
                }
                while (false);
                this._storeInt((_31_ + 4236), (__strdup((_31_ + 128))));
                break label$2;
            }
            while (false);
            this._storeInt((_32_ + 4236), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 4236));
        this._storeInt((0 + 4), (_32_ + 4240));
        return _31_;
    }

    public final double tgamma(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 80))) + 56), (this._storeDouble((_31_ + 64), _30_)));
        this._storeLong((_31_ + 12), ((this._loadLong((_31_ + 60))) & 2147483647L));
        this._storeLong((_31_ + 8), ((this._loadLong((_31_ + 56))) >>> 63L));
        label$0:
        do {
            label$1:
            do {
                if (((this._loadInt((_31_ + 12))) & 4294967295L) < (2146435072 & 4294967295L)) {
                    break label$1;
                }
                this._storeDouble((_31_ + 72), ((this._loadDouble((_31_ + 64))) + Double.POSITIVE_INFINITY));
                break label$0;
            }
            while (false);
            label$2:
            do {
                if (((this._loadInt((_31_ + 12))) & 4294967295L) > (1016070143 & 4294967295L)) {
                    break label$2;
                }
                this._storeDouble((_31_ + 72), (1.0 / (this._loadDouble((_31_ + 64)))));
                break label$0;
            }
            while (false);
            label$3:
            do {
                if ((_30_ = this._loadDouble((_31_ + 64))) != (Math.floor(_30_))) {
                    break label$3;
                }
                label$4:
                do {
                    if ((this._loadInt((_31_ + 8))) == 0) {
                        break label$4;
                    }
                    this._storeLong((_31_ + 72), 9221120237041090560L);
                    break label$0;
                }
                while (false);
                if (((((_30_ = this._loadDouble((_31_ + 64))) > 23.0) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$3;
                }
                this._storeDouble((_31_ + 72), (this._loadDouble((((_truncateDoubleToSignedInteger((this._loadDouble((_31_ + 64))))) << 3) + 19240))));
                break label$0;
            }
            while (false);
            label$5:
            do {
                label$6:
                do {
                    label$7:
                    do {
                        label$8:
                        do {
                            label$9:
                            do {
                                if (((this._loadInt((_31_ + 12))) & 4294967295L) < (1080492032 & 4294967295L)) {
                                    break label$9;
                                }
                                if ((this._loadInt((_31_ + 8))) == 0) {
                                    break label$8;
                                }
                                this._storeFloat((_31_ + 4), ((float) (1.1754943508222875E-38 / (this._loadDouble((_31_ + 64))))));
                                if (((Math.floor((_30_ = this._loadDouble((_31_ + 64))))) * 0.5) != (Math.floor((_30_ * 0.5)))) {
                                    break label$5;
                                }
                                this._storeLong((_31_ + 72), 0L);
                                break label$0;
                            }
                            while (false);
                            if ((this._loadInt((_31_ + 8))) == 0) {
                                break label$7;
                            }
                            _30_ = -(this._loadDouble((_31_ + 64)));
                            break label$6;
                        }
                        while (false);
                        this._storeDouble((_31_ + 72), (this._storeDouble((_31_ + 64), ((this._loadDouble((_31_ + 64))) * 8.98846567431158E307))));
                        break label$0;
                    }
                    while (false);
                    _30_ = this._loadDouble((_31_ + 64));
                }
                while (false);
                this._storeDouble((_31_ + 40), ((this._storeDouble((_31_ + 48), _30_)) + 5.52468004077673));
                label$10:
                do {
                    label$11:
                    do {
                        if (((((_30_ = this._loadDouble((_31_ + 48))) <= 5.52468004077673) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                            break label$11;
                        }
                        this._storeDouble((_31_ + 32), ((this._storeDouble((_31_ + 32), ((this._loadDouble((_31_ + 40))) - (this._loadDouble((_31_ + 48)))))) + -5.52468004077673));
                        break label$10;
                    }
                    while (false);
                    this._storeDouble((_31_ + 32), ((this._storeDouble((_31_ + 32), ((this._loadDouble((_31_ + 40))) + -5.52468004077673))) - (this._loadDouble((_31_ + 48)))));
                }
                while (false);
                this._storeDouble((_31_ + 24), ((this._loadDouble((_31_ + 48))) + -0.5));
                this._storeDouble((_31_ + 16), ((S((this._loadDouble((_31_ + 48))))) * (exp((-(this._loadDouble((_31_ + 40))))))));
                label$12:
                do {
                    if (((((_30_ = this._loadDouble((_31_ + 64))) >= 0.0) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                        break label$12;
                    }
                    this._storeDouble((_31_ + 16), (-3.141592653589793 / (((sinpi((this._loadDouble((_31_ + 48))))) * (this._loadDouble((_31_ + 48)))) * (this._loadDouble((_31_ + 16))))));
                    this._storeDouble((_31_ + 32), (-(this._loadDouble((_31_ + 32)))));
                    this._storeDouble((_31_ + 24), (-(this._loadDouble((_31_ + 24)))));
                }
                while (false);
                this._storeDouble((_31_ + 16), ((_30_ = this._loadDouble((_31_ + 16))) + ((_30_ * ((this._loadDouble((_31_ + 32))) * 6.02468004077673)) / (this._loadDouble((_31_ + 40))))));
                this._storeDouble((_31_ + 40), ((_30_ = this._storeDouble((_31_ + 24), (pow((this._loadDouble((_31_ + 40))), ((this._loadDouble((_31_ + 24))) * 0.5))))) * (_30_ * (this._loadDouble((_31_ + 16))))));
                this._storeDouble((_31_ + 72), (this._loadDouble((_31_ + 40))));
                break label$0;
            }
            while (false);
            this._storeLong((_31_ + 72), -9223372036854775808L);
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 72));
        this._storeInt((0 + 4), (_31_ + 80));
        return _30_;
    }

    public final double S(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeLong((_31_ + 8), (this._storeLong((_31_ + 16), 0L)));
        label$0:
        do {
            label$1:
            do {
                if (((((_30_ = this._loadDouble((_31_ + 24))) >= 8.0) ? 1 : 0) | ((_30_ != _30_) ? 1 : 0)) != 0) {
                    break label$1;
                }
                this._storeInt((_31_ + 4), 12);
                label$2:
                while (true) {
                    if ((this._loadInt((_31_ + 4))) < 0) {
                        break label$0;
                    }
                    this._storeDouble((_31_ + 16), (((this._loadDouble((_31_ + 16))) * (this._loadDouble((_31_ + 24)))) + (this._loadDouble((((this._loadInt((_31_ + 4))) << 3) + 19440)))));
                    this._storeDouble((_31_ + 8), (((this._loadDouble((_31_ + 8))) * (this._loadDouble((_31_ + 24)))) + (this._loadDouble((((this._loadInt((_31_ + 4))) << 3) + 19552)))));
                    this._storeInt((_31_ + 4), ((this._loadInt((_31_ + 4))) + -1));
                    continue label$2;
                }
            }
            while (false);
            this._storeInt((_31_ + 4), 0);
            label$5:
            do {
                label$4:
                while (true) {
                    if ((this._loadInt((_31_ + 4))) > 12) {
                        break label$5;
                    }
                    this._storeDouble((_31_ + 16), (((this._loadDouble((_31_ + 16))) / (this._loadDouble((_31_ + 24)))) + (this._loadDouble((((this._loadInt((_31_ + 4))) << 3) + 19440)))));
                    this._storeDouble((_31_ + 8), (((this._loadDouble((_31_ + 8))) / (this._loadDouble((_31_ + 24)))) + (this._loadDouble((((this._loadInt((_31_ + 4))) << 3) + 19552)))));
                    this._storeInt((_31_ + 4), ((this._loadInt((_31_ + 4))) + 1));
                    continue label$4;
                }
            }
            while (false);
        }
        while (false);
        return ((this._loadDouble((_31_ + 16))) / (this._loadDouble((_31_ + 8))));
    }

    public final double sinpi(double _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        _32_ = this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 12), (((this._storeInt((_31_ + 12), (_truncateDoubleToSignedInteger(((this._storeDouble((_31_ + 16), ((_30_ = (_30_ = this._storeDouble((_31_ + 16), ((this._storeDouble((_31_ + 16), _30_)) * 0.5))) - (Math.floor(_30_))) + _30_))) * 4.0))))) + 1) / 2));
        this._storeDouble((_31_ + 16), ((this._storeDouble((_31_ + 16), ((this._loadDouble((_31_ + 16))) - (((double) _32_) * 0.5)))) * 3.141592653589793));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((_32_ = this._loadInt((_31_ + 12))) == 1) {
                            break label$3;
                        }
                        if (_32_ == 2) {
                            break label$2;
                        }
                        if (_32_ != 3) {
                            break label$1;
                        }
                        this._storeDouble((_31_ + 24), (-(__cos((this._loadDouble((_31_ + 16))), 0.0))));
                        break label$0;
                    }
                    while (false);
                    this._storeDouble((_31_ + 24), (__cos((this._loadDouble((_31_ + 16))), 0.0)));
                    break label$0;
                }
                while (false);
                this._storeDouble((_31_ + 24), (__sin((-(this._loadDouble((_31_ + 16)))), 0.0, 0)));
                break label$0;
            }
            while (false);
            this._storeDouble((_31_ + 24), (__sin((this._loadDouble((_31_ + 16))), 0.0, 0)));
        }
        while (false);
        _30_ = this._loadDouble((_31_ + 24));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final float tgammaf(float _30_)
    {
        int _31_ = 0;
        double _32_ = 0.0;
        _32_ = tgamma(((double) (this._storeFloat(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_))));
        this._storeInt((0 + 4), (_31_ + 16));
        return ((float) _32_);
    }

    public final void tgammal(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), (tgamma((this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_)))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int __tlsdesc_static()
    {
        return 0;
    }

    public final int tmpnam(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        int _33_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 144))) + 130), (this._loadInt((0 + 19682))));
        this._storeInt((_32_ + 128), (this._loadInt((0 + 19680))));
        this._storeInt((_32_ + 136), _30_);
        this._storeInt((_32_ + 124), (this._loadInt((0 + 19676))));
        this._storeInt((_32_ + 120), (this._loadInt((0 + 19672))));
        this._storeInt((_32_ + 116), (this._loadInt((0 + 19668))));
        this._storeInt((_32_ + 112), (this._loadInt((0 + 19664))));
        _31_ = this._storeInt((_32_ + 108), 0);
        _33_ = (_32_ + 112) | 12;
        label$0:
        do {
            label$1:
            do {
                label$3:
                do {
                    label$2:
                    while (true) {
                        if ((this._loadInt((_32_ + 108))) > 99) {
                            break label$1;
                        }
                        this.__randname.invoke(_33_);
                        this._storeLong((_30_ = memset(_32_, _31_, 104)), 0L);
                        if ((this._storeInt((_30_ + 104), (this.__syscall2.invoke(107, (_30_ + 112), _30_)))) == -2) {
                            break label$3;
                        }
                        this._storeInt((_30_ + 108), ((this._loadInt((_30_ + 108))) + 1));
                        continue label$2;
                    }
                }
                while (false);
                _31_ = 19683;
                label$4:
                do {
                    if ((this._loadInt((_30_ + 136))) == 0) {
                        break label$4;
                    }
                    _31_ = this._loadInt((_30_ + 136));
                }
                while (false);
                this._storeInt((_30_ + 140), (strcpy(_31_, (_30_ + 112))));
                break label$0;
            }
            while (false);
            this._storeInt((_32_ + 140), 0);
        }
        while (false);
        _30_ = this._loadInt((_32_ + 140));
        this._storeInt((0 + 4), (_32_ + 144));
        return _30_;
    }

    public final int toascii(int _30_)
    {
        return ((this._storeInt((((this._loadInt((0 + 4))) - 16) + 12), _30_)) & 127);
    }

    public final int tolower(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((((this._storeInt(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), _30_)) + -65) & 4294967295L) > (25 & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 8))) | 32));
            return (this._loadInt((_31_ + 12)));
        }
        while (false);
        this._storeInt((_31_ + 12), (this._loadInt((_31_ + 8))));
        return (this._loadInt((_31_ + 12)));
    }

    public final int __tolower_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = tolower((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int toupper(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            if ((((this._storeInt(((_31_ = (this._loadInt((0 + 4))) - 16) + 8), _30_)) + -97) & 4294967295L) > (25 & 4294967295L)) {
                break label$0;
            }
            this._storeInt((_31_ + 12), ((this._loadInt((_31_ + 8))) & 95));
            return (this._loadInt((_31_ + 12)));
        }
        while (false);
        this._storeInt((_31_ + 12), (this._loadInt((_31_ + 8))));
        return (this._loadInt((_31_ + 12)));
    }

    public final int __toupper_l(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = toupper((this._loadInt((_32_ + 12))));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int __tre_mem_new_impl(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_32_ + 4), _31_);
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt((_32_ + 8))) == 0) {
                    break label$1;
                }
                memset((this._storeInt(_32_, (this._loadInt((_32_ + 4))))), 0, 24);
                break label$0;
            }
            while (false);
            this._storeInt(_32_, (calloc(1, 24)));
        }
        while (false);
        label$2:
        do {
            label$3:
            do {
                if ((this._loadInt(_32_)) == 0) {
                    break label$3;
                }
                this._storeInt((_32_ + 12), (this._loadInt(_32_)));
                break label$2;
            }
            while (false);
            this._storeInt((_32_ + 12), 0);
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final void __tre_mem_destroy(int _30_)
    {
        int _31_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 4), (this._loadInt((this._storeInt((_31_ + 12), _30_)))));
        label$1:
        do {
            label$0:
            while (true) {
                if ((this._loadInt((_31_ + 4))) == 0) {
                    break label$1;
                }
                free((this._loadInt((this._loadInt((_31_ + 4))))));
                this._storeInt((_31_ + 8), (this._loadInt(((this._loadInt((_31_ + 4))) + 4))));
                free((this._loadInt((_31_ + 4))));
                this._storeInt((_31_ + 4), (this._loadInt((_31_ + 8))));
                continue label$0;
            }
        }
        while (false);
        free((this._loadInt((_31_ + 12))));
        this._storeInt((0 + 4), (_31_ + 16));
        return;
    }

    public final int __tre_mem_alloc_impl(int _30_, int _31_, int _32_, int _33_, int _34_)
    {
        int _35_ = 0;
        this._storeInt(((_35_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 48))) + 40), _30_);
        this._storeInt((_35_ + 36), _31_);
        this._storeInt((_35_ + 32), _32_);
        this._storeInt((_35_ + 28), _33_);
        this._storeInt((_35_ + 24), _34_);
        label$0:
        do {
            label$1:
            do {
                if ((this._loadInt(((this._loadInt((_35_ + 40))) + 16))) == 0) {
                    break label$1;
                }
                this._storeInt((_35_ + 44), 0);
                break label$0;
            }
            while (false);
            label$2:
            do {
                label$3:
                do {
                    label$4:
                    do {
                        if (((this._loadInt(((this._loadInt((_35_ + 40))) + 12))) & 4294967295L) >= ((this._loadInt((_35_ + 24))) & 4294967295L)) {
                            break label$4;
                        }
                        label$5:
                        do {
                            label$6:
                            do {
                                label$7:
                                do {
                                    label$8:
                                    do {
                                        if ((this._loadInt((_35_ + 36))) == 0) {
                                            break label$8;
                                        }
                                        if ((this._loadInt((_35_ + 32))) == 0) {
                                            break label$7;
                                        }
                                        this._storeInt(((_34_ = this._loadInt((_35_ + 40))) + 12), 1024);
                                        this._storeInt((_34_ + 8), (this._loadInt((_35_ + 32))));
                                        break label$4;
                                    }
                                    while (false);
                                    if ((((this._loadInt((_35_ + 24))) << 3) & 4294967295L) < (1025 & 4294967295L)) {
                                        break label$6;
                                    }
                                    this._storeInt((_35_ + 12), ((this._loadInt((_35_ + 24))) << 3));
                                    break label$5;
                                }
                                while (false);
                                this._storeInt(((this._loadInt((_35_ + 40))) + 16), 1);
                                this._storeInt((_35_ + 44), 0);
                                break label$0;
                            }
                            while (false);
                            this._storeInt((_35_ + 12), 1024);
                        }
                        while (false);
                        if ((this._storeInt((_35_ + 16), (malloc(8)))) == 0) {
                            break label$3;
                        }
                        _34_ = malloc((this._loadInt((_35_ + 12))));
                        if ((this._storeInt((this._loadInt((_35_ + 16))), _34_)) == 0) {
                            break label$2;
                        }
                        this._storeInt(((this._loadInt((_35_ + 16))) + 4), 0);
                        label$9:
                        do {
                            if ((this._loadInt(((this._loadInt((_35_ + 40))) + 4))) == 0) {
                                break label$9;
                            }
                            this._storeInt(((this._loadInt(((this._loadInt((_35_ + 40))) + 4))) + 4), (this._loadInt((_35_ + 16))));
                        }
                        while (false);
                        label$10:
                        do {
                            if ((this._loadInt((this._loadInt((_35_ + 40))))) != 0) {
                                break label$10;
                            }
                            this._storeInt((this._loadInt((_35_ + 40))), (this._loadInt((_35_ + 16))));
                        }
                        while (false);
                        this._storeInt(((_34_ = this._loadInt((_35_ + 40))) + 8), (this._loadInt((this._storeInt((_34_ + 4), (this._loadInt((_35_ + 16))))))));
                        this._storeInt(((this._loadInt((_35_ + 40))) + 12), (this._loadInt((_35_ + 12))));
                    }
                    while (false);
                    _34_ = 0;
                    label$11:
                    do {
                        if ((((this._loadInt(((this._loadInt((_35_ + 40))) + 8))) + (this._loadInt((_35_ + 24)))) & 3) == 0) {
                            break label$11;
                        }
                        _34_ = 4 - (((this._loadInt(((this._loadInt((_35_ + 40))) + 8))) + (this._loadInt((_35_ + 24)))) & 3);
                    }
                    while (false);
                    this._storeInt((_35_ + 24), ((this._loadInt((_35_ + 24))) + _34_));
                    this._storeInt((_35_ + 20), (this._loadInt(((this._loadInt((_35_ + 40))) + 8))));
                    this._storeInt(((_34_ = this._loadInt((_35_ + 40))) + 8), ((this._loadInt((_34_ + 8))) + (_33_ = this._loadInt((_35_ + 24)))));
                    this._storeInt((_34_ + 12), ((this._loadInt((_34_ + 12))) - _33_));
                    label$12:
                    do {
                        if ((this._loadInt((_35_ + 28))) == 0) {
                            break label$12;
                        }
                        memset((this._loadInt((_35_ + 20))), 0, (this._loadInt((_35_ + 24))));
                    }
                    while (false);
                    this._storeInt((_35_ + 44), (this._loadInt((_35_ + 20))));
                    break label$0;
                }
                while (false);
                this._storeInt(((this._loadInt((_35_ + 40))) + 16), 1);
                this._storeInt((_35_ + 44), 0);
                break label$0;
            }
            while (false);
            free((this._loadInt((_35_ + 16))));
            this._storeInt(((this._loadInt((_35_ + 40))) + 16), 1);
            this._storeInt((_35_ + 44), 0);
        }
        while (false);
        _34_ = this._loadInt((_35_ + 44));
        this._storeInt((0 + 4), (_35_ + 48));
        return _34_;
    }

    public final double trunc(double _30_)
    {
        int _31_ = 0;
        this._storeDouble(((_31_ = (this._loadInt((0 + 4))) - 48) + 24), (this._storeDouble((_31_ + 32), _30_)));
        label$0:
        do {
            if ((this._storeInt((_31_ + 20), (((int) (((this._loadLong((_31_ + 24))) >>> 52L) & 2047L)) + -1011))) < 64) {
                break label$0;
            }
            this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 32))));
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        label$1:
        do {
            if ((this._loadInt((_31_ + 20))) > 11) {
                break label$1;
            }
            this._storeInt((_31_ + 20), 1);
        }
        while (false);
        label$2:
        do {
            if (((this._storeLong((_31_ + 8), (-1L >>> (this._loadLong((_31_ + 20)))))) & (this._loadLong((_31_ + 24)))) == 0L) {
                break label$2;
            }
            this._storeDouble(_31_, ((this._loadDouble((_31_ + 32))) + 1.3292279957849159E36));
            this._storeLong((_31_ + 24), ((this._loadLong((_31_ + 24))) & ((this._loadLong((_31_ + 8))) ^ -1L)));
            this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 24))));
            return (this._loadDouble((_31_ + 40)));
        }
        while (false);
        this._storeDouble((_31_ + 40), (this._loadDouble((_31_ + 32))));
        return (this._loadDouble((_31_ + 40)));
    }

    public final int truncate(int _30_, long _31_)
    {
        int _32_ = 0;
        int _33_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeLong((_32_ + 16), _31_);
        _30_ = this._loadInt((_32_ + 28));
        this._storeLong((_32_ + 8), _31_);
        _33_ = this._loadInt((_32_ + 8));
        this._storeLong(_32_, (this._loadLong((_32_ + 16))));
        _30_ = __syscall_ret((this.__syscall4.invoke(92, _30_, 0, _33_, (this._loadInt((_32_ + 4))))));
        this._storeInt((0 + 4), (_32_ + 32));
        return _30_;
    }

    public final float truncf(float _30_)
    {
        int _31_ = 0;
        this._storeFloat(((_31_ = (this._loadInt((0 + 4))) - 32) + 16), (this._storeFloat((_31_ + 24), _30_)));
        label$0:
        do {
            if ((this._storeInt((_31_ + 12), ((((this._loadInt((_31_ + 16))) >>> 23) & 255) + -118))) < 32) {
                break label$0;
            }
            this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
            return (this._loadFloat((_31_ + 28)));
        }
        while (false);
        label$1:
        do {
            if ((this._loadInt((_31_ + 12))) > 8) {
                break label$1;
            }
            this._storeInt((_31_ + 12), 1);
        }
        while (false);
        label$2:
        do {
            if (((this._storeInt((_31_ + 8), (-1 >>> (this._loadInt((_31_ + 12)))))) & (this._loadInt((_31_ + 16)))) == 0) {
                break label$2;
            }
            this._storeFloat((_31_ + 4), ((this._loadFloat((_31_ + 24))) + 1.329228E36f));
            this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 16))) & ((this._loadInt((_31_ + 8))) ^ -1)));
            this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 16))));
            return (this._loadFloat((_31_ + 28)));
        }
        while (false);
        this._storeFloat((_31_ + 28), (this._loadFloat((_31_ + 24))));
        return (this._loadFloat((_31_ + 28)));
    }

    public final void truncl(int _30_, long _31_, long _32_)
    {
        int _33_ = 0;
        this.__extenddftf2.invoke((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))), ((long) (this.__trunctfdf2.invoke((this._storeLong((_33_ + 16), _31_)), (this._storeLong((_33_ + 24), _32_))))));
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, (this._loadLong(_33_)));
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final int ttyname(int _30_)
    {
        int _31_ = 0;
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 4), (ttyname_r((this._storeInt((_31_ + 8), _30_)), 19703, 32)))) == 0) {
                    break label$1;
                }
                _30_ = this._loadInt((_31_ + 4));
                this._storeInt((__errno_location()), _30_);
                this._storeInt((_31_ + 12), 0);
                break label$0;
            }
            while (false);
            this._storeInt((_31_ + 12), 19703);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 12));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int ttyname_r(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 64))) + 56), _30_);
        this._storeInt((_33_ + 52), _31_);
        this._storeInt((_33_ + 48), _32_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    label$3:
                    do {
                        if ((isatty((this._loadInt((_33_ + 56))))) == 0) {
                            break label$3;
                        }
                        __procfdname((_33_ + 16), (this._loadInt((_33_ + 56))));
                        if ((this._storeInt((_33_ + 12), (readlink((_33_ + 16), (this._loadInt((_33_ + 52))), (this._loadInt((_33_ + 48))))))) <= -1) {
                            break label$2;
                        }
                        if ((this._loadInt((_33_ + 12))) != (this._loadInt((_33_ + 48)))) {
                            break label$1;
                        }
                        this._storeInt((_33_ + 60), 34);
                        break label$0;
                    }
                    while (false);
                    this._storeInt((_33_ + 60), 25);
                    break label$0;
                }
                while (false);
                this._storeInt((_33_ + 60), (this._loadInt((__errno_location()))));
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 60), (this._storeInt(((this._loadInt((_33_ + 52))) + (this._loadInt((_33_ + 12)))), 0)));
        }
        while (false);
        _32_ = this._loadInt((_33_ + 60));
        this._storeInt((0 + 4), (_33_ + 64));
        return _32_;
    }

    public final int ualarm(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_32_ + 24), _31_);
        _31_ = this._storeInt((_32_ + 16), (this._storeInt((_32_ + 8), 0)));
        this._storeInt((_32_ + 12), (this._loadInt((_32_ + 24))));
        this._storeInt((_30_ = _32_ + 20), (this._loadInt((_32_ + 28))));
        this.setitimer.invoke(_31_, (_32_ + 8), (_32_ + 8));
        _31_ = this._loadInt((_32_ + 16));
        _30_ = this._loadInt(_30_);
        this._storeInt((0 + 4), (_32_ + 32));
        return (_30_ + (_31_ * 1000000));
    }

    public final int ungetc(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 8), _30_);
        this._storeInt((_32_ + 4), _31_);
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._loadInt((_32_ + 8))) == -1) {
                        break label$2;
                    }
                    _31_ = 0;
                    label$3:
                    do {
                        if ((this._loadInt(((this._loadInt((_32_ + 4))) + 76))) < 0) {
                            break label$3;
                        }
                        _31_ = this.__lockfile.invoke((this._loadInt((_32_ + 4))));
                    }
                    while (false);
                    this._storeInt(_32_, _31_);
                    label$4:
                    do {
                        if ((this._loadInt(((this._loadInt((_32_ + 4))) + 4))) != 0) {
                            break label$4;
                        }
                        __toread((this._loadInt((_32_ + 4))));
                    }
                    while (false);
                    label$5:
                    do {
                        if ((this._loadInt(((this._loadInt((_32_ + 4))) + 4))) == 0) {
                            break label$5;
                        }
                        if (((this._loadInt(((_31_ = this._loadInt((_32_ + 4))) + 4))) & 4294967295L) > (((this._loadInt((_31_ + 44))) + -8) & 4294967295L)) {
                            break label$1;
                        }
                    }
                    while (false);
                    label$6:
                    do {
                        if ((this._loadInt(_32_)) == 0) {
                            break label$6;
                        }
                        this.__unlockfile.invoke((this._loadInt((_32_ + 4))));
                    }
                    while (false);
                    this._storeInt((_32_ + 12), -1);
                    break label$0;
                }
                while (false);
                this._storeInt((_32_ + 12), (this._loadInt((_32_ + 8))));
                break label$0;
            }
            while (false);
            this._storeInt((this._storeInt(((_31_ = this._loadInt((_32_ + 4))) + 4), ((this._loadInt((_31_ + 4))) + -1))), (this._loadInt((_32_ + 8))));
            this._storeInt(_31_, ((this._loadInt(_31_)) & -17));
            label$7:
            do {
                if ((this._loadInt(_32_)) == 0) {
                    break label$7;
                }
                this.__unlockfile.invoke((this._loadInt((_32_ + 4))));
            }
            while (false);
            this._storeInt((_32_ + 12), (this._loadInt((_32_ + 8))));
        }
        while (false);
        _31_ = this._loadInt((_32_ + 12));
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int unlink(int _30_)
    {
        int _31_ = 0;
        _30_ = __syscall_ret((this.__syscall1.invoke(10, (this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_)))));
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int unlinkat(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __syscall_ret((this.__syscall3.invoke(301, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_)));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int unsetenv(int _30_)
    {
        int _31_ = 0;
        int _32_ = 0;
        int _33_ = 0;
        int _34_ = 0;
        this._storeInt(((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 12), (strlen((this._storeInt((_31_ + 24), _30_)))));
        label$0:
        do {
            label$1:
            do {
                label$2:
                do {
                    if ((this._loadInt((this._loadInt((_31_ + 24))))) == 0) {
                        break label$2;
                    }
                    if ((strchr((this._loadInt((_31_ + 24))), 61)) == 0) {
                        break label$1;
                    }
                }
                while (false);
                this._storeInt((__errno_location()), 22);
                this._storeInt((_31_ + 28), -1);
                break label$0;
            }
            while (false);
            label$4:
            do {
                label$3:
                while (true) {
                    _30_ = this._storeInt((_31_ + 20), 0);
                    label$6:
                    do {
                        label$5:
                        while (true) {
                            _34_ = 0;
                            label$7:
                            do {
                                if ((this._loadInt(((this._loadInt((0 + 3912))) + ((this._loadInt((_31_ + 20))) << 2)))) == 0) {
                                    break label$7;
                                }
                                _34_ = 1;
                                if ((memcmp((this._loadInt((_31_ + 24))), (this._loadInt(((this._loadInt((_30_ + 3912))) + ((this._loadInt((_31_ + 20))) << 2)))), (this._loadInt((_31_ + 12))))) != 0) {
                                    break label$7;
                                }
                                _34_ = ((this._loadInt(((this._loadInt(((this._loadInt((_30_ + 3912))) + ((this._loadInt((_31_ + 20))) << 2)))) + (this._loadInt((_31_ + 12)))))) != 61) ? 1 : 0;
                            }
                            while (false);
                            if (_34_ == 0) {
                                break label$6;
                            }
                            this._storeInt((_31_ + 20), ((this._loadInt((_31_ + 20))) + 1));
                            continue label$5;
                        }
                    }
                    while (false);
                    if ((this._loadInt(((this._loadInt((_30_ + 3912))) + ((this._loadInt((_31_ + 20))) << 2)))) == 0) {
                        break label$4;
                    }
                    label$8:
                    do {
                        if ((this._loadInt((_30_ + 14288))) == 0) {
                            break label$8;
                        }
                        _34_ = this._storeInt((_31_ + 16), _30_);
                        label$10:
                        do {
                            label$9:
                            while (true) {
                                _32_ = 0;
                                label$11:
                                do {
                                    if ((this._loadInt(((this._loadInt((0 + 14288))) + ((this._loadInt((_31_ + 16))) << 2)))) == 0) {
                                        break label$11;
                                    }
                                    _32_ = ((this._loadInt(((this._loadInt((_34_ + 14288))) + ((this._loadInt((_31_ + 16))) << 2)))) != (this._loadInt(((this._loadInt((_34_ + 3912))) + ((this._loadInt((_31_ + 20))) << 2))))) ? 1 : 0;
                                }
                                while (false);
                                if (_32_ == 0) {
                                    break label$10;
                                }
                                this._storeInt((_31_ + 16), ((this._loadInt((_31_ + 16))) + 1));
                                continue label$9;
                            }
                        }
                        while (false);
                        free((this._loadInt(((this._loadInt((_34_ + 14288))) + ((this._loadInt((_31_ + 16))) << 2)))));
                        label$13:
                        do {
                            label$12:
                            while (true) {
                                if ((this._loadInt(((this._loadInt((_34_ + 14288))) + ((this._loadInt((_31_ + 16))) << 2)))) == 0) {
                                    break label$13;
                                }
                                this._storeInt(((_32_ = this._loadInt((_34_ + 14288))) + ((_33_ = this._loadInt((_31_ + 16))) << 2)), (this._loadInt((_32_ + ((this._storeInt((_31_ + 16), (_33_ + 1))) << 2)))));
                                continue label$12;
                            }
                        }
                        while (false);
                    }
                    while (false);
                    label$14:
                    while (true) {
                        if ((this._loadInt(((this._loadInt((_30_ + 3912))) + ((this._loadInt((_31_ + 20))) << 2)))) == 0) {
                            continue label$3;
                        }
                        this._storeInt(((_34_ = this._loadInt((_30_ + 3912))) + ((_32_ = this._loadInt((_31_ + 20))) << 2)), (this._loadInt((_34_ + ((this._storeInt((_31_ + 20), (_32_ + 1))) << 2)))));
                        continue label$14;
                    }
                }
            }
            while (false);
            this._storeInt((_31_ + 28), 0);
        }
        while (false);
        _30_ = this._loadInt((_31_ + 28));
        this._storeInt((0 + 4), (_31_ + 32));
        return _30_;
    }

    public final int usleep(int _30_)
    {
        int _31_ = 0;
        this._storeInt((_31_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))), ((this._storeInt((_31_ + 12), _30_)) / 1000000));
        this._storeInt((_31_ + 4), (((this._loadInt((_31_ + 12))) % 1000000) * 1000));
        _30_ = this.nanosleep.invoke(_31_, _31_);
        this._storeInt((0 + 4), (_31_ + 16));
        return _30_;
    }

    public final int vasprintf(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        _32_ = this._storeInt((_33_ + 12), (this._storeInt((_33_ + 16), _32_)));
        label$0:
        do {
            label$1:
            do {
                if ((this._storeInt((_33_ + 8), (this.vsnprintf.invoke(0, 0, (this._loadInt((_33_ + 20))), _32_)))) < 0) {
                    break label$1;
                }
                _32_ = malloc(((this._loadInt((_33_ + 8))) + 1));
                if ((this._storeInt((this._loadInt((_33_ + 24))), _32_)) == 0) {
                    break label$1;
                }
                this._storeInt((_33_ + 28), (this.vsnprintf.invoke((this._loadInt((this._loadInt((_33_ + 24))))), ((this._loadInt((_33_ + 8))) + 1), (this._loadInt((_33_ + 20))), (this._loadInt((_33_ + 16))))));
                break label$0;
            }
            while (false);
            this._storeInt((_33_ + 28), -1);
        }
        while (false);
        _32_ = this._loadInt((_33_ + 28));
        this._storeInt((0 + 4), (_33_ + 32));
        return _32_;
    }

    public final int __libc_get_version()
    {
        return 19744;
    }

    public final int vprintf(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = this.vfprintf.invoke((this._loadInt((0 + 16116))), (this._loadInt((_32_ + 12))), _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int vscanf(int _30_, int _31_)
    {
        int _32_ = 0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_32_ + 8), _31_);
        _31_ = this.vfscanf.invoke((this._loadInt((0 + 14932))), (this._loadInt((_32_ + 12))), _31_);
        this._storeInt((0 + 4), (_32_ + 16));
        return _31_;
    }

    public final int vsprintf(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = this.vsnprintf.invoke((this._loadInt((_33_ + 12))), 2147483647, (this._loadInt((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int vsscanf(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 160))) + 156), _30_);
        this._storeInt((_33_ + 152), _31_);
        this._storeInt((_33_ + 148), _32_);
        this._storeInt(((_33_ = memset(_33_, 0, 144)) + 32), 10);
        this._storeInt((_33_ + 76), -1);
        this._storeInt((_33_ + 84), (this._storeInt((_33_ + 44), (this._loadInt((_33_ + 156))))));
        _32_ = this.vfscanf.invoke(_33_, (this._loadInt((_33_ + 152))), (this._loadInt((_33_ + 148))));
        this._storeInt((0 + 4), (_33_ + 160));
        return _32_;
    }

    public final int do_read(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __string_read((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final float wcstof(int _30_, int _31_)
    {
        int _32_ = 0;
        float _33_ = 0.0f;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_32_ + 24), _31_);
        wcstox(_32_, (this._loadInt((_32_ + 28))), _31_, 0);
        _33_ = this.__trunctfsf2.invoke((this._loadLong(_32_)), (this._loadLong((_32_ + 8))));
        this._storeInt((0 + 4), (_32_ + 32));
        return _33_;
    }

    public final void wcstox(int _30_, int _31_, int _32_, int _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 272))) + 268), _31_);
        this._storeInt((_34_ + 264), _32_);
        this._storeInt((_34_ + 260), _33_);
        this._storeInt((_34_ + 256), (this._loadInt((_34_ + 268))));
        memset((_34_ + 48), 0, 144);
        this._storeInt((_34_ + 56), 0);
        this._storeLong((_34_ + 48), 0L);
        this._storeInt((_34_ + 92), ((_34_ + 192) | 4));
        this._storeInt((_34_ + 96), 60);
        this._storeInt((_34_ + 124), -1);
        this._storeInt((_34_ + 80), 11);
        label$1:
        do {
            label$0:
            while (true) {
                if ((this.iswspace.invoke((this._loadInt((this._loadInt((_34_ + 256))))))) == 0) {
                    break label$1;
                }
                this._storeInt((_34_ + 256), ((this._loadInt((_34_ + 256))) + 4));
                continue label$0;
            }
        }
        while (false);
        this._storeInt((_34_ + 132), (this._loadInt((_34_ + 256))));
        __shlim((_34_ + 48), 0L);
        this.__floatscan.invoke(_34_, (_34_ + 48), (this._loadInt((_34_ + 260))), 1);
        this._storeLong((_34_ + 32), (this._loadLong(_34_)));
        this._storeLong((_34_ + 40), (this._loadLong((_34_ + 8))));
        label$2:
        do {
            if ((this._loadInt((_34_ + 264))) == 0) {
                break label$2;
            }
            label$3:
            do {
                label$4:
                do {
                    if ((this._storeInt((_34_ + 28), ((int) ((this._loadLong((_34_ + 168))) + (((this._loadInt((_34_ + 52))) - (this._loadInt((_34_ + 56)))) & 4294967295L))))) == 0) {
                        break label$4;
                    }
                    _33_ = (this._loadInt((_34_ + 256))) + ((this._loadInt((_34_ + 28))) << 2);
                    break label$3;
                }
                while (false);
                _33_ = this._loadInt((_34_ + 268));
            }
            while (false);
            this._storeInt((this._loadInt((_34_ + 264))), _33_);
        }
        while (false);
        this._storeLong(_30_, (this._loadLong((_34_ + 32))));
        this._storeLong((_30_ + 8), (this._loadLong((_34_ + 40))));
        this._storeInt((0 + 4), (_34_ + 272));
        return;
    }

    public final int do_read$2e$314(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            if ((this._loadInt((this._storeInt((_33_ + 8), (this._loadInt(((this._loadInt((_33_ + 24))) + 84))))))) != 0) {
                break label$0;
            }
            this._storeInt((_33_ + 8), 19748);
        }
        while (false);
        _30_ = this._storeInt((_33_ + 12), 0);
        label$2:
        do {
            label$1:
            while (true) {
                _32_ = 0;
                label$3:
                do {
                    if (((this._loadInt((_33_ + 12))) & 4294967295L) >= ((this._loadInt(((this._loadInt((_33_ + 24))) + 48))) & 4294967295L)) {
                        break label$3;
                    }
                    _32_ = ((this._loadInt(((this._loadInt((_33_ + 8))) + ((this._loadInt((_33_ + 12))) << 2)))) != _30_) ? 1 : 0;
                }
                while (false);
                if (_32_ == 0) {
                    break label$2;
                }
                _32_ = 64;
                label$4:
                do {
                    if (((this._loadInt(((this._loadInt((_33_ + 8))) + ((this._loadInt((_33_ + 12))) << 2)))) & 4294967295L) > (127 & 4294967295L)) {
                        break label$4;
                    }
                    _32_ = this._loadInt(((this._loadInt((_33_ + 8))) + ((this._loadInt((_33_ + 12))) << 2)));
                }
                while (false);
                this._storeInt(((this._loadInt(((this._loadInt((_33_ + 24))) + 44))) + (_31_ = this._loadInt((_33_ + 12)))), _32_);
                this._storeInt((_33_ + 12), (_31_ + 1));
                continue label$1;
            }
        }
        while (false);
        this._storeInt(((_32_ = this._loadInt((_33_ + 24))) + 8), ((this._storeInt((_32_ + 4), (this._loadInt((_32_ + 44))))) + (this._loadInt((_33_ + 12)))));
        this._storeInt(((this._loadInt((_33_ + 24))) + 84), ((this._loadInt((_33_ + 8))) + ((this._loadInt((_33_ + 12))) << 2)));
        label$5:
        do {
            if ((this._loadInt((_33_ + 12))) == 0) {
                break label$5;
            }
            if ((this._loadInt((_33_ + 16))) == 0) {
                break label$5;
            }
            _32_ = this._loadInt((_33_ + 20));
            this._storeInt(((_31_ = this._loadInt((_33_ + 24))) + 4), ((this._storeInt((_33_ + 28), 1)) + (_31_ = this._loadInt((_31_ + 4)))));
            this._storeInt(_32_, (this._loadInt(_31_)));
            return (this._loadInt((_33_ + 28)));
        }
        while (false);
        this._storeInt((_33_ + 28), 0);
        return (this._loadInt((_33_ + 28)));
    }

    public final double wcstod(int _30_, int _31_)
    {
        int _32_ = 0;
        double _33_ = 0.0;
        this._storeInt(((_32_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _30_);
        this._storeInt((_32_ + 24), _31_);
        wcstox(_32_, (this._loadInt((_32_ + 28))), _31_, 1);
        _33_ = this.__trunctfdf2.invoke((this._loadLong(_32_)), (this._loadLong((_32_ + 8))));
        this._storeInt((0 + 4), (_32_ + 32));
        return _33_;
    }

    public final void wcstold(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 32))) + 28), _31_);
        this._storeInt((_33_ + 24), _32_);
        wcstox(_33_, (this._loadInt((_33_ + 28))), _32_, 2);
        _34_ = this._loadLong(_33_);
        this._storeLong((_30_ + 8), (this._loadLong((_33_ + 8))));
        this._storeLong(_30_, _34_);
        this._storeInt((0 + 4), (_33_ + 32));
        return;
    }

    public final long wcstoull(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = wcstox$2e$316((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, -1L);
        this._storeInt((0 + 4), (_33_ + 16));
        return _34_;
    }

    public final long wcstox$2e$316(int _30_, int _31_, int _32_, long _33_)
    {
        int _34_ = 0;
        this._storeInt(((_34_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 256))) + 252), _30_);
        this._storeInt((_34_ + 248), _31_);
        this._storeInt((_34_ + 244), _32_);
        this._storeLong((_34_ + 232), _33_);
        this._storeInt((_34_ + 228), (this._loadInt((_34_ + 252))));
        memset((_34_ + 16), 0, 144);
        this._storeInt((_34_ + 24), 0);
        this._storeLong((_34_ + 16), 0L);
        this._storeInt((_34_ + 60), ((_34_ + 160) | 4));
        this._storeInt((_34_ + 64), 60);
        this._storeInt((_34_ + 92), -1);
        this._storeInt((_34_ + 48), 12);
        label$1:
        do {
            label$0:
            while (true) {
                if ((this.iswspace.invoke((this._loadInt((this._loadInt((_34_ + 228))))))) == 0) {
                    break label$1;
                }
                this._storeInt((_34_ + 228), ((this._loadInt((_34_ + 228))) + 4));
                continue label$0;
            }
        }
        while (false);
        this._storeInt((_34_ + 100), (this._loadInt((_34_ + 228))));
        __shlim((_34_ + 16), 0L);
        this._storeLong((_34_ + 8), (__intscan((_34_ + 16), (this._loadInt((_34_ + 244))), 1, (this._loadLong((_34_ + 232))))));
        label$2:
        do {
            if ((this._loadInt((_34_ + 248))) == 0) {
                break label$2;
            }
            label$3:
            do {
                label$4:
                do {
                    if ((this._storeInt((_34_ + 4), ((int) ((this._loadLong((_34_ + 136))) + (((this._loadInt((_34_ + 20))) - (this._loadInt((_34_ + 24)))) & 4294967295L))))) == 0) {
                        break label$4;
                    }
                    _32_ = (this._loadInt((_34_ + 228))) + ((this._loadInt((_34_ + 4))) << 2);
                    break label$3;
                }
                while (false);
                _32_ = this._loadInt((_34_ + 252));
            }
            while (false);
            this._storeInt((this._loadInt((_34_ + 248))), _32_);
        }
        while (false);
        _33_ = this._loadLong((_34_ + 8));
        this._storeInt((0 + 4), (_34_ + 256));
        return _33_;
    }

    public final int do_read$2e$317(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = (this._loadInt((0 + 4))) - 32) + 24), _30_);
        this._storeInt((_33_ + 20), _31_);
        this._storeInt((_33_ + 16), _32_);
        label$0:
        do {
            if ((this._loadInt((this._storeInt((_33_ + 8), (this._loadInt(((this._loadInt((_33_ + 24))) + 84))))))) != 0) {
                break label$0;
            }
            this._storeInt((_33_ + 8), 19756);
        }
        while (false);
        _30_ = this._storeInt((_33_ + 12), 0);
        label$2:
        do {
            label$1:
            while (true) {
                _32_ = 0;
                label$3:
                do {
                    if (((this._loadInt((_33_ + 12))) & 4294967295L) >= ((this._loadInt(((this._loadInt((_33_ + 24))) + 48))) & 4294967295L)) {
                        break label$3;
                    }
                    _32_ = ((this._loadInt(((this._loadInt((_33_ + 8))) + ((this._loadInt((_33_ + 12))) << 2)))) != _30_) ? 1 : 0;
                }
                while (false);
                if (_32_ == 0) {
                    break label$2;
                }
                _32_ = 64;
                label$4:
                do {
                    if (((this._loadInt(((this._loadInt((_33_ + 8))) + ((this._loadInt((_33_ + 12))) << 2)))) & 4294967295L) > (127 & 4294967295L)) {
                        break label$4;
                    }
                    _32_ = this._loadInt(((this._loadInt((_33_ + 8))) + ((this._loadInt((_33_ + 12))) << 2)));
                }
                while (false);
                this._storeInt(((this._loadInt(((this._loadInt((_33_ + 24))) + 44))) + (_31_ = this._loadInt((_33_ + 12)))), _32_);
                this._storeInt((_33_ + 12), (_31_ + 1));
                continue label$1;
            }
        }
        while (false);
        this._storeInt(((_32_ = this._loadInt((_33_ + 24))) + 8), ((this._storeInt((_32_ + 4), (this._loadInt((_32_ + 44))))) + (this._loadInt((_33_ + 12)))));
        this._storeInt(((this._loadInt((_33_ + 24))) + 84), ((this._loadInt((_33_ + 8))) + ((this._loadInt((_33_ + 12))) << 2)));
        label$5:
        do {
            if ((this._loadInt((_33_ + 12))) == 0) {
                break label$5;
            }
            if ((this._loadInt((_33_ + 16))) == 0) {
                break label$5;
            }
            _32_ = this._loadInt((_33_ + 20));
            this._storeInt(((_31_ = this._loadInt((_33_ + 24))) + 4), ((this._storeInt((_33_ + 28), 1)) + (_31_ = this._loadInt((_31_ + 4)))));
            this._storeInt(_32_, (this._loadInt(_31_)));
            return (this._loadInt((_33_ + 28)));
        }
        while (false);
        this._storeInt((_33_ + 28), 0);
        return (this._loadInt((_33_ + 28)));
    }

    public final long wcstoll(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = wcstox$2e$316((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, -9223372036854775808L);
        this._storeInt((0 + 4), (_33_ + 16));
        return _34_;
    }

    public final int wcstoul(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = wcstox$2e$316((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, 4294967295L);
        this._storeInt((0 + 4), (_33_ + 16));
        return ((int) _34_);
    }

    public final int wcstol(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = wcstox$2e$316((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, 2147483648L);
        this._storeInt((0 + 4), (_33_ + 16));
        return ((int) _34_);
    }

    public final long wcstoimax(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = wcstoll((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _34_;
    }

    public final long wcstoumax(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        long _34_ = 0L;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _34_ = wcstoull((this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_);
        this._storeInt((0 + 4), (_33_ + 16));
        return _34_;
    }

    public final int write(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __syscall_ret((this.__syscall_cp.invoke(4, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, 0, 0, 0)));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final int writev(int _30_, int _31_, int _32_)
    {
        int _33_ = 0;
        this._storeInt(((_33_ = this._storeInt((0 + 4), ((this._loadInt((0 + 4))) - 16))) + 12), _30_);
        this._storeInt((_33_ + 8), _31_);
        this._storeInt((_33_ + 4), _32_);
        _32_ = __syscall_ret((this.__syscall_cp.invoke(146, (this._loadInt((_33_ + 12))), (this._loadInt((_33_ + 8))), _32_, 0, 0, 0)));
        this._storeInt((0 + 4), (_33_ + 16));
        return _32_;
    }

    public final void __wasm_nullptr()
    {
        throw (new UnreachableException());
    }

    public final int __importThunk___stdio_write(int _30_, int _31_, int _32_)
    {
        return (this.__stdio_write.invoke(_30_, _31_, _32_));
    }

    public final int __importThunk___stdout_write(int _30_, int _31_, int _32_)
    {
        return (this.__stdout_write.invoke(_30_, _31_, _32_));
    }
}
